// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgBase.proto

package packet.msgbase;

public final class MsgBase {
  private MsgBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code packet.msgbase.PacketType}
   */
  public enum PacketType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Dump = 1;</code>
     *
     * <pre>
     *存快照，调试用
     * </pre>
     */
    Dump(0, 1),
    /**
     * <code>HEARTBEAT = 1001;</code>
     *
     * <pre>
     ***********帐号相关*********&#47;/
     * </pre>
     */
    HEARTBEAT(1, 1001),
    /**
     * <code>LoginRequest = 1002;</code>
     *
     * <pre>
     *登录
     * </pre>
     */
    LoginRequest(2, 1002),
    /**
     * <code>AuthRequest = 1003;</code>
     *
     * <pre>
     *会话认证
     * </pre>
     */
    AuthRequest(3, 1003),
    /**
     * <code>GlobalMsgSyn = 1004;</code>
     *
     * <pre>
     *全局信息提示
     * </pre>
     */
    GlobalMsgSyn(4, 1004),
    /**
     * <code>VistorRegisterRequest = 1005;</code>
     *
     * <pre>
     *游客注册
     * </pre>
     */
    VistorRegisterRequest(5, 1005),
    /**
     * <code>VistorRegisterResponse = 1006;</code>
     */
    VistorRegisterResponse(6, 1006),
    /**
     * <code>RegisterRequest = 1007;</code>
     *
     * <pre>
     *普通帐号注册
     * </pre>
     */
    RegisterRequest(7, 1007),
    /**
     * <code>RegisterResponse = 1008;</code>
     */
    RegisterResponse(8, 1008),
    /**
     * <code>UserInfoSyn = 1009;</code>
     *
     * <pre>
     *用户属性发生变化
     * </pre>
     */
    UserInfoSyn(9, 1009),
    /**
     * <code>ModifyUserInfoRequest = 1010;</code>
     *
     * <pre>
     *修改用户信息
     * </pre>
     */
    ModifyUserInfoRequest(10, 1010),
    /**
     * <code>ReconnetLogin = 1011;</code>
     *
     * <pre>
     *修改用户信息
     * </pre>
     */
    ReconnetLogin(11, 1011),
    /**
     * <code>NeedBindInviteCode = 1012;</code>
     *
     * <pre>
     *登录时未绑定上级推送用户绑定邀请码
     * </pre>
     */
    NeedBindInviteCode(12, 1012),
    /**
     * <code>SubmitInviteCodeRequest = 1013;</code>
     *
     * <pre>
     *提交邀请码请求
     * </pre>
     */
    SubmitInviteCodeRequest(13, 1013),
    /**
     * <code>SubmitInviteCodeResponse = 1014;</code>
     *
     * <pre>
     *提交邀请码回复
     * </pre>
     */
    SubmitInviteCodeResponse(14, 1014),
    /**
     * <code>NeedUpdate = 1015;</code>
     *
     * <pre>
     *需要更新(登陆时验证)
     * </pre>
     */
    NeedUpdate(15, 1015),
    /**
     * <code>EnrollRequest = 2001;</code>
     *
     * <pre>
     ***********游戏相关*********&#47;/
     * </pre>
     */
    EnrollRequest(16, 2001),
    /**
     * <code>ReadyRequest = 2002;</code>
     *
     * <pre>
     *准备游戏
     * </pre>
     */
    ReadyRequest(17, 2002),
    /**
     * <code>ChangeDeskRequest = 2003;</code>
     *
     * <pre>
     *换桌
     * </pre>
     */
    ChangeDeskRequest(18, 2003),
    /**
     * <code>KickOutSyn = 2004;</code>
     *
     * <pre>
     *强制下线, 同一个帐号不能多处登录、房主踢人
     * </pre>
     */
    KickOutSyn(19, 2004),
    /**
     * <code>ChatRequest = 2005;</code>
     *
     * <pre>
     *聊天
     * </pre>
     */
    ChatRequest(20, 2005),
    /**
     * <code>Back2HallRequest = 2006;</code>
     *
     * <pre>
     *返回大厅
     * </pre>
     */
    Back2HallRequest(21, 2006),
    /**
     * <code>PlayerGamingSyn = 2007;</code>
     *
     * <pre>
     *推送当前玩家正在游戏的消息
     * </pre>
     */
    PlayerGamingSyn(22, 2007),
    /**
     * <code>PlayerSitSyn = 2008;</code>
     *
     * <pre>
     *有玩家进入桌子
     * </pre>
     */
    PlayerSitSyn(23, 2008),
    /**
     * <code>AwayGameRequest = 2009;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    AwayGameRequest(24, 2009),
    /**
     * <code>PlayerAwaySyn = 2010;</code>
     *
     * <pre>
     *有玩家离开桌子
     * </pre>
     */
    PlayerAwaySyn(25, 2010),
    /**
     * <code>PlayerComebackSyn = 2011;</code>
     *
     * <pre>
     *玩家回来
     * </pre>
     */
    PlayerComebackSyn(26, 2011),
    /**
     * <code>PlayerOfflineSyn = 2012;</code>
     *
     * <pre>
     *有玩家掉线
     * </pre>
     */
    PlayerOfflineSyn(27, 2012),
    /**
     * <code>PlayerReconnectSyn = 2013;</code>
     *
     * <pre>
     *有玩家重连		
     * </pre>
     */
    PlayerReconnectSyn(28, 2013),
    /**
     * <code>ExitGameRequest = 2014;</code>
     *
     * <pre>
     *退出游戏
     * </pre>
     */
    ExitGameRequest(29, 2014),
    /**
     * <code>PlayerExitSyn = 2015;</code>
     *
     * <pre>
     *有玩家退出游戏
     * </pre>
     */
    PlayerExitSyn(30, 2015),
    /**
     * <code>ReadySyn = 2016;</code>
     *
     * <pre>
     *告知客户端某玩家已经准备好
     * </pre>
     */
    ReadySyn(31, 2016),
    /**
     * <code>GameStartSyn = 2017;</code>
     *
     * <pre>
     *告知客户端游戏已开始
     * </pre>
     */
    GameStartSyn(32, 2017),
    /**
     * <code>CreateVipRoomRequest = 2018;</code>
     *
     * <pre>
     *创建vip房间
     * </pre>
     */
    CreateVipRoomRequest(33, 2018),
    /**
     * <code>EnterVipRoomRequest = 2019;</code>
     *
     * <pre>
     *加入vip房间
     * </pre>
     */
    EnterVipRoomRequest(34, 2019),
    /**
     * <code>KickPlayerRequest = 2020;</code>
     *
     * <pre>
     *vip房间踢人
     * </pre>
     */
    KickPlayerRequest(35, 2020),
    /**
     * <code>VipRoomListReuqest = 2021;</code>
     *
     * <pre>
     *请求拉取vip房间列表
     * </pre>
     */
    VipRoomListReuqest(36, 2021),
    /**
     * <code>VipRoomListSyn = 2022;</code>
     *
     * <pre>
     *推送vip房间列表
     * </pre>
     */
    VipRoomListSyn(37, 2022),
    /**
     * <code>DismissVipRoomRequest = 2023;</code>
     *
     * <pre>
     *解散vip房间	
     * </pre>
     */
    DismissVipRoomRequest(38, 2023),
    /**
     * <code>GameChatMsgRequest = 2024;</code>
     *
     * <pre>
     *聊天信息
     * </pre>
     */
    GameChatMsgRequest(39, 2024),
    /**
     * <code>GameChatMsgSyn = 2025;</code>
     */
    GameChatMsgSyn(40, 2025),
    /**
     * <code>HangupRequest = 2026;</code>
     */
    HangupRequest(41, 2026),
    /**
     * <code>HangupSyn = 2027;</code>
     */
    HangupSyn(42, 2027),
    /**
     * <code>CancelHangupRequest = 2028;</code>
     */
    CancelHangupRequest(43, 2028),
    /**
     * <code>DeskDestorySyn = 2029;</code>
     */
    DeskDestorySyn(44, 2029),
    /**
     * <code>LogoutSyn = 2030;</code>
     */
    LogoutSyn(45, 2030),
    /**
     * <code>DissmissVoteSyn = 2031;</code>
     */
    DissmissVoteSyn(46, 2031),
    /**
     * <code>PlayerGamingSynInquire = 2032;</code>
     *
     * <pre>
     *查询是否有进行中的游戏
     * </pre>
     */
    PlayerGamingSynInquire(47, 2032),
    /**
     * <code>BackGameRequest = 2033;</code>
     *
     * <pre>
     *返回游戏
     * </pre>
     */
    BackGameRequest(48, 2033),
    /**
     * <code>MultiMatchEnrollRequest = 2034;</code>
     *
     * <pre>
     *比赛场报名
     * </pre>
     */
    MultiMatchEnrollRequest(49, 2034),
    /**
     * <code>ExitMultiMatchRequest = 2035;</code>
     *
     * <pre>
     *比赛场退出
     * </pre>
     */
    ExitMultiMatchRequest(50, 2035),
    /**
     * <code>DissmissMultiMatch = 2036;</code>
     *
     * <pre>
     *解散比赛场比赛
     * </pre>
     */
    DissmissMultiMatch(51, 2036),
    /**
     * <code>MultiMatchStartNotify = 2037;</code>
     *
     * <pre>
     *比赛场一轮开始(服务端单向推送)
     * </pre>
     */
    MultiMatchStartNotify(52, 2037),
    /**
     * <code>WaitNextMatchStart = 2038;</code>
     *
     * <pre>
     *比赛场玩家打完一轮中所有局数的等待界面(服务端单向推送)
     * </pre>
     */
    WaitNextMatchStart(53, 2038),
    /**
     * <code>FinishMultiMatch = 2039;</code>
     *
     * <pre>
     *比赛场比赛结束
     * </pre>
     */
    FinishMultiMatch(54, 2039),
    /**
     * <code>MultiMatchRankSyn = 2040;</code>
     *
     * <pre>
     *同步排行榜信息
     * </pre>
     */
    MultiMatchRankSyn(55, 2040),
    /**
     * <code>MultiMatchPlayerNum = 2041;</code>
     *
     * <pre>
     *比赛场玩家人数
     * </pre>
     */
    MultiMatchPlayerNum(56, 2041),
    /**
     * <code>MultiMatchEnrollSynWithLogin = 2042;</code>
     *
     * <pre>
     *玩家登录检测比赛场报名情况
     * </pre>
     */
    MultiMatchEnrollSynWithLogin(57, 2042),
    /**
     * <code>SignSynRequest = 2043;</code>
     *
     * <pre>
     *同步签到消息(用户打开面板显示)
     * </pre>
     */
    SignSynRequest(58, 2043),
    /**
     * <code>SignSynResponse = 2044;</code>
     *
     * <pre>
     *同步签到消息(用户打开面板显示)
     * </pre>
     */
    SignSynResponse(59, 2044),
    /**
     * <code>SignRequest = 2045;</code>
     *
     * <pre>
     *签到
     * </pre>
     */
    SignRequest(60, 2045),
    /**
     * <code>SignResponse = 2046;</code>
     *
     * <pre>
     *签到回复
     * </pre>
     */
    SignResponse(61, 2046),
    /**
     * <code>ActivityStartNotify = 2047;</code>
     *
     * <pre>
     *活动开始提示
     * </pre>
     */
    ActivityStartNotify(62, 2047),
    /**
     * <code>PrayRequest = 2048;</code>
     *
     * <pre>
     *祈福请求
     * </pre>
     */
    PrayRequest(63, 2048),
    /**
     * <code>PrayResponse = 2049;</code>
     *
     * <pre>
     *祈福回复
     * </pre>
     */
    PrayResponse(64, 2049),
    /**
     * <code>SymplecticRunnerRequest = 2050;</code>
     *
     * <pre>
     *轮盘
     * </pre>
     */
    SymplecticRunnerRequest(65, 2050),
    /**
     * <code>SymplecticRunnerResponse = 2051;</code>
     *
     * <pre>
     *轮盘回复
     * </pre>
     */
    SymplecticRunnerResponse(66, 2051),
    /**
     * <code>ShouChongSyn = 2052;</code>
     *
     * <pre>
     *是否有首冲
     * </pre>
     */
    ShouChongSyn(67, 2052),
    /**
     * <code>ActivityFinishNotify = 2053;</code>
     *
     * <pre>
     *活动结束提示
     * </pre>
     */
    ActivityFinishNotify(68, 2053),
    /**
     * <code>VideoRequest = 2054;</code>
     *
     * <pre>
     *请求回放
     * </pre>
     */
    VideoRequest(69, 2054),
    /**
     * <code>VideoResponse = 2055;</code>
     *
     * <pre>
     *回复回放
     * </pre>
     */
    VideoResponse(70, 2055),
    /**
     * <code>DDZClearCardInDesk = 2056;</code>
     *
     * <pre>
     *斗地主清除桌面牌,已废弃
     * </pre>
     */
    DDZClearCardInDesk(71, 2056),
    /**
     * <code>StartGameRequest = 2057;</code>
     *
     * <pre>
     *扎金花开始游戏
     * </pre>
     */
    StartGameRequest(72, 2057),
    /**
     * <code>DissmissVoteResponse = 2058;</code>
     *
     * <pre>
     *回复解散
     * </pre>
     */
    DissmissVoteResponse(73, 2058),
    /**
     * <code>PlayerSitRequst = 2059;</code>
     *
     * <pre>
     *玩家坐下
     * </pre>
     */
    PlayerSitRequst(74, 2059),
    /**
     * <code>PlayerExitPosNotExitRoomRequst = 2060;</code>
     *
     * <pre>
     *玩家离开座位不离开房间
     * </pre>
     */
    PlayerExitPosNotExitRoomRequst(75, 2060),
    /**
     * <code>PlayerExitPosNotExitRoomResponse = 2061;</code>
     *
     * <pre>
     *玩家离开座位不离开房间
     * </pre>
     */
    PlayerExitPosNotExitRoomResponse(76, 2061),
    /**
     * <code>VipRoomPlayerRequest = 2062;</code>
     *
     * <pre>
     *查看房间玩家
     * </pre>
     */
    VipRoomPlayerRequest(77, 2062),
    /**
     * <code>VipRoomPlayerResponse = 2063;</code>
     *
     * <pre>
     *查看房间玩家
     * </pre>
     */
    VipRoomPlayerResponse(78, 2063),
    /**
     * <code>ClubInfoReq = 2064;</code>
     *
     * <pre>
     *俱乐部Req(打开俱乐部面板或者切换到俱乐部面板)
     * </pre>
     */
    ClubInfoReq(79, 2064),
    /**
     * <code>ClubInfoRsp = 2065;</code>
     *
     * <pre>
     *俱乐部Rsp(打开俱乐部面板或者切换到俱乐部面板)
     * </pre>
     */
    ClubInfoRsp(80, 2065),
    /**
     * <code>ClubSyn = 2066;</code>
     *
     * <pre>
     *俱乐部成员对象(积分操作,权限操作都推送此消息)
     * </pre>
     */
    ClubSyn(81, 2066),
    /**
     * <code>ClubMemberReq = 2067;</code>
     *
     * <pre>
     *俱乐部成员列表Req
     * </pre>
     */
    ClubMemberReq(82, 2067),
    /**
     * <code>ClubMemberRsp = 2068;</code>
     *
     * <pre>
     *俱乐部成员列表Rsp
     * </pre>
     */
    ClubMemberRsp(83, 2068),
    /**
     * <code>ClubMemberSyn = 2069;</code>
     *
     * <pre>
     *俱乐部成员对象(积分操作,权限操作都推送此消息)
     * </pre>
     */
    ClubMemberSyn(84, 2069),
    /**
     * <code>ClubRoomListReq = 2070;</code>
     *
     * <pre>
     *俱乐部房间列表Req
     * </pre>
     */
    ClubRoomListReq(85, 2070),
    /**
     * <code>ClubRoomListRsp = 2071;</code>
     *
     * <pre>
     *俱乐部房间列表Rsp
     * </pre>
     */
    ClubRoomListRsp(86, 2071),
    /**
     * <code>ClubConfigReq = 2072;</code>
     *
     * <pre>
     *俱乐部设置Req
     * </pre>
     */
    ClubConfigReq(87, 2072),
    /**
     * <code>ClubConfigSyn = 2073;</code>
     *
     * <pre>
     *聊天列表Rsp
     * </pre>
     */
    ClubConfigSyn(88, 2073),
    /**
     * <code>ApplyInfoRsp = 2074;</code>
     *
     * <pre>
     *聊天内容Req
     * </pre>
     */
    ApplyInfoRsp(89, 2074),
    /**
     * <code>ApplyInfo = 2075;</code>
     *
     * <pre>
     *聊天内容Rsp
     * </pre>
     */
    ApplyInfo(90, 2075),
    /**
     * <code>ChatListReq = 2076;</code>
     *
     * <pre>
     *聊天列表Req
     * </pre>
     */
    ChatListReq(91, 2076),
    /**
     * <code>ChatListRsp = 2077;</code>
     *
     * <pre>
     *聊天列表Rsp
     * </pre>
     */
    ChatListRsp(92, 2077),
    /**
     * <code>ChatListSyn = 2078;</code>
     *
     * <pre>
     *聊天列表同步
     * </pre>
     */
    ChatListSyn(93, 2078),
    /**
     * <code>ChatContentReq = 2079;</code>
     *
     * <pre>
     *聊天内容Req
     * </pre>
     */
    ChatContentReq(94, 2079),
    /**
     * <code>ChatContentRsp = 2080;</code>
     *
     * <pre>
     *聊天内容Rsp
     * </pre>
     */
    ChatContentRsp(95, 2080),
    /**
     * <code>ChatContentSyn = 2081;</code>
     *
     * <pre>
     *聊天内容同步
     * </pre>
     */
    ChatContentSyn(96, 2081),
    /**
     * <code>FriendListReq = 2082;</code>
     *
     * <pre>
     *联系人列表Req
     * </pre>
     */
    FriendListReq(97, 2082),
    /**
     * <code>FriendListRsp = 2083;</code>
     *
     * <pre>
     *联系人列表Rsp
     * </pre>
     */
    FriendListRsp(98, 2083),
    /**
     * <code>FriendSyn = 2084;</code>
     *
     * <pre>
     *联系人同步
     * </pre>
     */
    FriendSyn(99, 2084),
    /**
     * <code>FriendSearchReq = 2085;</code>
     *
     * <pre>
     *搜索好友Req
     * </pre>
     */
    FriendSearchReq(100, 2085),
    /**
     * <code>FriendSearchRsp = 2086;</code>
     *
     * <pre>
     *搜索好友Rsp
     * </pre>
     */
    FriendSearchRsp(101, 2086),
    /**
     * <code>ApplyReq = 2087;</code>
     *
     * <pre>
     *申请好友/俱乐部Req
     * </pre>
     */
    ApplyReq(102, 2087),
    /**
     * <code>ApplyResultReq = 2088;</code>
     *
     * <pre>
     *申请结果Req
     * </pre>
     */
    ApplyResultReq(103, 2088),
    /**
     * <code>ClubAuthorityManageReq = 2089;</code>
     *
     * <pre>
     *俱乐部成员权限管理
     * </pre>
     */
    ClubAuthorityManageReq(104, 2089),
    /**
     * <code>ClubClose = 2090;</code>
     *
     * <pre>
     *关闭俱乐部面板
     * </pre>
     */
    ClubClose(105, 2090),
    /**
     * <code>DissmissVoteRequest = 2091;</code>
     *
     * <pre>
     *请求解散
     * </pre>
     */
    DissmissVoteRequest(106, 2091),
    /**
     * <code>ClubRoomModelSyn = 2092;</code>
     *
     * <pre>
     *俱乐部房间列表Syn
     * </pre>
     */
    ClubRoomModelSyn(107, 2092),
    /**
     * <code>ClubScoreInfoReq = 2093;</code>
     *
     * <pre>
     *积分详情查询req
     * </pre>
     */
    ClubScoreInfoReq(108, 2093),
    /**
     * <code>ClubScoreInfoRsp = 2094;</code>
     *
     * <pre>
     *积分详情查询rsp
     * </pre>
     */
    ClubScoreInfoRsp(109, 2094),
    /**
     * <code>RemarkSyn = 2095;</code>
     *
     * <pre>
     *修改备注
     * </pre>
     */
    RemarkSyn(110, 2095),
    /**
     * <code>UpdateRemarkReq = 2096;</code>
     *
     * <pre>
     *备注请求req
     * </pre>
     */
    UpdateRemarkReq(111, 2096),
    /**
     * <code>UpdateRemarkRsp = 2097;</code>
     *
     * <pre>
     *备注请求rsp
     * </pre>
     */
    UpdateRemarkRsp(112, 2097),
    /**
     * <code>ViewGuanZhanReq = 2098;</code>
     *
     * <pre>
     *观战列表请求
     * </pre>
     */
    ViewGuanZhanReq(113, 2098),
    /**
     * <code>ViewGuanZhanResp = 2099;</code>
     *
     * <pre>
     *观战列表回复
     * </pre>
     */
    ViewGuanZhanResp(114, 2099),
    /**
     * <code>PlayerEnterSyn = 2100;</code>
     *
     * <pre>
     *玩家进入
     * </pre>
     */
    PlayerEnterSyn(115, 2100),
    /**
     * <code>GameOperation = 3001;</code>
     *
     * <pre>
     ***********游戏逻辑相关*********&#47;/
     * </pre>
     */
    GameOperation(116, 3001),
    /**
     * <code>ReadMailMsgRequest = 4001;</code>
     *
     * <pre>
     ***********消息相关*********&#47;/
     * </pre>
     */
    ReadMailMsgRequest(117, 4001),
    /**
     * <code>MarqueeMsgSyn = 4002;</code>
     *
     * <pre>
     *推送跑马灯消息	
     * </pre>
     */
    MarqueeMsgSyn(118, 4002),
    /**
     * <code>NewMailMsgSyn = 4005;</code>
     */
    NewMailMsgSyn(119, 4005),
    /**
     * <code>ReceiveMailAttachRequest = 4006;</code>
     */
    ReceiveMailAttachRequest(120, 4006),
    /**
     * <code>ActAndNoticeMsgSyn = 4008;</code>
     *
     * <pre>
     *活动与公告
     * </pre>
     */
    ActAndNoticeMsgSyn(121, 4008),
    /**
     * <code>quickReciveAward = 4009;</code>
     *
     * <pre>
     *一键领取邮件
     * </pre>
     */
    quickReciveAward(122, 4009),
    /**
     * <code>quickRemoveMail = 4010;</code>
     *
     * <pre>
     *一键删除邮件
     * </pre>
     */
    quickRemoveMail(123, 4010),
    /**
     * <code>quickOperResponse = 4011;</code>
     *
     * <pre>
     *一键领取与一键删除邮件回复
     * </pre>
     */
    quickOperResponse(124, 4011),
    /**
     * <code>RoomResultRequest = 5001;</code>
     *
     * <pre>
     ***********战绩相关*********&#47;/
     * </pre>
     */
    RoomResultRequest(125, 5001),
    /**
     * <code>RoomResultResponse = 5002;</code>
     *
     * <pre>
     *战绩列表
     * </pre>
     */
    RoomResultResponse(126, 5002),
    /**
     * <code>GenOrderRequest = 6001;</code>
     *
     * <pre>
     ***********商城相关*********&#47;/
     * </pre>
     */
    GenOrderRequest(127, 6001),
    /**
     * <code>GenOrderResponse = 6002;</code>
     *
     * <pre>
     *生成订单
     * </pre>
     */
    GenOrderResponse(128, 6002),
    /**
     * <code>ConfirmOrderRequest = 6003;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    ConfirmOrderRequest(129, 6003),
    /**
     * <code>ConfirmOrderReqsponse = 6004;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    ConfirmOrderReqsponse(130, 6004),
    /**
     * <code>MallProductRequest = 6005;</code>
     *
     * <pre>
     *请求商品列表
     * </pre>
     */
    MallProductRequest(131, 6005),
    /**
     * <code>MallProductResponse = 6006;</code>
     *
     * <pre>
     *返回商品列表
     * </pre>
     */
    MallProductResponse(132, 6006),
    /**
     * <code>IPABuyItemComplete = 6007;</code>
     *
     * <pre>
     *苹果支付完成
     * </pre>
     */
    IPABuyItemComplete(133, 6007),
    /**
     * <code>PocketPay = 6008;</code>
     *
     * <pre>
     *零钱支付
     * </pre>
     */
    PocketPay(134, 6008),
    /**
     * <code>RankRequest = 7001;</code>
     *
     * <pre>
     ***********排行榜*********&#47;/
     * </pre>
     */
    RankRequest(135, 7001),
    /**
     * <code>RankSyn = 7002;</code>
     *
     * <pre>
     *排行榜数据返回
     * </pre>
     */
    RankSyn(136, 7002),
    /**
     * <code>RoomConfigRequest = 8001;</code>
     *
     * <pre>
     ***********配置相关************&#47;/
     * </pre>
     */
    RoomConfigRequest(137, 8001),
    /**
     * <code>RoomConfigResponse = 8002;</code>
     */
    RoomConfigResponse(138, 8002),
    /**
     * <code>ServerChangeSyn = 8003;</code>
     */
    ServerChangeSyn(139, 8003),
    /**
     * <code>GameMsgSyn = 8004;</code>
     *
     * <pre>
     *&#47;/游戏消息同步-推送
     * </pre>
     */
    GameMsgSyn(140, 8004),
    ;

    /**
     * <code>Dump = 1;</code>
     *
     * <pre>
     *存快照，调试用
     * </pre>
     */
    public static final int Dump_VALUE = 1;
    /**
     * <code>HEARTBEAT = 1001;</code>
     *
     * <pre>
     ***********帐号相关*********&#47;/
     * </pre>
     */
    public static final int HEARTBEAT_VALUE = 1001;
    /**
     * <code>LoginRequest = 1002;</code>
     *
     * <pre>
     *登录
     * </pre>
     */
    public static final int LoginRequest_VALUE = 1002;
    /**
     * <code>AuthRequest = 1003;</code>
     *
     * <pre>
     *会话认证
     * </pre>
     */
    public static final int AuthRequest_VALUE = 1003;
    /**
     * <code>GlobalMsgSyn = 1004;</code>
     *
     * <pre>
     *全局信息提示
     * </pre>
     */
    public static final int GlobalMsgSyn_VALUE = 1004;
    /**
     * <code>VistorRegisterRequest = 1005;</code>
     *
     * <pre>
     *游客注册
     * </pre>
     */
    public static final int VistorRegisterRequest_VALUE = 1005;
    /**
     * <code>VistorRegisterResponse = 1006;</code>
     */
    public static final int VistorRegisterResponse_VALUE = 1006;
    /**
     * <code>RegisterRequest = 1007;</code>
     *
     * <pre>
     *普通帐号注册
     * </pre>
     */
    public static final int RegisterRequest_VALUE = 1007;
    /**
     * <code>RegisterResponse = 1008;</code>
     */
    public static final int RegisterResponse_VALUE = 1008;
    /**
     * <code>UserInfoSyn = 1009;</code>
     *
     * <pre>
     *用户属性发生变化
     * </pre>
     */
    public static final int UserInfoSyn_VALUE = 1009;
    /**
     * <code>ModifyUserInfoRequest = 1010;</code>
     *
     * <pre>
     *修改用户信息
     * </pre>
     */
    public static final int ModifyUserInfoRequest_VALUE = 1010;
    /**
     * <code>ReconnetLogin = 1011;</code>
     *
     * <pre>
     *修改用户信息
     * </pre>
     */
    public static final int ReconnetLogin_VALUE = 1011;
    /**
     * <code>NeedBindInviteCode = 1012;</code>
     *
     * <pre>
     *登录时未绑定上级推送用户绑定邀请码
     * </pre>
     */
    public static final int NeedBindInviteCode_VALUE = 1012;
    /**
     * <code>SubmitInviteCodeRequest = 1013;</code>
     *
     * <pre>
     *提交邀请码请求
     * </pre>
     */
    public static final int SubmitInviteCodeRequest_VALUE = 1013;
    /**
     * <code>SubmitInviteCodeResponse = 1014;</code>
     *
     * <pre>
     *提交邀请码回复
     * </pre>
     */
    public static final int SubmitInviteCodeResponse_VALUE = 1014;
    /**
     * <code>NeedUpdate = 1015;</code>
     *
     * <pre>
     *需要更新(登陆时验证)
     * </pre>
     */
    public static final int NeedUpdate_VALUE = 1015;
    /**
     * <code>EnrollRequest = 2001;</code>
     *
     * <pre>
     ***********游戏相关*********&#47;/
     * </pre>
     */
    public static final int EnrollRequest_VALUE = 2001;
    /**
     * <code>ReadyRequest = 2002;</code>
     *
     * <pre>
     *准备游戏
     * </pre>
     */
    public static final int ReadyRequest_VALUE = 2002;
    /**
     * <code>ChangeDeskRequest = 2003;</code>
     *
     * <pre>
     *换桌
     * </pre>
     */
    public static final int ChangeDeskRequest_VALUE = 2003;
    /**
     * <code>KickOutSyn = 2004;</code>
     *
     * <pre>
     *强制下线, 同一个帐号不能多处登录、房主踢人
     * </pre>
     */
    public static final int KickOutSyn_VALUE = 2004;
    /**
     * <code>ChatRequest = 2005;</code>
     *
     * <pre>
     *聊天
     * </pre>
     */
    public static final int ChatRequest_VALUE = 2005;
    /**
     * <code>Back2HallRequest = 2006;</code>
     *
     * <pre>
     *返回大厅
     * </pre>
     */
    public static final int Back2HallRequest_VALUE = 2006;
    /**
     * <code>PlayerGamingSyn = 2007;</code>
     *
     * <pre>
     *推送当前玩家正在游戏的消息
     * </pre>
     */
    public static final int PlayerGamingSyn_VALUE = 2007;
    /**
     * <code>PlayerSitSyn = 2008;</code>
     *
     * <pre>
     *有玩家进入桌子
     * </pre>
     */
    public static final int PlayerSitSyn_VALUE = 2008;
    /**
     * <code>AwayGameRequest = 2009;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    public static final int AwayGameRequest_VALUE = 2009;
    /**
     * <code>PlayerAwaySyn = 2010;</code>
     *
     * <pre>
     *有玩家离开桌子
     * </pre>
     */
    public static final int PlayerAwaySyn_VALUE = 2010;
    /**
     * <code>PlayerComebackSyn = 2011;</code>
     *
     * <pre>
     *玩家回来
     * </pre>
     */
    public static final int PlayerComebackSyn_VALUE = 2011;
    /**
     * <code>PlayerOfflineSyn = 2012;</code>
     *
     * <pre>
     *有玩家掉线
     * </pre>
     */
    public static final int PlayerOfflineSyn_VALUE = 2012;
    /**
     * <code>PlayerReconnectSyn = 2013;</code>
     *
     * <pre>
     *有玩家重连		
     * </pre>
     */
    public static final int PlayerReconnectSyn_VALUE = 2013;
    /**
     * <code>ExitGameRequest = 2014;</code>
     *
     * <pre>
     *退出游戏
     * </pre>
     */
    public static final int ExitGameRequest_VALUE = 2014;
    /**
     * <code>PlayerExitSyn = 2015;</code>
     *
     * <pre>
     *有玩家退出游戏
     * </pre>
     */
    public static final int PlayerExitSyn_VALUE = 2015;
    /**
     * <code>ReadySyn = 2016;</code>
     *
     * <pre>
     *告知客户端某玩家已经准备好
     * </pre>
     */
    public static final int ReadySyn_VALUE = 2016;
    /**
     * <code>GameStartSyn = 2017;</code>
     *
     * <pre>
     *告知客户端游戏已开始
     * </pre>
     */
    public static final int GameStartSyn_VALUE = 2017;
    /**
     * <code>CreateVipRoomRequest = 2018;</code>
     *
     * <pre>
     *创建vip房间
     * </pre>
     */
    public static final int CreateVipRoomRequest_VALUE = 2018;
    /**
     * <code>EnterVipRoomRequest = 2019;</code>
     *
     * <pre>
     *加入vip房间
     * </pre>
     */
    public static final int EnterVipRoomRequest_VALUE = 2019;
    /**
     * <code>KickPlayerRequest = 2020;</code>
     *
     * <pre>
     *vip房间踢人
     * </pre>
     */
    public static final int KickPlayerRequest_VALUE = 2020;
    /**
     * <code>VipRoomListReuqest = 2021;</code>
     *
     * <pre>
     *请求拉取vip房间列表
     * </pre>
     */
    public static final int VipRoomListReuqest_VALUE = 2021;
    /**
     * <code>VipRoomListSyn = 2022;</code>
     *
     * <pre>
     *推送vip房间列表
     * </pre>
     */
    public static final int VipRoomListSyn_VALUE = 2022;
    /**
     * <code>DismissVipRoomRequest = 2023;</code>
     *
     * <pre>
     *解散vip房间	
     * </pre>
     */
    public static final int DismissVipRoomRequest_VALUE = 2023;
    /**
     * <code>GameChatMsgRequest = 2024;</code>
     *
     * <pre>
     *聊天信息
     * </pre>
     */
    public static final int GameChatMsgRequest_VALUE = 2024;
    /**
     * <code>GameChatMsgSyn = 2025;</code>
     */
    public static final int GameChatMsgSyn_VALUE = 2025;
    /**
     * <code>HangupRequest = 2026;</code>
     */
    public static final int HangupRequest_VALUE = 2026;
    /**
     * <code>HangupSyn = 2027;</code>
     */
    public static final int HangupSyn_VALUE = 2027;
    /**
     * <code>CancelHangupRequest = 2028;</code>
     */
    public static final int CancelHangupRequest_VALUE = 2028;
    /**
     * <code>DeskDestorySyn = 2029;</code>
     */
    public static final int DeskDestorySyn_VALUE = 2029;
    /**
     * <code>LogoutSyn = 2030;</code>
     */
    public static final int LogoutSyn_VALUE = 2030;
    /**
     * <code>DissmissVoteSyn = 2031;</code>
     */
    public static final int DissmissVoteSyn_VALUE = 2031;
    /**
     * <code>PlayerGamingSynInquire = 2032;</code>
     *
     * <pre>
     *查询是否有进行中的游戏
     * </pre>
     */
    public static final int PlayerGamingSynInquire_VALUE = 2032;
    /**
     * <code>BackGameRequest = 2033;</code>
     *
     * <pre>
     *返回游戏
     * </pre>
     */
    public static final int BackGameRequest_VALUE = 2033;
    /**
     * <code>MultiMatchEnrollRequest = 2034;</code>
     *
     * <pre>
     *比赛场报名
     * </pre>
     */
    public static final int MultiMatchEnrollRequest_VALUE = 2034;
    /**
     * <code>ExitMultiMatchRequest = 2035;</code>
     *
     * <pre>
     *比赛场退出
     * </pre>
     */
    public static final int ExitMultiMatchRequest_VALUE = 2035;
    /**
     * <code>DissmissMultiMatch = 2036;</code>
     *
     * <pre>
     *解散比赛场比赛
     * </pre>
     */
    public static final int DissmissMultiMatch_VALUE = 2036;
    /**
     * <code>MultiMatchStartNotify = 2037;</code>
     *
     * <pre>
     *比赛场一轮开始(服务端单向推送)
     * </pre>
     */
    public static final int MultiMatchStartNotify_VALUE = 2037;
    /**
     * <code>WaitNextMatchStart = 2038;</code>
     *
     * <pre>
     *比赛场玩家打完一轮中所有局数的等待界面(服务端单向推送)
     * </pre>
     */
    public static final int WaitNextMatchStart_VALUE = 2038;
    /**
     * <code>FinishMultiMatch = 2039;</code>
     *
     * <pre>
     *比赛场比赛结束
     * </pre>
     */
    public static final int FinishMultiMatch_VALUE = 2039;
    /**
     * <code>MultiMatchRankSyn = 2040;</code>
     *
     * <pre>
     *同步排行榜信息
     * </pre>
     */
    public static final int MultiMatchRankSyn_VALUE = 2040;
    /**
     * <code>MultiMatchPlayerNum = 2041;</code>
     *
     * <pre>
     *比赛场玩家人数
     * </pre>
     */
    public static final int MultiMatchPlayerNum_VALUE = 2041;
    /**
     * <code>MultiMatchEnrollSynWithLogin = 2042;</code>
     *
     * <pre>
     *玩家登录检测比赛场报名情况
     * </pre>
     */
    public static final int MultiMatchEnrollSynWithLogin_VALUE = 2042;
    /**
     * <code>SignSynRequest = 2043;</code>
     *
     * <pre>
     *同步签到消息(用户打开面板显示)
     * </pre>
     */
    public static final int SignSynRequest_VALUE = 2043;
    /**
     * <code>SignSynResponse = 2044;</code>
     *
     * <pre>
     *同步签到消息(用户打开面板显示)
     * </pre>
     */
    public static final int SignSynResponse_VALUE = 2044;
    /**
     * <code>SignRequest = 2045;</code>
     *
     * <pre>
     *签到
     * </pre>
     */
    public static final int SignRequest_VALUE = 2045;
    /**
     * <code>SignResponse = 2046;</code>
     *
     * <pre>
     *签到回复
     * </pre>
     */
    public static final int SignResponse_VALUE = 2046;
    /**
     * <code>ActivityStartNotify = 2047;</code>
     *
     * <pre>
     *活动开始提示
     * </pre>
     */
    public static final int ActivityStartNotify_VALUE = 2047;
    /**
     * <code>PrayRequest = 2048;</code>
     *
     * <pre>
     *祈福请求
     * </pre>
     */
    public static final int PrayRequest_VALUE = 2048;
    /**
     * <code>PrayResponse = 2049;</code>
     *
     * <pre>
     *祈福回复
     * </pre>
     */
    public static final int PrayResponse_VALUE = 2049;
    /**
     * <code>SymplecticRunnerRequest = 2050;</code>
     *
     * <pre>
     *轮盘
     * </pre>
     */
    public static final int SymplecticRunnerRequest_VALUE = 2050;
    /**
     * <code>SymplecticRunnerResponse = 2051;</code>
     *
     * <pre>
     *轮盘回复
     * </pre>
     */
    public static final int SymplecticRunnerResponse_VALUE = 2051;
    /**
     * <code>ShouChongSyn = 2052;</code>
     *
     * <pre>
     *是否有首冲
     * </pre>
     */
    public static final int ShouChongSyn_VALUE = 2052;
    /**
     * <code>ActivityFinishNotify = 2053;</code>
     *
     * <pre>
     *活动结束提示
     * </pre>
     */
    public static final int ActivityFinishNotify_VALUE = 2053;
    /**
     * <code>VideoRequest = 2054;</code>
     *
     * <pre>
     *请求回放
     * </pre>
     */
    public static final int VideoRequest_VALUE = 2054;
    /**
     * <code>VideoResponse = 2055;</code>
     *
     * <pre>
     *回复回放
     * </pre>
     */
    public static final int VideoResponse_VALUE = 2055;
    /**
     * <code>DDZClearCardInDesk = 2056;</code>
     *
     * <pre>
     *斗地主清除桌面牌,已废弃
     * </pre>
     */
    public static final int DDZClearCardInDesk_VALUE = 2056;
    /**
     * <code>StartGameRequest = 2057;</code>
     *
     * <pre>
     *扎金花开始游戏
     * </pre>
     */
    public static final int StartGameRequest_VALUE = 2057;
    /**
     * <code>DissmissVoteResponse = 2058;</code>
     *
     * <pre>
     *回复解散
     * </pre>
     */
    public static final int DissmissVoteResponse_VALUE = 2058;
    /**
     * <code>PlayerSitRequst = 2059;</code>
     *
     * <pre>
     *玩家坐下
     * </pre>
     */
    public static final int PlayerSitRequst_VALUE = 2059;
    /**
     * <code>PlayerExitPosNotExitRoomRequst = 2060;</code>
     *
     * <pre>
     *玩家离开座位不离开房间
     * </pre>
     */
    public static final int PlayerExitPosNotExitRoomRequst_VALUE = 2060;
    /**
     * <code>PlayerExitPosNotExitRoomResponse = 2061;</code>
     *
     * <pre>
     *玩家离开座位不离开房间
     * </pre>
     */
    public static final int PlayerExitPosNotExitRoomResponse_VALUE = 2061;
    /**
     * <code>VipRoomPlayerRequest = 2062;</code>
     *
     * <pre>
     *查看房间玩家
     * </pre>
     */
    public static final int VipRoomPlayerRequest_VALUE = 2062;
    /**
     * <code>VipRoomPlayerResponse = 2063;</code>
     *
     * <pre>
     *查看房间玩家
     * </pre>
     */
    public static final int VipRoomPlayerResponse_VALUE = 2063;
    /**
     * <code>ClubInfoReq = 2064;</code>
     *
     * <pre>
     *俱乐部Req(打开俱乐部面板或者切换到俱乐部面板)
     * </pre>
     */
    public static final int ClubInfoReq_VALUE = 2064;
    /**
     * <code>ClubInfoRsp = 2065;</code>
     *
     * <pre>
     *俱乐部Rsp(打开俱乐部面板或者切换到俱乐部面板)
     * </pre>
     */
    public static final int ClubInfoRsp_VALUE = 2065;
    /**
     * <code>ClubSyn = 2066;</code>
     *
     * <pre>
     *俱乐部成员对象(积分操作,权限操作都推送此消息)
     * </pre>
     */
    public static final int ClubSyn_VALUE = 2066;
    /**
     * <code>ClubMemberReq = 2067;</code>
     *
     * <pre>
     *俱乐部成员列表Req
     * </pre>
     */
    public static final int ClubMemberReq_VALUE = 2067;
    /**
     * <code>ClubMemberRsp = 2068;</code>
     *
     * <pre>
     *俱乐部成员列表Rsp
     * </pre>
     */
    public static final int ClubMemberRsp_VALUE = 2068;
    /**
     * <code>ClubMemberSyn = 2069;</code>
     *
     * <pre>
     *俱乐部成员对象(积分操作,权限操作都推送此消息)
     * </pre>
     */
    public static final int ClubMemberSyn_VALUE = 2069;
    /**
     * <code>ClubRoomListReq = 2070;</code>
     *
     * <pre>
     *俱乐部房间列表Req
     * </pre>
     */
    public static final int ClubRoomListReq_VALUE = 2070;
    /**
     * <code>ClubRoomListRsp = 2071;</code>
     *
     * <pre>
     *俱乐部房间列表Rsp
     * </pre>
     */
    public static final int ClubRoomListRsp_VALUE = 2071;
    /**
     * <code>ClubConfigReq = 2072;</code>
     *
     * <pre>
     *俱乐部设置Req
     * </pre>
     */
    public static final int ClubConfigReq_VALUE = 2072;
    /**
     * <code>ClubConfigSyn = 2073;</code>
     *
     * <pre>
     *聊天列表Rsp
     * </pre>
     */
    public static final int ClubConfigSyn_VALUE = 2073;
    /**
     * <code>ApplyInfoRsp = 2074;</code>
     *
     * <pre>
     *聊天内容Req
     * </pre>
     */
    public static final int ApplyInfoRsp_VALUE = 2074;
    /**
     * <code>ApplyInfo = 2075;</code>
     *
     * <pre>
     *聊天内容Rsp
     * </pre>
     */
    public static final int ApplyInfo_VALUE = 2075;
    /**
     * <code>ChatListReq = 2076;</code>
     *
     * <pre>
     *聊天列表Req
     * </pre>
     */
    public static final int ChatListReq_VALUE = 2076;
    /**
     * <code>ChatListRsp = 2077;</code>
     *
     * <pre>
     *聊天列表Rsp
     * </pre>
     */
    public static final int ChatListRsp_VALUE = 2077;
    /**
     * <code>ChatListSyn = 2078;</code>
     *
     * <pre>
     *聊天列表同步
     * </pre>
     */
    public static final int ChatListSyn_VALUE = 2078;
    /**
     * <code>ChatContentReq = 2079;</code>
     *
     * <pre>
     *聊天内容Req
     * </pre>
     */
    public static final int ChatContentReq_VALUE = 2079;
    /**
     * <code>ChatContentRsp = 2080;</code>
     *
     * <pre>
     *聊天内容Rsp
     * </pre>
     */
    public static final int ChatContentRsp_VALUE = 2080;
    /**
     * <code>ChatContentSyn = 2081;</code>
     *
     * <pre>
     *聊天内容同步
     * </pre>
     */
    public static final int ChatContentSyn_VALUE = 2081;
    /**
     * <code>FriendListReq = 2082;</code>
     *
     * <pre>
     *联系人列表Req
     * </pre>
     */
    public static final int FriendListReq_VALUE = 2082;
    /**
     * <code>FriendListRsp = 2083;</code>
     *
     * <pre>
     *联系人列表Rsp
     * </pre>
     */
    public static final int FriendListRsp_VALUE = 2083;
    /**
     * <code>FriendSyn = 2084;</code>
     *
     * <pre>
     *联系人同步
     * </pre>
     */
    public static final int FriendSyn_VALUE = 2084;
    /**
     * <code>FriendSearchReq = 2085;</code>
     *
     * <pre>
     *搜索好友Req
     * </pre>
     */
    public static final int FriendSearchReq_VALUE = 2085;
    /**
     * <code>FriendSearchRsp = 2086;</code>
     *
     * <pre>
     *搜索好友Rsp
     * </pre>
     */
    public static final int FriendSearchRsp_VALUE = 2086;
    /**
     * <code>ApplyReq = 2087;</code>
     *
     * <pre>
     *申请好友/俱乐部Req
     * </pre>
     */
    public static final int ApplyReq_VALUE = 2087;
    /**
     * <code>ApplyResultReq = 2088;</code>
     *
     * <pre>
     *申请结果Req
     * </pre>
     */
    public static final int ApplyResultReq_VALUE = 2088;
    /**
     * <code>ClubAuthorityManageReq = 2089;</code>
     *
     * <pre>
     *俱乐部成员权限管理
     * </pre>
     */
    public static final int ClubAuthorityManageReq_VALUE = 2089;
    /**
     * <code>ClubClose = 2090;</code>
     *
     * <pre>
     *关闭俱乐部面板
     * </pre>
     */
    public static final int ClubClose_VALUE = 2090;
    /**
     * <code>DissmissVoteRequest = 2091;</code>
     *
     * <pre>
     *请求解散
     * </pre>
     */
    public static final int DissmissVoteRequest_VALUE = 2091;
    /**
     * <code>ClubRoomModelSyn = 2092;</code>
     *
     * <pre>
     *俱乐部房间列表Syn
     * </pre>
     */
    public static final int ClubRoomModelSyn_VALUE = 2092;
    /**
     * <code>ClubScoreInfoReq = 2093;</code>
     *
     * <pre>
     *积分详情查询req
     * </pre>
     */
    public static final int ClubScoreInfoReq_VALUE = 2093;
    /**
     * <code>ClubScoreInfoRsp = 2094;</code>
     *
     * <pre>
     *积分详情查询rsp
     * </pre>
     */
    public static final int ClubScoreInfoRsp_VALUE = 2094;
    /**
     * <code>RemarkSyn = 2095;</code>
     *
     * <pre>
     *修改备注
     * </pre>
     */
    public static final int RemarkSyn_VALUE = 2095;
    /**
     * <code>UpdateRemarkReq = 2096;</code>
     *
     * <pre>
     *备注请求req
     * </pre>
     */
    public static final int UpdateRemarkReq_VALUE = 2096;
    /**
     * <code>UpdateRemarkRsp = 2097;</code>
     *
     * <pre>
     *备注请求rsp
     * </pre>
     */
    public static final int UpdateRemarkRsp_VALUE = 2097;
    /**
     * <code>ViewGuanZhanReq = 2098;</code>
     *
     * <pre>
     *观战列表请求
     * </pre>
     */
    public static final int ViewGuanZhanReq_VALUE = 2098;
    /**
     * <code>ViewGuanZhanResp = 2099;</code>
     *
     * <pre>
     *观战列表回复
     * </pre>
     */
    public static final int ViewGuanZhanResp_VALUE = 2099;
    /**
     * <code>PlayerEnterSyn = 2100;</code>
     *
     * <pre>
     *玩家进入
     * </pre>
     */
    public static final int PlayerEnterSyn_VALUE = 2100;
    /**
     * <code>GameOperation = 3001;</code>
     *
     * <pre>
     ***********游戏逻辑相关*********&#47;/
     * </pre>
     */
    public static final int GameOperation_VALUE = 3001;
    /**
     * <code>ReadMailMsgRequest = 4001;</code>
     *
     * <pre>
     ***********消息相关*********&#47;/
     * </pre>
     */
    public static final int ReadMailMsgRequest_VALUE = 4001;
    /**
     * <code>MarqueeMsgSyn = 4002;</code>
     *
     * <pre>
     *推送跑马灯消息	
     * </pre>
     */
    public static final int MarqueeMsgSyn_VALUE = 4002;
    /**
     * <code>NewMailMsgSyn = 4005;</code>
     */
    public static final int NewMailMsgSyn_VALUE = 4005;
    /**
     * <code>ReceiveMailAttachRequest = 4006;</code>
     */
    public static final int ReceiveMailAttachRequest_VALUE = 4006;
    /**
     * <code>ActAndNoticeMsgSyn = 4008;</code>
     *
     * <pre>
     *活动与公告
     * </pre>
     */
    public static final int ActAndNoticeMsgSyn_VALUE = 4008;
    /**
     * <code>quickReciveAward = 4009;</code>
     *
     * <pre>
     *一键领取邮件
     * </pre>
     */
    public static final int quickReciveAward_VALUE = 4009;
    /**
     * <code>quickRemoveMail = 4010;</code>
     *
     * <pre>
     *一键删除邮件
     * </pre>
     */
    public static final int quickRemoveMail_VALUE = 4010;
    /**
     * <code>quickOperResponse = 4011;</code>
     *
     * <pre>
     *一键领取与一键删除邮件回复
     * </pre>
     */
    public static final int quickOperResponse_VALUE = 4011;
    /**
     * <code>RoomResultRequest = 5001;</code>
     *
     * <pre>
     ***********战绩相关*********&#47;/
     * </pre>
     */
    public static final int RoomResultRequest_VALUE = 5001;
    /**
     * <code>RoomResultResponse = 5002;</code>
     *
     * <pre>
     *战绩列表
     * </pre>
     */
    public static final int RoomResultResponse_VALUE = 5002;
    /**
     * <code>GenOrderRequest = 6001;</code>
     *
     * <pre>
     ***********商城相关*********&#47;/
     * </pre>
     */
    public static final int GenOrderRequest_VALUE = 6001;
    /**
     * <code>GenOrderResponse = 6002;</code>
     *
     * <pre>
     *生成订单
     * </pre>
     */
    public static final int GenOrderResponse_VALUE = 6002;
    /**
     * <code>ConfirmOrderRequest = 6003;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    public static final int ConfirmOrderRequest_VALUE = 6003;
    /**
     * <code>ConfirmOrderReqsponse = 6004;</code>
     *
     * <pre>
     *提交支付结果
     * </pre>
     */
    public static final int ConfirmOrderReqsponse_VALUE = 6004;
    /**
     * <code>MallProductRequest = 6005;</code>
     *
     * <pre>
     *请求商品列表
     * </pre>
     */
    public static final int MallProductRequest_VALUE = 6005;
    /**
     * <code>MallProductResponse = 6006;</code>
     *
     * <pre>
     *返回商品列表
     * </pre>
     */
    public static final int MallProductResponse_VALUE = 6006;
    /**
     * <code>IPABuyItemComplete = 6007;</code>
     *
     * <pre>
     *苹果支付完成
     * </pre>
     */
    public static final int IPABuyItemComplete_VALUE = 6007;
    /**
     * <code>PocketPay = 6008;</code>
     *
     * <pre>
     *零钱支付
     * </pre>
     */
    public static final int PocketPay_VALUE = 6008;
    /**
     * <code>RankRequest = 7001;</code>
     *
     * <pre>
     ***********排行榜*********&#47;/
     * </pre>
     */
    public static final int RankRequest_VALUE = 7001;
    /**
     * <code>RankSyn = 7002;</code>
     *
     * <pre>
     *排行榜数据返回
     * </pre>
     */
    public static final int RankSyn_VALUE = 7002;
    /**
     * <code>RoomConfigRequest = 8001;</code>
     *
     * <pre>
     ***********配置相关************&#47;/
     * </pre>
     */
    public static final int RoomConfigRequest_VALUE = 8001;
    /**
     * <code>RoomConfigResponse = 8002;</code>
     */
    public static final int RoomConfigResponse_VALUE = 8002;
    /**
     * <code>ServerChangeSyn = 8003;</code>
     */
    public static final int ServerChangeSyn_VALUE = 8003;
    /**
     * <code>GameMsgSyn = 8004;</code>
     *
     * <pre>
     *&#47;/游戏消息同步-推送
     * </pre>
     */
    public static final int GameMsgSyn_VALUE = 8004;


    public final int getNumber() { return value; }

    public static PacketType valueOf(int value) {
      switch (value) {
        case 1: return Dump;
        case 1001: return HEARTBEAT;
        case 1002: return LoginRequest;
        case 1003: return AuthRequest;
        case 1004: return GlobalMsgSyn;
        case 1005: return VistorRegisterRequest;
        case 1006: return VistorRegisterResponse;
        case 1007: return RegisterRequest;
        case 1008: return RegisterResponse;
        case 1009: return UserInfoSyn;
        case 1010: return ModifyUserInfoRequest;
        case 1011: return ReconnetLogin;
        case 1012: return NeedBindInviteCode;
        case 1013: return SubmitInviteCodeRequest;
        case 1014: return SubmitInviteCodeResponse;
        case 1015: return NeedUpdate;
        case 2001: return EnrollRequest;
        case 2002: return ReadyRequest;
        case 2003: return ChangeDeskRequest;
        case 2004: return KickOutSyn;
        case 2005: return ChatRequest;
        case 2006: return Back2HallRequest;
        case 2007: return PlayerGamingSyn;
        case 2008: return PlayerSitSyn;
        case 2009: return AwayGameRequest;
        case 2010: return PlayerAwaySyn;
        case 2011: return PlayerComebackSyn;
        case 2012: return PlayerOfflineSyn;
        case 2013: return PlayerReconnectSyn;
        case 2014: return ExitGameRequest;
        case 2015: return PlayerExitSyn;
        case 2016: return ReadySyn;
        case 2017: return GameStartSyn;
        case 2018: return CreateVipRoomRequest;
        case 2019: return EnterVipRoomRequest;
        case 2020: return KickPlayerRequest;
        case 2021: return VipRoomListReuqest;
        case 2022: return VipRoomListSyn;
        case 2023: return DismissVipRoomRequest;
        case 2024: return GameChatMsgRequest;
        case 2025: return GameChatMsgSyn;
        case 2026: return HangupRequest;
        case 2027: return HangupSyn;
        case 2028: return CancelHangupRequest;
        case 2029: return DeskDestorySyn;
        case 2030: return LogoutSyn;
        case 2031: return DissmissVoteSyn;
        case 2032: return PlayerGamingSynInquire;
        case 2033: return BackGameRequest;
        case 2034: return MultiMatchEnrollRequest;
        case 2035: return ExitMultiMatchRequest;
        case 2036: return DissmissMultiMatch;
        case 2037: return MultiMatchStartNotify;
        case 2038: return WaitNextMatchStart;
        case 2039: return FinishMultiMatch;
        case 2040: return MultiMatchRankSyn;
        case 2041: return MultiMatchPlayerNum;
        case 2042: return MultiMatchEnrollSynWithLogin;
        case 2043: return SignSynRequest;
        case 2044: return SignSynResponse;
        case 2045: return SignRequest;
        case 2046: return SignResponse;
        case 2047: return ActivityStartNotify;
        case 2048: return PrayRequest;
        case 2049: return PrayResponse;
        case 2050: return SymplecticRunnerRequest;
        case 2051: return SymplecticRunnerResponse;
        case 2052: return ShouChongSyn;
        case 2053: return ActivityFinishNotify;
        case 2054: return VideoRequest;
        case 2055: return VideoResponse;
        case 2056: return DDZClearCardInDesk;
        case 2057: return StartGameRequest;
        case 2058: return DissmissVoteResponse;
        case 2059: return PlayerSitRequst;
        case 2060: return PlayerExitPosNotExitRoomRequst;
        case 2061: return PlayerExitPosNotExitRoomResponse;
        case 2062: return VipRoomPlayerRequest;
        case 2063: return VipRoomPlayerResponse;
        case 2064: return ClubInfoReq;
        case 2065: return ClubInfoRsp;
        case 2066: return ClubSyn;
        case 2067: return ClubMemberReq;
        case 2068: return ClubMemberRsp;
        case 2069: return ClubMemberSyn;
        case 2070: return ClubRoomListReq;
        case 2071: return ClubRoomListRsp;
        case 2072: return ClubConfigReq;
        case 2073: return ClubConfigSyn;
        case 2074: return ApplyInfoRsp;
        case 2075: return ApplyInfo;
        case 2076: return ChatListReq;
        case 2077: return ChatListRsp;
        case 2078: return ChatListSyn;
        case 2079: return ChatContentReq;
        case 2080: return ChatContentRsp;
        case 2081: return ChatContentSyn;
        case 2082: return FriendListReq;
        case 2083: return FriendListRsp;
        case 2084: return FriendSyn;
        case 2085: return FriendSearchReq;
        case 2086: return FriendSearchRsp;
        case 2087: return ApplyReq;
        case 2088: return ApplyResultReq;
        case 2089: return ClubAuthorityManageReq;
        case 2090: return ClubClose;
        case 2091: return DissmissVoteRequest;
        case 2092: return ClubRoomModelSyn;
        case 2093: return ClubScoreInfoReq;
        case 2094: return ClubScoreInfoRsp;
        case 2095: return RemarkSyn;
        case 2096: return UpdateRemarkReq;
        case 2097: return UpdateRemarkRsp;
        case 2098: return ViewGuanZhanReq;
        case 2099: return ViewGuanZhanResp;
        case 2100: return PlayerEnterSyn;
        case 3001: return GameOperation;
        case 4001: return ReadMailMsgRequest;
        case 4002: return MarqueeMsgSyn;
        case 4005: return NewMailMsgSyn;
        case 4006: return ReceiveMailAttachRequest;
        case 4008: return ActAndNoticeMsgSyn;
        case 4009: return quickReciveAward;
        case 4010: return quickRemoveMail;
        case 4011: return quickOperResponse;
        case 5001: return RoomResultRequest;
        case 5002: return RoomResultResponse;
        case 6001: return GenOrderRequest;
        case 6002: return GenOrderResponse;
        case 6003: return ConfirmOrderRequest;
        case 6004: return ConfirmOrderReqsponse;
        case 6005: return MallProductRequest;
        case 6006: return MallProductResponse;
        case 6007: return IPABuyItemComplete;
        case 6008: return PocketPay;
        case 7001: return RankRequest;
        case 7002: return RankSyn;
        case 8001: return RoomConfigRequest;
        case 8002: return RoomConfigResponse;
        case 8003: return ServerChangeSyn;
        case 8004: return GameMsgSyn;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PacketType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PacketType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PacketType>() {
            public PacketType findValueByNumber(int number) {
              return PacketType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return packet.msgbase.MsgBase.getDescriptor().getEnumTypes().get(0);
    }

    private static final PacketType[] VALUES = values();

    public static PacketType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PacketType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:packet.msgbase.PacketType)
  }

  public interface PacketBaseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .packet.msgbase.PacketType packetType = 1;
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    boolean hasPacketType();
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    packet.msgbase.MsgBase.PacketType getPacketType();

    // optional sint32 code = 2;
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    boolean hasCode();
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    int getCode();

    // optional string msg = 3;
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional bytes data = 4;
    /**
     * <code>optional bytes data = 4;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code packet.msgbase.PacketBase}
   *
   * <pre>
   *消息头固定4个字节 
   * </pre>
   */
  public static final class PacketBase extends
      com.google.protobuf.GeneratedMessage
      implements PacketBaseOrBuilder {
    // Use PacketBase.newBuilder() to construct.
    private PacketBase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PacketBase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PacketBase defaultInstance;
    public static PacketBase getDefaultInstance() {
      return defaultInstance;
    }

    public PacketBase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PacketBase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              packet.msgbase.MsgBase.PacketType value = packet.msgbase.MsgBase.PacketType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              code_ = input.readSInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              msg_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.msgbase.MsgBase.PacketBase.class, packet.msgbase.MsgBase.PacketBase.Builder.class);
    }

    public static com.google.protobuf.Parser<PacketBase> PARSER =
        new com.google.protobuf.AbstractParser<PacketBase>() {
      public PacketBase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PacketBase(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PacketBase> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .packet.msgbase.PacketType packetType = 1;
    public static final int PACKETTYPE_FIELD_NUMBER = 1;
    private packet.msgbase.MsgBase.PacketType packetType_;
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    public boolean hasPacketType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .packet.msgbase.PacketType packetType = 1;</code>
     *
     * <pre>
     *协议编号 
     * </pre>
     */
    public packet.msgbase.MsgBase.PacketType getPacketType() {
      return packetType_;
    }

    // optional sint32 code = 2;
    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 code = 2;</code>
     *
     * <pre>
     *错误码 0 表示成功
     * </pre>
     */
    public int getCode() {
      return code_;
    }

    // optional string msg = 3;
    public static final int MSG_FIELD_NUMBER = 3;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 3;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes data = 4;
    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 4;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
      code_ = 0;
      msg_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPacketType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMsgBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, code_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMsgBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.msgbase.MsgBase.PacketBase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.msgbase.MsgBase.PacketBase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.msgbase.MsgBase.PacketBase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.msgbase.PacketBase}
     *
     * <pre>
     *消息头固定4个字节 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.msgbase.MsgBase.PacketBaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.msgbase.MsgBase.PacketBase.class, packet.msgbase.MsgBase.PacketBase.Builder.class);
      }

      // Construct using packet.msgbase.MsgBase.PacketBase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.msgbase.MsgBase.internal_static_packet_msgbase_PacketBase_descriptor;
      }

      public packet.msgbase.MsgBase.PacketBase getDefaultInstanceForType() {
        return packet.msgbase.MsgBase.PacketBase.getDefaultInstance();
      }

      public packet.msgbase.MsgBase.PacketBase build() {
        packet.msgbase.MsgBase.PacketBase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.msgbase.MsgBase.PacketBase buildPartial() {
        packet.msgbase.MsgBase.PacketBase result = new packet.msgbase.MsgBase.PacketBase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetType_ = packetType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.msgbase.MsgBase.PacketBase) {
          return mergeFrom((packet.msgbase.MsgBase.PacketBase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.msgbase.MsgBase.PacketBase other) {
        if (other == packet.msgbase.MsgBase.PacketBase.getDefaultInstance()) return this;
        if (other.hasPacketType()) {
          setPacketType(other.getPacketType());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000004;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPacketType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.msgbase.MsgBase.PacketBase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.msgbase.MsgBase.PacketBase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .packet.msgbase.PacketType packetType = 1;
      private packet.msgbase.MsgBase.PacketType packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public boolean hasPacketType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public packet.msgbase.MsgBase.PacketType getPacketType() {
        return packetType_;
      }
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public Builder setPacketType(packet.msgbase.MsgBase.PacketType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .packet.msgbase.PacketType packetType = 1;</code>
       *
       * <pre>
       *协议编号 
       * </pre>
       */
      public Builder clearPacketType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetType_ = packet.msgbase.MsgBase.PacketType.Dump;
        onChanged();
        return this;
      }

      // optional sint32 code = 2;
      private int code_ ;
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000002;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 code = 2;</code>
       *
       * <pre>
       *错误码 0 表示成功
       * </pre>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        code_ = 0;
        onChanged();
        return this;
      }

      // optional string msg = 3;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 3;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional bytes data = 4;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 4;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 4;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.msgbase.PacketBase)
    }

    static {
      defaultInstance = new PacketBase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.msgbase.PacketBase)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_msgbase_PacketBase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_msgbase_PacketBase_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMsgBase.proto\022\016packet.msgbase\"e\n\nPacke" +
      "tBase\022.\n\npacketType\030\001 \002(\0162\032.packet.msgba" +
      "se.PacketType\022\014\n\004code\030\002 \001(\021\022\013\n\003msg\030\003 \001(\t" +
      "\022\014\n\004data\030\004 \001(\014*\335\030\n\nPacketType\022\010\n\004Dump\020\001\022" +
      "\016\n\tHEARTBEAT\020\351\007\022\021\n\014LoginRequest\020\352\007\022\020\n\013Au" +
      "thRequest\020\353\007\022\021\n\014GlobalMsgSyn\020\354\007\022\032\n\025Visto" +
      "rRegisterRequest\020\355\007\022\033\n\026VistorRegisterRes" +
      "ponse\020\356\007\022\024\n\017RegisterRequest\020\357\007\022\025\n\020Regist" +
      "erResponse\020\360\007\022\020\n\013UserInfoSyn\020\361\007\022\032\n\025Modif" +
      "yUserInfoRequest\020\362\007\022\022\n\rReconnetLogin\020\363\007\022",
      "\027\n\022NeedBindInviteCode\020\364\007\022\034\n\027SubmitInvite" +
      "CodeRequest\020\365\007\022\035\n\030SubmitInviteCodeRespon" +
      "se\020\366\007\022\017\n\nNeedUpdate\020\367\007\022\022\n\rEnrollRequest\020" +
      "\321\017\022\021\n\014ReadyRequest\020\322\017\022\026\n\021ChangeDeskReque" +
      "st\020\323\017\022\017\n\nKickOutSyn\020\324\017\022\020\n\013ChatRequest\020\325\017" +
      "\022\025\n\020Back2HallRequest\020\326\017\022\024\n\017PlayerGamingS" +
      "yn\020\327\017\022\021\n\014PlayerSitSyn\020\330\017\022\024\n\017AwayGameRequ" +
      "est\020\331\017\022\022\n\rPlayerAwaySyn\020\332\017\022\026\n\021PlayerCome" +
      "backSyn\020\333\017\022\025\n\020PlayerOfflineSyn\020\334\017\022\027\n\022Pla" +
      "yerReconnectSyn\020\335\017\022\024\n\017ExitGameRequest\020\336\017",
      "\022\022\n\rPlayerExitSyn\020\337\017\022\r\n\010ReadySyn\020\340\017\022\021\n\014G" +
      "ameStartSyn\020\341\017\022\031\n\024CreateVipRoomRequest\020\342" +
      "\017\022\030\n\023EnterVipRoomRequest\020\343\017\022\026\n\021KickPlaye" +
      "rRequest\020\344\017\022\027\n\022VipRoomListReuqest\020\345\017\022\023\n\016" +
      "VipRoomListSyn\020\346\017\022\032\n\025DismissVipRoomReque" +
      "st\020\347\017\022\027\n\022GameChatMsgRequest\020\350\017\022\023\n\016GameCh" +
      "atMsgSyn\020\351\017\022\022\n\rHangupRequest\020\352\017\022\016\n\tHangu" +
      "pSyn\020\353\017\022\030\n\023CancelHangupRequest\020\354\017\022\023\n\016Des" +
      "kDestorySyn\020\355\017\022\016\n\tLogoutSyn\020\356\017\022\024\n\017Dissmi" +
      "ssVoteSyn\020\357\017\022\033\n\026PlayerGamingSynInquire\020\360",
      "\017\022\024\n\017BackGameRequest\020\361\017\022\034\n\027MultiMatchEnr" +
      "ollRequest\020\362\017\022\032\n\025ExitMultiMatchRequest\020\363" +
      "\017\022\027\n\022DissmissMultiMatch\020\364\017\022\032\n\025MultiMatch" +
      "StartNotify\020\365\017\022\027\n\022WaitNextMatchStart\020\366\017\022" +
      "\025\n\020FinishMultiMatch\020\367\017\022\026\n\021MultiMatchRank" +
      "Syn\020\370\017\022\030\n\023MultiMatchPlayerNum\020\371\017\022!\n\034Mult" +
      "iMatchEnrollSynWithLogin\020\372\017\022\023\n\016SignSynRe" +
      "quest\020\373\017\022\024\n\017SignSynResponse\020\374\017\022\020\n\013SignRe" +
      "quest\020\375\017\022\021\n\014SignResponse\020\376\017\022\030\n\023ActivityS" +
      "tartNotify\020\377\017\022\020\n\013PrayRequest\020\200\020\022\021\n\014PrayR",
      "esponse\020\201\020\022\034\n\027SymplecticRunnerRequest\020\202\020" +
      "\022\035\n\030SymplecticRunnerResponse\020\203\020\022\021\n\014ShouC" +
      "hongSyn\020\204\020\022\031\n\024ActivityFinishNotify\020\205\020\022\021\n" +
      "\014VideoRequest\020\206\020\022\022\n\rVideoResponse\020\207\020\022\027\n\022" +
      "DDZClearCardInDesk\020\210\020\022\025\n\020StartGameReques" +
      "t\020\211\020\022\031\n\024DissmissVoteResponse\020\212\020\022\024\n\017Playe" +
      "rSitRequst\020\213\020\022#\n\036PlayerExitPosNotExitRoo" +
      "mRequst\020\214\020\022%\n PlayerExitPosNotExitRoomRe" +
      "sponse\020\215\020\022\031\n\024VipRoomPlayerRequest\020\216\020\022\032\n\025" +
      "VipRoomPlayerResponse\020\217\020\022\020\n\013ClubInfoReq\020",
      "\220\020\022\020\n\013ClubInfoRsp\020\221\020\022\014\n\007ClubSyn\020\222\020\022\022\n\rCl" +
      "ubMemberReq\020\223\020\022\022\n\rClubMemberRsp\020\224\020\022\022\n\rCl" +
      "ubMemberSyn\020\225\020\022\024\n\017ClubRoomListReq\020\226\020\022\024\n\017" +
      "ClubRoomListRsp\020\227\020\022\022\n\rClubConfigReq\020\230\020\022\022" +
      "\n\rClubConfigSyn\020\231\020\022\021\n\014ApplyInfoRsp\020\232\020\022\016\n" +
      "\tApplyInfo\020\233\020\022\020\n\013ChatListReq\020\234\020\022\020\n\013ChatL" +
      "istRsp\020\235\020\022\020\n\013ChatListSyn\020\236\020\022\023\n\016ChatConte" +
      "ntReq\020\237\020\022\023\n\016ChatContentRsp\020\240\020\022\023\n\016ChatCon" +
      "tentSyn\020\241\020\022\022\n\rFriendListReq\020\242\020\022\022\n\rFriend" +
      "ListRsp\020\243\020\022\016\n\tFriendSyn\020\244\020\022\024\n\017FriendSear",
      "chReq\020\245\020\022\024\n\017FriendSearchRsp\020\246\020\022\r\n\010ApplyR" +
      "eq\020\247\020\022\023\n\016ApplyResultReq\020\250\020\022\033\n\026ClubAuthor" +
      "ityManageReq\020\251\020\022\016\n\tClubClose\020\252\020\022\030\n\023Dissm" +
      "issVoteRequest\020\253\020\022\025\n\020ClubRoomModelSyn\020\254\020" +
      "\022\025\n\020ClubScoreInfoReq\020\255\020\022\025\n\020ClubScoreInfo" +
      "Rsp\020\256\020\022\016\n\tRemarkSyn\020\257\020\022\024\n\017UpdateRemarkRe" +
      "q\020\260\020\022\024\n\017UpdateRemarkRsp\020\261\020\022\024\n\017ViewGuanZh" +
      "anReq\020\262\020\022\025\n\020ViewGuanZhanResp\020\263\020\022\023\n\016Playe" +
      "rEnterSyn\020\264\020\022\022\n\rGameOperation\020\271\027\022\027\n\022Read" +
      "MailMsgRequest\020\241\037\022\022\n\rMarqueeMsgSyn\020\242\037\022\022\n",
      "\rNewMailMsgSyn\020\245\037\022\035\n\030ReceiveMailAttachRe" +
      "quest\020\246\037\022\027\n\022ActAndNoticeMsgSyn\020\250\037\022\025\n\020qui" +
      "ckReciveAward\020\251\037\022\024\n\017quickRemoveMail\020\252\037\022\026" +
      "\n\021quickOperResponse\020\253\037\022\026\n\021RoomResultRequ" +
      "est\020\211\'\022\027\n\022RoomResultResponse\020\212\'\022\024\n\017GenOr" +
      "derRequest\020\361.\022\025\n\020GenOrderResponse\020\362.\022\030\n\023" +
      "ConfirmOrderRequest\020\363.\022\032\n\025ConfirmOrderRe" +
      "qsponse\020\364.\022\027\n\022MallProductRequest\020\365.\022\030\n\023M" +
      "allProductResponse\020\366.\022\027\n\022IPABuyItemCompl" +
      "ete\020\367.\022\016\n\tPocketPay\020\370.\022\020\n\013RankRequest\020\3316",
      "\022\014\n\007RankSyn\020\3326\022\026\n\021RoomConfigRequest\020\301>\022\027" +
      "\n\022RoomConfigResponse\020\302>\022\024\n\017ServerChangeS" +
      "yn\020\303>\022\017\n\nGameMsgSyn\020\304>"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_packet_msgbase_PacketBase_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_packet_msgbase_PacketBase_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_msgbase_PacketBase_descriptor,
              new java.lang.String[] { "PacketType", "Code", "Msg", "Data", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
