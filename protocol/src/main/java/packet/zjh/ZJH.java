// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ZJH.proto

package packet.zjh;

public final class ZJH {
  private ZJH() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ZJHGameOperStartSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint32 bankerPos = 1;
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasBankerPos();
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getBankerPos();

    // repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    java.util.List<packet.zjh.ZJH.ZJHGameOperHandCardSyn> 
        getPlayerHandCardsList();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    packet.zjh.ZJH.ZJHGameOperHandCardSyn getPlayerHandCards(int index);
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    int getPlayerHandCardsCount();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    java.util.List<? extends packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder> 
        getPlayerHandCardsOrBuilderList();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder getPlayerHandCardsOrBuilder(
        int index);

    // optional bool reconnect = 3;
    /**
     * <code>optional bool reconnect = 3;</code>
     *
     * <pre>
     *是否是断线重连 true是断线重连
     * </pre>
     */
    boolean hasReconnect();
    /**
     * <code>optional bool reconnect = 3;</code>
     *
     * <pre>
     *是否是断线重连 true是断线重连
     * </pre>
     */
    boolean getReconnect();

    // optional sint32 lunNum = 4;
    /**
     * <code>optional sint32 lunNum = 4;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    boolean hasLunNum();
    /**
     * <code>optional sint32 lunNum = 4;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    int getLunNum();

    // optional sint32 juNum = 5;
    /**
     * <code>optional sint32 juNum = 5;</code>
     *
     * <pre>
     *第几把
     * </pre>
     */
    boolean hasJuNum();
    /**
     * <code>optional sint32 juNum = 5;</code>
     *
     * <pre>
     *第几把
     * </pre>
     */
    int getJuNum();

    // optional sint32 zongZhu = 6;
    /**
     * <code>optional sint32 zongZhu = 6;</code>
     *
     * <pre>
     *总注
     * </pre>
     */
    boolean hasZongZhu();
    /**
     * <code>optional sint32 zongZhu = 6;</code>
     *
     * <pre>
     *总注
     * </pre>
     */
    int getZongZhu();

    // optional sint32 seq = 100;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    int getSeq();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperStartSyn}
   *
   * <pre>
   *游戏开始 operType=GAMESTART
   * </pre>
   */
  public static final class ZJHGameOperStartSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperStartSynOrBuilder {
    // Use ZJHGameOperStartSyn.newBuilder() to construct.
    private ZJHGameOperStartSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperStartSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperStartSyn defaultInstance;
    public static ZJHGameOperStartSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperStartSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperStartSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerPos_ = input.readSInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerHandCards_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHGameOperHandCardSyn>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerHandCards_.add(input.readMessage(packet.zjh.ZJH.ZJHGameOperHandCardSyn.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              reconnect_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              lunNum_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              juNum_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              zongZhu_ = input.readSInt32();
              break;
            }
            case 800: {
              bitField0_ |= 0x00000020;
              seq_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerHandCards_ = java.util.Collections.unmodifiableList(playerHandCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperStartSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperStartSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperStartSyn.class, packet.zjh.ZJH.ZJHGameOperStartSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperStartSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperStartSyn>() {
      public ZJHGameOperStartSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperStartSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperStartSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint32 bankerPos = 1;
    public static final int BANKERPOS_FIELD_NUMBER = 1;
    private int bankerPos_;
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasBankerPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 bankerPos = 1;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getBankerPos() {
      return bankerPos_;
    }

    // repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;
    public static final int PLAYERHANDCARDS_FIELD_NUMBER = 2;
    private java.util.List<packet.zjh.ZJH.ZJHGameOperHandCardSyn> playerHandCards_;
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public java.util.List<packet.zjh.ZJH.ZJHGameOperHandCardSyn> getPlayerHandCardsList() {
      return playerHandCards_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public java.util.List<? extends packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder> 
        getPlayerHandCardsOrBuilderList() {
      return playerHandCards_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public int getPlayerHandCardsCount() {
      return playerHandCards_.size();
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public packet.zjh.ZJH.ZJHGameOperHandCardSyn getPlayerHandCards(int index) {
      return playerHandCards_.get(index);
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
     *
     * <pre>
     *玩家手牌
     * </pre>
     */
    public packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder getPlayerHandCardsOrBuilder(
        int index) {
      return playerHandCards_.get(index);
    }

    // optional bool reconnect = 3;
    public static final int RECONNECT_FIELD_NUMBER = 3;
    private boolean reconnect_;
    /**
     * <code>optional bool reconnect = 3;</code>
     *
     * <pre>
     *是否是断线重连 true是断线重连
     * </pre>
     */
    public boolean hasReconnect() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool reconnect = 3;</code>
     *
     * <pre>
     *是否是断线重连 true是断线重连
     * </pre>
     */
    public boolean getReconnect() {
      return reconnect_;
    }

    // optional sint32 lunNum = 4;
    public static final int LUNNUM_FIELD_NUMBER = 4;
    private int lunNum_;
    /**
     * <code>optional sint32 lunNum = 4;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    public boolean hasLunNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 lunNum = 4;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    public int getLunNum() {
      return lunNum_;
    }

    // optional sint32 juNum = 5;
    public static final int JUNUM_FIELD_NUMBER = 5;
    private int juNum_;
    /**
     * <code>optional sint32 juNum = 5;</code>
     *
     * <pre>
     *第几把
     * </pre>
     */
    public boolean hasJuNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 juNum = 5;</code>
     *
     * <pre>
     *第几把
     * </pre>
     */
    public int getJuNum() {
      return juNum_;
    }

    // optional sint32 zongZhu = 6;
    public static final int ZONGZHU_FIELD_NUMBER = 6;
    private int zongZhu_;
    /**
     * <code>optional sint32 zongZhu = 6;</code>
     *
     * <pre>
     *总注
     * </pre>
     */
    public boolean hasZongZhu() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 zongZhu = 6;</code>
     *
     * <pre>
     *总注
     * </pre>
     */
    public int getZongZhu() {
      return zongZhu_;
    }

    // optional sint32 seq = 100;
    public static final int SEQ_FIELD_NUMBER = 100;
    private int seq_;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    private void initFields() {
      bankerPos_ = 0;
      playerHandCards_ = java.util.Collections.emptyList();
      reconnect_ = false;
      lunNum_ = 0;
      juNum_ = 0;
      zongZhu_ = 0;
      seq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getPlayerHandCardsCount(); i++) {
        if (!getPlayerHandCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, bankerPos_);
      }
      for (int i = 0; i < playerHandCards_.size(); i++) {
        output.writeMessage(2, playerHandCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, reconnect_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(4, lunNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(5, juNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(6, zongZhu_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(100, seq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, bankerPos_);
      }
      for (int i = 0; i < playerHandCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerHandCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, reconnect_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, lunNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, juNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, zongZhu_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(100, seq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperStartSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperStartSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperStartSyn}
     *
     * <pre>
     *游戏开始 operType=GAMESTART
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperStartSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperStartSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperStartSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperStartSyn.class, packet.zjh.ZJH.ZJHGameOperStartSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperStartSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerHandCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bankerPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerHandCardsBuilder_ == null) {
          playerHandCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playerHandCardsBuilder_.clear();
        }
        reconnect_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        lunNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        juNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        zongZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperStartSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperStartSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperStartSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperStartSyn build() {
        packet.zjh.ZJH.ZJHGameOperStartSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperStartSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperStartSyn result = new packet.zjh.ZJH.ZJHGameOperStartSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerPos_ = bankerPos_;
        if (playerHandCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            playerHandCards_ = java.util.Collections.unmodifiableList(playerHandCards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playerHandCards_ = playerHandCards_;
        } else {
          result.playerHandCards_ = playerHandCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reconnect_ = reconnect_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lunNum_ = lunNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.juNum_ = juNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.zongZhu_ = zongZhu_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seq_ = seq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperStartSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperStartSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperStartSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperStartSyn.getDefaultInstance()) return this;
        if (other.hasBankerPos()) {
          setBankerPos(other.getBankerPos());
        }
        if (playerHandCardsBuilder_ == null) {
          if (!other.playerHandCards_.isEmpty()) {
            if (playerHandCards_.isEmpty()) {
              playerHandCards_ = other.playerHandCards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayerHandCardsIsMutable();
              playerHandCards_.addAll(other.playerHandCards_);
            }
            onChanged();
          }
        } else {
          if (!other.playerHandCards_.isEmpty()) {
            if (playerHandCardsBuilder_.isEmpty()) {
              playerHandCardsBuilder_.dispose();
              playerHandCardsBuilder_ = null;
              playerHandCards_ = other.playerHandCards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playerHandCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerHandCardsFieldBuilder() : null;
            } else {
              playerHandCardsBuilder_.addAllMessages(other.playerHandCards_);
            }
          }
        }
        if (other.hasReconnect()) {
          setReconnect(other.getReconnect());
        }
        if (other.hasLunNum()) {
          setLunNum(other.getLunNum());
        }
        if (other.hasJuNum()) {
          setJuNum(other.getJuNum());
        }
        if (other.hasZongZhu()) {
          setZongZhu(other.getZongZhu());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPlayerHandCardsCount(); i++) {
          if (!getPlayerHandCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperStartSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperStartSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint32 bankerPos = 1;
      private int bankerPos_ ;
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasBankerPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getBankerPos() {
        return bankerPos_;
      }
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setBankerPos(int value) {
        bitField0_ |= 0x00000001;
        bankerPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 bankerPos = 1;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearBankerPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerPos_ = 0;
        onChanged();
        return this;
      }

      // repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;
      private java.util.List<packet.zjh.ZJH.ZJHGameOperHandCardSyn> playerHandCards_ =
        java.util.Collections.emptyList();
      private void ensurePlayerHandCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerHandCards_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHGameOperHandCardSyn>(playerHandCards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHGameOperHandCardSyn, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder, packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder> playerHandCardsBuilder_;

      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHGameOperHandCardSyn> getPlayerHandCardsList() {
        if (playerHandCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerHandCards_);
        } else {
          return playerHandCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public int getPlayerHandCardsCount() {
        if (playerHandCardsBuilder_ == null) {
          return playerHandCards_.size();
        } else {
          return playerHandCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperHandCardSyn getPlayerHandCards(int index) {
        if (playerHandCardsBuilder_ == null) {
          return playerHandCards_.get(index);
        } else {
          return playerHandCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder setPlayerHandCards(
          int index, packet.zjh.ZJH.ZJHGameOperHandCardSyn value) {
        if (playerHandCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.set(index, value);
          onChanged();
        } else {
          playerHandCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder setPlayerHandCards(
          int index, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder builderForValue) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerHandCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(packet.zjh.ZJH.ZJHGameOperHandCardSyn value) {
        if (playerHandCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(value);
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(
          int index, packet.zjh.ZJH.ZJHGameOperHandCardSyn value) {
        if (playerHandCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(index, value);
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(
          packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder builderForValue) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(builderForValue.build());
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addPlayerHandCards(
          int index, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder builderForValue) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerHandCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder addAllPlayerHandCards(
          java.lang.Iterable<? extends packet.zjh.ZJH.ZJHGameOperHandCardSyn> values) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          super.addAll(values, playerHandCards_);
          onChanged();
        } else {
          playerHandCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder clearPlayerHandCards() {
        if (playerHandCardsBuilder_ == null) {
          playerHandCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playerHandCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public Builder removePlayerHandCards(int index) {
        if (playerHandCardsBuilder_ == null) {
          ensurePlayerHandCardsIsMutable();
          playerHandCards_.remove(index);
          onChanged();
        } else {
          playerHandCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder getPlayerHandCardsBuilder(
          int index) {
        return getPlayerHandCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder getPlayerHandCardsOrBuilder(
          int index) {
        if (playerHandCardsBuilder_ == null) {
          return playerHandCards_.get(index);  } else {
          return playerHandCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public java.util.List<? extends packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder> 
           getPlayerHandCardsOrBuilderList() {
        if (playerHandCardsBuilder_ != null) {
          return playerHandCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerHandCards_);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder addPlayerHandCardsBuilder() {
        return getPlayerHandCardsFieldBuilder().addBuilder(
            packet.zjh.ZJH.ZJHGameOperHandCardSyn.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder addPlayerHandCardsBuilder(
          int index) {
        return getPlayerHandCardsFieldBuilder().addBuilder(
            index, packet.zjh.ZJH.ZJHGameOperHandCardSyn.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperHandCardSyn playerHandCards = 2;</code>
       *
       * <pre>
       *玩家手牌
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder> 
           getPlayerHandCardsBuilderList() {
        return getPlayerHandCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHGameOperHandCardSyn, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder, packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder> 
          getPlayerHandCardsFieldBuilder() {
        if (playerHandCardsBuilder_ == null) {
          playerHandCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.zjh.ZJH.ZJHGameOperHandCardSyn, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder, packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder>(
                  playerHandCards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          playerHandCards_ = null;
        }
        return playerHandCardsBuilder_;
      }

      // optional bool reconnect = 3;
      private boolean reconnect_ ;
      /**
       * <code>optional bool reconnect = 3;</code>
       *
       * <pre>
       *是否是断线重连 true是断线重连
       * </pre>
       */
      public boolean hasReconnect() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool reconnect = 3;</code>
       *
       * <pre>
       *是否是断线重连 true是断线重连
       * </pre>
       */
      public boolean getReconnect() {
        return reconnect_;
      }
      /**
       * <code>optional bool reconnect = 3;</code>
       *
       * <pre>
       *是否是断线重连 true是断线重连
       * </pre>
       */
      public Builder setReconnect(boolean value) {
        bitField0_ |= 0x00000004;
        reconnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reconnect = 3;</code>
       *
       * <pre>
       *是否是断线重连 true是断线重连
       * </pre>
       */
      public Builder clearReconnect() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reconnect_ = false;
        onChanged();
        return this;
      }

      // optional sint32 lunNum = 4;
      private int lunNum_ ;
      /**
       * <code>optional sint32 lunNum = 4;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public boolean hasLunNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 lunNum = 4;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public int getLunNum() {
        return lunNum_;
      }
      /**
       * <code>optional sint32 lunNum = 4;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public Builder setLunNum(int value) {
        bitField0_ |= 0x00000008;
        lunNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 lunNum = 4;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public Builder clearLunNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lunNum_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 juNum = 5;
      private int juNum_ ;
      /**
       * <code>optional sint32 juNum = 5;</code>
       *
       * <pre>
       *第几把
       * </pre>
       */
      public boolean hasJuNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 juNum = 5;</code>
       *
       * <pre>
       *第几把
       * </pre>
       */
      public int getJuNum() {
        return juNum_;
      }
      /**
       * <code>optional sint32 juNum = 5;</code>
       *
       * <pre>
       *第几把
       * </pre>
       */
      public Builder setJuNum(int value) {
        bitField0_ |= 0x00000010;
        juNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 juNum = 5;</code>
       *
       * <pre>
       *第几把
       * </pre>
       */
      public Builder clearJuNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        juNum_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 zongZhu = 6;
      private int zongZhu_ ;
      /**
       * <code>optional sint32 zongZhu = 6;</code>
       *
       * <pre>
       *总注
       * </pre>
       */
      public boolean hasZongZhu() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 zongZhu = 6;</code>
       *
       * <pre>
       *总注
       * </pre>
       */
      public int getZongZhu() {
        return zongZhu_;
      }
      /**
       * <code>optional sint32 zongZhu = 6;</code>
       *
       * <pre>
       *总注
       * </pre>
       */
      public Builder setZongZhu(int value) {
        bitField0_ |= 0x00000020;
        zongZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 zongZhu = 6;</code>
       *
       * <pre>
       *总注
       * </pre>
       */
      public Builder clearZongZhu() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zongZhu_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 seq = 100;
      private int seq_ ;
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000040;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,每一场游戏有一个唯一的序列号，方便错误跟踪
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000040);
        seq_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperStartSyn)
    }

    static {
      defaultInstance = new ZJHGameOperStartSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperStartSyn)
  }

  public interface ZJHGameOperHandCardSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // repeated sint32 handCards = 2;
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardsList();
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    int getHandCardsCount();
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    int getHandCards(int index);

    // optional sint32 socre = 5;
    /**
     * <code>optional sint32 socre = 5;</code>
     *
     * <pre>
     *玩家自己的分数
     * </pre>
     */
    boolean hasSocre();
    /**
     * <code>optional sint32 socre = 5;</code>
     *
     * <pre>
     *玩家自己的分数
     * </pre>
     */
    int getSocre();

    // optional sint32 chouMa = 6;
    /**
     * <code>optional sint32 chouMa = 6;</code>
     *
     * <pre>
     *筹码
     * </pre>
     */
    boolean hasChouMa();
    /**
     * <code>optional sint32 chouMa = 6;</code>
     *
     * <pre>
     *筹码
     * </pre>
     */
    int getChouMa();

    // optional bool isQiPai = 7;
    /**
     * <code>optional bool isQiPai = 7;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    boolean hasIsQiPai();
    /**
     * <code>optional bool isQiPai = 7;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    boolean getIsQiPai();

    // optional bool isWait = 8;
    /**
     * <code>optional bool isWait = 8;</code>
     *
     * <pre>
     *是否等待下一把
     * </pre>
     */
    boolean hasIsWait();
    /**
     * <code>optional bool isWait = 8;</code>
     *
     * <pre>
     *是否等待下一把
     * </pre>
     */
    boolean getIsWait();

    // optional bool isKanPai = 9;
    /**
     * <code>optional bool isKanPai = 9;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    boolean hasIsKanPai();
    /**
     * <code>optional bool isKanPai = 9;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    boolean getIsKanPai();

    // optional bool canKanPai = 10;
    /**
     * <code>optional bool canKanPai = 10;</code>
     *
     * <pre>
     *是否可以看牌
     * </pre>
     */
    boolean hasCanKanPai();
    /**
     * <code>optional bool canKanPai = 10;</code>
     *
     * <pre>
     *是否可以看牌
     * </pre>
     */
    boolean getCanKanPai();

    // optional sint32 playerDanZhu = 11;
    /**
     * <code>optional sint32 playerDanZhu = 11;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    boolean hasPlayerDanZhu();
    /**
     * <code>optional sint32 playerDanZhu = 11;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    int getPlayerDanZhu();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperHandCardSyn}
   *
   * <pre>
   *同步某个的玩家手牌, operType=HANDCARDS
   * </pre>
   */
  public static final class ZJHGameOperHandCardSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperHandCardSynOrBuilder {
    // Use ZJHGameOperHandCardSyn.newBuilder() to construct.
    private ZJHGameOperHandCardSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperHandCardSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperHandCardSyn defaultInstance;
    public static ZJHGameOperHandCardSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperHandCardSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperHandCardSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                handCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              handCards_.add(input.readSInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                handCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCards_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              socre_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              chouMa_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              isQiPai_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              isWait_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              isKanPai_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              canKanPai_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              playerDanZhu_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperHandCardSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperHandCardSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperHandCardSyn.class, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperHandCardSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperHandCardSyn>() {
      public ZJHGameOperHandCardSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperHandCardSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperHandCardSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // repeated sint32 handCards = 2;
    public static final int HANDCARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> handCards_;
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardsList() {
      return handCards_;
    }
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    public int getHandCardsCount() {
      return handCards_.size();
    }
    /**
     * <code>repeated sint32 handCards = 2;</code>
     *
     * <pre>
     *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
     * </pre>
     */
    public int getHandCards(int index) {
      return handCards_.get(index);
    }

    // optional sint32 socre = 5;
    public static final int SOCRE_FIELD_NUMBER = 5;
    private int socre_;
    /**
     * <code>optional sint32 socre = 5;</code>
     *
     * <pre>
     *玩家自己的分数
     * </pre>
     */
    public boolean hasSocre() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 socre = 5;</code>
     *
     * <pre>
     *玩家自己的分数
     * </pre>
     */
    public int getSocre() {
      return socre_;
    }

    // optional sint32 chouMa = 6;
    public static final int CHOUMA_FIELD_NUMBER = 6;
    private int chouMa_;
    /**
     * <code>optional sint32 chouMa = 6;</code>
     *
     * <pre>
     *筹码
     * </pre>
     */
    public boolean hasChouMa() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 chouMa = 6;</code>
     *
     * <pre>
     *筹码
     * </pre>
     */
    public int getChouMa() {
      return chouMa_;
    }

    // optional bool isQiPai = 7;
    public static final int ISQIPAI_FIELD_NUMBER = 7;
    private boolean isQiPai_;
    /**
     * <code>optional bool isQiPai = 7;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    public boolean hasIsQiPai() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool isQiPai = 7;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    public boolean getIsQiPai() {
      return isQiPai_;
    }

    // optional bool isWait = 8;
    public static final int ISWAIT_FIELD_NUMBER = 8;
    private boolean isWait_;
    /**
     * <code>optional bool isWait = 8;</code>
     *
     * <pre>
     *是否等待下一把
     * </pre>
     */
    public boolean hasIsWait() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool isWait = 8;</code>
     *
     * <pre>
     *是否等待下一把
     * </pre>
     */
    public boolean getIsWait() {
      return isWait_;
    }

    // optional bool isKanPai = 9;
    public static final int ISKANPAI_FIELD_NUMBER = 9;
    private boolean isKanPai_;
    /**
     * <code>optional bool isKanPai = 9;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    public boolean hasIsKanPai() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isKanPai = 9;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    public boolean getIsKanPai() {
      return isKanPai_;
    }

    // optional bool canKanPai = 10;
    public static final int CANKANPAI_FIELD_NUMBER = 10;
    private boolean canKanPai_;
    /**
     * <code>optional bool canKanPai = 10;</code>
     *
     * <pre>
     *是否可以看牌
     * </pre>
     */
    public boolean hasCanKanPai() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool canKanPai = 10;</code>
     *
     * <pre>
     *是否可以看牌
     * </pre>
     */
    public boolean getCanKanPai() {
      return canKanPai_;
    }

    // optional sint32 playerDanZhu = 11;
    public static final int PLAYERDANZHU_FIELD_NUMBER = 11;
    private int playerDanZhu_;
    /**
     * <code>optional sint32 playerDanZhu = 11;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    public boolean hasPlayerDanZhu() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 playerDanZhu = 11;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    public int getPlayerDanZhu() {
      return playerDanZhu_;
    }

    private void initFields() {
      position_ = 0;
      handCards_ = java.util.Collections.emptyList();
      socre_ = 0;
      chouMa_ = 0;
      isQiPai_ = false;
      isWait_ = false;
      isKanPai_ = false;
      canKanPai_ = false;
      playerDanZhu_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      for (int i = 0; i < handCards_.size(); i++) {
        output.writeSInt32(2, handCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(5, socre_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(6, chouMa_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(7, isQiPai_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(8, isWait_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(9, isKanPai_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(10, canKanPai_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(11, playerDanZhu_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(handCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, socre_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, chouMa_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isQiPai_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isWait_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isKanPai_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, canKanPai_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, playerDanZhu_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperHandCardSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperHandCardSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperHandCardSyn}
     *
     * <pre>
     *同步某个的玩家手牌, operType=HANDCARDS
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperHandCardSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperHandCardSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperHandCardSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperHandCardSyn.class, packet.zjh.ZJH.ZJHGameOperHandCardSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperHandCardSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        handCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        socre_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        chouMa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isQiPai_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isWait_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isKanPai_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        canKanPai_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        playerDanZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperHandCardSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperHandCardSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperHandCardSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperHandCardSyn build() {
        packet.zjh.ZJH.ZJHGameOperHandCardSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperHandCardSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperHandCardSyn result = new packet.zjh.ZJH.ZJHGameOperHandCardSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.handCards_ = handCards_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.socre_ = socre_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chouMa_ = chouMa_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isQiPai_ = isQiPai_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isWait_ = isWait_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isKanPai_ = isKanPai_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.canKanPai_ = canKanPai_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.playerDanZhu_ = playerDanZhu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperHandCardSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperHandCardSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperHandCardSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperHandCardSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (!other.handCards_.isEmpty()) {
          if (handCards_.isEmpty()) {
            handCards_ = other.handCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandCardsIsMutable();
            handCards_.addAll(other.handCards_);
          }
          onChanged();
        }
        if (other.hasSocre()) {
          setSocre(other.getSocre());
        }
        if (other.hasChouMa()) {
          setChouMa(other.getChouMa());
        }
        if (other.hasIsQiPai()) {
          setIsQiPai(other.getIsQiPai());
        }
        if (other.hasIsWait()) {
          setIsWait(other.getIsWait());
        }
        if (other.hasIsKanPai()) {
          setIsKanPai(other.getIsKanPai());
        }
        if (other.hasCanKanPai()) {
          setCanKanPai(other.getCanKanPai());
        }
        if (other.hasPlayerDanZhu()) {
          setPlayerDanZhu(other.getPlayerDanZhu());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperHandCardSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperHandCardSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 handCards = 2;
      private java.util.List<java.lang.Integer> handCards_ = java.util.Collections.emptyList();
      private void ensureHandCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          handCards_ = new java.util.ArrayList<java.lang.Integer>(handCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardsList() {
        return java.util.Collections.unmodifiableList(handCards_);
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public int getHandCardsCount() {
        return handCards_.size();
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public int getHandCards(int index) {
        return handCards_.get(index);
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder setHandCards(
          int index, int value) {
        ensureHandCardsIsMutable();
        handCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder addHandCards(int value) {
        ensureHandCardsIsMutable();
        handCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder addAllHandCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardsIsMutable();
        super.addAll(values, handCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handCards = 2;</code>
       *
       * <pre>
       *手中的牌,如果是其他玩家(即不是当前玩家),则列表里面存放的是-1而不是牌的真实值
       * </pre>
       */
      public Builder clearHandCards() {
        handCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional sint32 socre = 5;
      private int socre_ ;
      /**
       * <code>optional sint32 socre = 5;</code>
       *
       * <pre>
       *玩家自己的分数
       * </pre>
       */
      public boolean hasSocre() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 socre = 5;</code>
       *
       * <pre>
       *玩家自己的分数
       * </pre>
       */
      public int getSocre() {
        return socre_;
      }
      /**
       * <code>optional sint32 socre = 5;</code>
       *
       * <pre>
       *玩家自己的分数
       * </pre>
       */
      public Builder setSocre(int value) {
        bitField0_ |= 0x00000004;
        socre_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 socre = 5;</code>
       *
       * <pre>
       *玩家自己的分数
       * </pre>
       */
      public Builder clearSocre() {
        bitField0_ = (bitField0_ & ~0x00000004);
        socre_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 chouMa = 6;
      private int chouMa_ ;
      /**
       * <code>optional sint32 chouMa = 6;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      public boolean hasChouMa() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 chouMa = 6;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      public int getChouMa() {
        return chouMa_;
      }
      /**
       * <code>optional sint32 chouMa = 6;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      public Builder setChouMa(int value) {
        bitField0_ |= 0x00000008;
        chouMa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 chouMa = 6;</code>
       *
       * <pre>
       *筹码
       * </pre>
       */
      public Builder clearChouMa() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chouMa_ = 0;
        onChanged();
        return this;
      }

      // optional bool isQiPai = 7;
      private boolean isQiPai_ ;
      /**
       * <code>optional bool isQiPai = 7;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public boolean hasIsQiPai() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool isQiPai = 7;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public boolean getIsQiPai() {
        return isQiPai_;
      }
      /**
       * <code>optional bool isQiPai = 7;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public Builder setIsQiPai(boolean value) {
        bitField0_ |= 0x00000010;
        isQiPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isQiPai = 7;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public Builder clearIsQiPai() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isQiPai_ = false;
        onChanged();
        return this;
      }

      // optional bool isWait = 8;
      private boolean isWait_ ;
      /**
       * <code>optional bool isWait = 8;</code>
       *
       * <pre>
       *是否等待下一把
       * </pre>
       */
      public boolean hasIsWait() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool isWait = 8;</code>
       *
       * <pre>
       *是否等待下一把
       * </pre>
       */
      public boolean getIsWait() {
        return isWait_;
      }
      /**
       * <code>optional bool isWait = 8;</code>
       *
       * <pre>
       *是否等待下一把
       * </pre>
       */
      public Builder setIsWait(boolean value) {
        bitField0_ |= 0x00000020;
        isWait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isWait = 8;</code>
       *
       * <pre>
       *是否等待下一把
       * </pre>
       */
      public Builder clearIsWait() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isWait_ = false;
        onChanged();
        return this;
      }

      // optional bool isKanPai = 9;
      private boolean isKanPai_ ;
      /**
       * <code>optional bool isKanPai = 9;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public boolean hasIsKanPai() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isKanPai = 9;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public boolean getIsKanPai() {
        return isKanPai_;
      }
      /**
       * <code>optional bool isKanPai = 9;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public Builder setIsKanPai(boolean value) {
        bitField0_ |= 0x00000040;
        isKanPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isKanPai = 9;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public Builder clearIsKanPai() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isKanPai_ = false;
        onChanged();
        return this;
      }

      // optional bool canKanPai = 10;
      private boolean canKanPai_ ;
      /**
       * <code>optional bool canKanPai = 10;</code>
       *
       * <pre>
       *是否可以看牌
       * </pre>
       */
      public boolean hasCanKanPai() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool canKanPai = 10;</code>
       *
       * <pre>
       *是否可以看牌
       * </pre>
       */
      public boolean getCanKanPai() {
        return canKanPai_;
      }
      /**
       * <code>optional bool canKanPai = 10;</code>
       *
       * <pre>
       *是否可以看牌
       * </pre>
       */
      public Builder setCanKanPai(boolean value) {
        bitField0_ |= 0x00000080;
        canKanPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool canKanPai = 10;</code>
       *
       * <pre>
       *是否可以看牌
       * </pre>
       */
      public Builder clearCanKanPai() {
        bitField0_ = (bitField0_ & ~0x00000080);
        canKanPai_ = false;
        onChanged();
        return this;
      }

      // optional sint32 playerDanZhu = 11;
      private int playerDanZhu_ ;
      /**
       * <code>optional sint32 playerDanZhu = 11;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public boolean hasPlayerDanZhu() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 playerDanZhu = 11;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public int getPlayerDanZhu() {
        return playerDanZhu_;
      }
      /**
       * <code>optional sint32 playerDanZhu = 11;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public Builder setPlayerDanZhu(int value) {
        bitField0_ |= 0x00000100;
        playerDanZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerDanZhu = 11;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public Builder clearPlayerDanZhu() {
        bitField0_ = (bitField0_ & ~0x00000100);
        playerDanZhu_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperHandCardSyn)
    }

    static {
      defaultInstance = new ZJHGameOperHandCardSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperHandCardSyn)
  }

  public interface ZJHGameOperPublicInfoSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated sint32 cardLeft = 1;
    /**
     * <code>repeated sint32 cardLeft = 1;</code>
     *
     * <pre>
     *地主牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardLeftList();
    /**
     * <code>repeated sint32 cardLeft = 1;</code>
     *
     * <pre>
     *地主牌
     * </pre>
     */
    int getCardLeftCount();
    /**
     * <code>repeated sint32 cardLeft = 1;</code>
     *
     * <pre>
     *地主牌
     * </pre>
     */
    int getCardLeft(int index);
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperPublicInfoSyn}
   */
  public static final class ZJHGameOperPublicInfoSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperPublicInfoSynOrBuilder {
    // Use ZJHGameOperPublicInfoSyn.newBuilder() to construct.
    private ZJHGameOperPublicInfoSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperPublicInfoSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperPublicInfoSyn defaultInstance;
    public static ZJHGameOperPublicInfoSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperPublicInfoSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperPublicInfoSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardLeft_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardLeft_.add(input.readSInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardLeft_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardLeft_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardLeft_ = java.util.Collections.unmodifiableList(cardLeft_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.class, packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperPublicInfoSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperPublicInfoSyn>() {
      public ZJHGameOperPublicInfoSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperPublicInfoSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperPublicInfoSyn> getParserForType() {
      return PARSER;
    }

    // repeated sint32 cardLeft = 1;
    public static final int CARDLEFT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardLeft_;
    /**
     * <code>repeated sint32 cardLeft = 1;</code>
     *
     * <pre>
     *地主牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardLeftList() {
      return cardLeft_;
    }
    /**
     * <code>repeated sint32 cardLeft = 1;</code>
     *
     * <pre>
     *地主牌
     * </pre>
     */
    public int getCardLeftCount() {
      return cardLeft_.size();
    }
    /**
     * <code>repeated sint32 cardLeft = 1;</code>
     *
     * <pre>
     *地主牌
     * </pre>
     */
    public int getCardLeft(int index) {
      return cardLeft_.get(index);
    }

    private void initFields() {
      cardLeft_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cardLeft_.size(); i++) {
        output.writeSInt32(1, cardLeft_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardLeft_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(cardLeft_.get(i));
        }
        size += dataSize;
        size += 1 * getCardLeftList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperPublicInfoSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperPublicInfoSyn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperPublicInfoSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.class, packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardLeft_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperPublicInfoSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperPublicInfoSyn build() {
        packet.zjh.ZJH.ZJHGameOperPublicInfoSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperPublicInfoSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperPublicInfoSyn result = new packet.zjh.ZJH.ZJHGameOperPublicInfoSyn(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardLeft_ = java.util.Collections.unmodifiableList(cardLeft_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardLeft_ = cardLeft_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperPublicInfoSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperPublicInfoSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperPublicInfoSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperPublicInfoSyn.getDefaultInstance()) return this;
        if (!other.cardLeft_.isEmpty()) {
          if (cardLeft_.isEmpty()) {
            cardLeft_ = other.cardLeft_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardLeftIsMutable();
            cardLeft_.addAll(other.cardLeft_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperPublicInfoSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperPublicInfoSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated sint32 cardLeft = 1;
      private java.util.List<java.lang.Integer> cardLeft_ = java.util.Collections.emptyList();
      private void ensureCardLeftIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardLeft_ = new java.util.ArrayList<java.lang.Integer>(cardLeft_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardLeftList() {
        return java.util.Collections.unmodifiableList(cardLeft_);
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public int getCardLeftCount() {
        return cardLeft_.size();
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public int getCardLeft(int index) {
        return cardLeft_.get(index);
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public Builder setCardLeft(
          int index, int value) {
        ensureCardLeftIsMutable();
        cardLeft_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public Builder addCardLeft(int value) {
        ensureCardLeftIsMutable();
        cardLeft_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public Builder addAllCardLeft(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardLeftIsMutable();
        super.addAll(values, cardLeft_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardLeft = 1;</code>
       *
       * <pre>
       *地主牌
       * </pre>
       */
      public Builder clearCardLeft() {
        cardLeft_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperPublicInfoSyn)
    }

    static {
      defaultInstance = new ZJHGameOperPublicInfoSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperPublicInfoSyn)
  }

  public interface ZJHGameOperActorSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // required sint32 timeLeft = 2;
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    boolean hasTimeLeft();
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    int getTimeLeft();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperActorSyn}
   *
   * <pre>
   *同步行动者信息 operType=ACTSYN
   * </pre>
   */
  public static final class ZJHGameOperActorSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperActorSynOrBuilder {
    // Use ZJHGameOperActorSyn.newBuilder() to construct.
    private ZJHGameOperActorSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperActorSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperActorSyn defaultInstance;
    public static ZJHGameOperActorSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperActorSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperActorSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeLeft_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperActorSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperActorSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperActorSyn.class, packet.zjh.ZJH.ZJHGameOperActorSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperActorSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperActorSyn>() {
      public ZJHGameOperActorSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperActorSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperActorSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 timeLeft = 2;
    public static final int TIMELEFT_FIELD_NUMBER = 2;
    private int timeLeft_;
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    public boolean hasTimeLeft() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 timeLeft = 2;</code>
     *
     * <pre>
     *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
     * </pre>
     */
    public int getTimeLeft() {
      return timeLeft_;
    }

    private void initFields() {
      position_ = 0;
      timeLeft_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, timeLeft_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, timeLeft_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperActorSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperActorSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperActorSyn}
     *
     * <pre>
     *同步行动者信息 operType=ACTSYN
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperActorSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperActorSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperActorSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperActorSyn.class, packet.zjh.ZJH.ZJHGameOperActorSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperActorSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeLeft_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperActorSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperActorSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperActorSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperActorSyn build() {
        packet.zjh.ZJH.ZJHGameOperActorSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperActorSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperActorSyn result = new packet.zjh.ZJH.ZJHGameOperActorSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeLeft_ = timeLeft_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperActorSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperActorSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperActorSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperActorSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasTimeLeft()) {
          setTimeLeft(other.getTimeLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasTimeLeft()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperActorSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperActorSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 timeLeft = 2;
      private int timeLeft_ ;
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public boolean hasTimeLeft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public int getTimeLeft() {
        return timeLeft_;
      }
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public Builder setTimeLeft(int value) {
        bitField0_ |= 0x00000002;
        timeLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 timeLeft = 2;</code>
       *
       * <pre>
       *操作超时时间，比如：10，代表10秒内玩家不操作服务器将托管
       * </pre>
       */
      public Builder clearTimeLeft() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeLeft_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperActorSyn)
    }

    static {
      defaultInstance = new ZJHGameOperActorSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperActorSyn)
  }

  public interface ZJHGameOperPlayerActionSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // required sint32 action = 2;
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    int getAction();

    // repeated sint32 cardValue = 3;
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardValueList();
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    int getCardValueCount();
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    int getCardValue(int index);

    // optional sint32 chouMa = 4;
    /**
     * <code>optional sint32 chouMa = 4;</code>
     *
     * <pre>
     *加注或者跟注的筹码大小
     * </pre>
     */
    boolean hasChouMa();
    /**
     * <code>optional sint32 chouMa = 4;</code>
     *
     * <pre>
     *加注或者跟注的筹码大小
     * </pre>
     */
    int getChouMa();

    // optional sint32 biPaiPos = 5;
    /**
     * <code>optional sint32 biPaiPos = 5;</code>
     *
     * <pre>
     *被比牌人的座位号
     * </pre>
     */
    boolean hasBiPaiPos();
    /**
     * <code>optional sint32 biPaiPos = 5;</code>
     *
     * <pre>
     *被比牌人的座位号
     * </pre>
     */
    int getBiPaiPos();

    // optional sint32 winnerPos = 6;
    /**
     * <code>optional sint32 winnerPos = 6;</code>
     *
     * <pre>
     *比牌时赢得人座位号
     * </pre>
     */
    boolean hasWinnerPos();
    /**
     * <code>optional sint32 winnerPos = 6;</code>
     *
     * <pre>
     *比牌时赢得人座位号
     * </pre>
     */
    int getWinnerPos();

    // optional sint32 playerZongZhu = 7;
    /**
     * <code>optional sint32 playerZongZhu = 7;</code>
     *
     * <pre>
     *玩家总共下了多少筹码
     * </pre>
     */
    boolean hasPlayerZongZhu();
    /**
     * <code>optional sint32 playerZongZhu = 7;</code>
     *
     * <pre>
     *玩家总共下了多少筹码
     * </pre>
     */
    int getPlayerZongZhu();

    // optional sint32 playerDanZhu = 8;
    /**
     * <code>optional sint32 playerDanZhu = 8;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    boolean hasPlayerDanZhu();
    /**
     * <code>optional sint32 playerDanZhu = 8;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    int getPlayerDanZhu();

    // optional sint32 deskZongZhu = 9;
    /**
     * <code>optional sint32 deskZongZhu = 9;</code>
     *
     * <pre>
     *桌子总注
     * </pre>
     */
    boolean hasDeskZongZhu();
    /**
     * <code>optional sint32 deskZongZhu = 9;</code>
     *
     * <pre>
     *桌子总注
     * </pre>
     */
    int getDeskZongZhu();

    // optional sint32 lunNum = 10;
    /**
     * <code>optional sint32 lunNum = 10;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    boolean hasLunNum();
    /**
     * <code>optional sint32 lunNum = 10;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    int getLunNum();

    // optional sint32 cardType = 11;
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardType();

    // repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerData> 
        getPlayerDataList();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    packet.zjh.ZJH.ZJHGameOperPlayerData getPlayerData(int index);
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    int getPlayerDataCount();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    java.util.List<? extends packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder> 
        getPlayerDataOrBuilderList();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder getPlayerDataOrBuilder(
        int index);

    // repeated sint32 biPaiCardValue = 13;
    /**
     * <code>repeated sint32 biPaiCardValue = 13;</code>
     *
     * <pre>
     *被比牌人的手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getBiPaiCardValueList();
    /**
     * <code>repeated sint32 biPaiCardValue = 13;</code>
     *
     * <pre>
     *被比牌人的手牌
     * </pre>
     */
    int getBiPaiCardValueCount();
    /**
     * <code>repeated sint32 biPaiCardValue = 13;</code>
     *
     * <pre>
     *被比牌人的手牌
     * </pre>
     */
    int getBiPaiCardValue(int index);

    // optional sint32 seq = 100;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    int getSeq();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperPlayerActionSyn}
   *
   * <pre>
   *玩家操作同步operType=ACTIONSYN, 前端通过此包告诉后端玩家进行了什么操作，后端通过此包将操作告诉其它玩家
   * </pre>
   */
  public static final class ZJHGameOperPlayerActionSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperPlayerActionSynOrBuilder {
    // Use ZJHGameOperPlayerActionSyn.newBuilder() to construct.
    private ZJHGameOperPlayerActionSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperPlayerActionSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperPlayerActionSyn defaultInstance;
    public static ZJHGameOperPlayerActionSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperPlayerActionSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperPlayerActionSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              action_ = input.readSInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardValue_.add(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardValue_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              chouMa_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              biPaiPos_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              winnerPos_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              playerZongZhu_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              playerDanZhu_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              deskZongZhu_ = input.readSInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              lunNum_ = input.readSInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              cardType_ = input.readSInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                playerData_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHGameOperPlayerData>();
                mutable_bitField0_ |= 0x00000800;
              }
              playerData_.add(input.readMessage(packet.zjh.ZJH.ZJHGameOperPlayerData.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                biPaiCardValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              biPaiCardValue_.add(input.readSInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                biPaiCardValue_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                biPaiCardValue_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 800: {
              bitField0_ |= 0x00000400;
              seq_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardValue_ = java.util.Collections.unmodifiableList(cardValue_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          playerData_ = java.util.Collections.unmodifiableList(playerData_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          biPaiCardValue_ = java.util.Collections.unmodifiableList(biPaiCardValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.class, packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperPlayerActionSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperPlayerActionSyn>() {
      public ZJHGameOperPlayerActionSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperPlayerActionSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperPlayerActionSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 action = 2;
    public static final int ACTION_FIELD_NUMBER = 2;
    private int action_;
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 action = 2;</code>
     *
     * <pre>
     *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // repeated sint32 cardValue = 3;
    public static final int CARDVALUE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardValue_;
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardValueList() {
      return cardValue_;
    }
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public int getCardValueCount() {
      return cardValue_.size();
    }
    /**
     * <code>repeated sint32 cardValue = 3;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public int getCardValue(int index) {
      return cardValue_.get(index);
    }

    // optional sint32 chouMa = 4;
    public static final int CHOUMA_FIELD_NUMBER = 4;
    private int chouMa_;
    /**
     * <code>optional sint32 chouMa = 4;</code>
     *
     * <pre>
     *加注或者跟注的筹码大小
     * </pre>
     */
    public boolean hasChouMa() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 chouMa = 4;</code>
     *
     * <pre>
     *加注或者跟注的筹码大小
     * </pre>
     */
    public int getChouMa() {
      return chouMa_;
    }

    // optional sint32 biPaiPos = 5;
    public static final int BIPAIPOS_FIELD_NUMBER = 5;
    private int biPaiPos_;
    /**
     * <code>optional sint32 biPaiPos = 5;</code>
     *
     * <pre>
     *被比牌人的座位号
     * </pre>
     */
    public boolean hasBiPaiPos() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 biPaiPos = 5;</code>
     *
     * <pre>
     *被比牌人的座位号
     * </pre>
     */
    public int getBiPaiPos() {
      return biPaiPos_;
    }

    // optional sint32 winnerPos = 6;
    public static final int WINNERPOS_FIELD_NUMBER = 6;
    private int winnerPos_;
    /**
     * <code>optional sint32 winnerPos = 6;</code>
     *
     * <pre>
     *比牌时赢得人座位号
     * </pre>
     */
    public boolean hasWinnerPos() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 winnerPos = 6;</code>
     *
     * <pre>
     *比牌时赢得人座位号
     * </pre>
     */
    public int getWinnerPos() {
      return winnerPos_;
    }

    // optional sint32 playerZongZhu = 7;
    public static final int PLAYERZONGZHU_FIELD_NUMBER = 7;
    private int playerZongZhu_;
    /**
     * <code>optional sint32 playerZongZhu = 7;</code>
     *
     * <pre>
     *玩家总共下了多少筹码
     * </pre>
     */
    public boolean hasPlayerZongZhu() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 playerZongZhu = 7;</code>
     *
     * <pre>
     *玩家总共下了多少筹码
     * </pre>
     */
    public int getPlayerZongZhu() {
      return playerZongZhu_;
    }

    // optional sint32 playerDanZhu = 8;
    public static final int PLAYERDANZHU_FIELD_NUMBER = 8;
    private int playerDanZhu_;
    /**
     * <code>optional sint32 playerDanZhu = 8;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    public boolean hasPlayerDanZhu() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 playerDanZhu = 8;</code>
     *
     * <pre>
     *玩家单注
     * </pre>
     */
    public int getPlayerDanZhu() {
      return playerDanZhu_;
    }

    // optional sint32 deskZongZhu = 9;
    public static final int DESKZONGZHU_FIELD_NUMBER = 9;
    private int deskZongZhu_;
    /**
     * <code>optional sint32 deskZongZhu = 9;</code>
     *
     * <pre>
     *桌子总注
     * </pre>
     */
    public boolean hasDeskZongZhu() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 deskZongZhu = 9;</code>
     *
     * <pre>
     *桌子总注
     * </pre>
     */
    public int getDeskZongZhu() {
      return deskZongZhu_;
    }

    // optional sint32 lunNum = 10;
    public static final int LUNNUM_FIELD_NUMBER = 10;
    private int lunNum_;
    /**
     * <code>optional sint32 lunNum = 10;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    public boolean hasLunNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 lunNum = 10;</code>
     *
     * <pre>
     *第几轮
     * </pre>
     */
    public int getLunNum() {
      return lunNum_;
    }

    // optional sint32 cardType = 11;
    public static final int CARDTYPE_FIELD_NUMBER = 11;
    private int cardType_;
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;
    public static final int PLAYERDATA_FIELD_NUMBER = 12;
    private java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerData> playerData_;
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    public java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerData> getPlayerDataList() {
      return playerData_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    public java.util.List<? extends packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder> 
        getPlayerDataOrBuilderList() {
      return playerData_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    public int getPlayerDataCount() {
      return playerData_.size();
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    public packet.zjh.ZJH.ZJHGameOperPlayerData getPlayerData(int index) {
      return playerData_.get(index);
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
     *
     * <pre>
     *玩家数据
     * </pre>
     */
    public packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder getPlayerDataOrBuilder(
        int index) {
      return playerData_.get(index);
    }

    // repeated sint32 biPaiCardValue = 13;
    public static final int BIPAICARDVALUE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> biPaiCardValue_;
    /**
     * <code>repeated sint32 biPaiCardValue = 13;</code>
     *
     * <pre>
     *被比牌人的手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBiPaiCardValueList() {
      return biPaiCardValue_;
    }
    /**
     * <code>repeated sint32 biPaiCardValue = 13;</code>
     *
     * <pre>
     *被比牌人的手牌
     * </pre>
     */
    public int getBiPaiCardValueCount() {
      return biPaiCardValue_.size();
    }
    /**
     * <code>repeated sint32 biPaiCardValue = 13;</code>
     *
     * <pre>
     *被比牌人的手牌
     * </pre>
     */
    public int getBiPaiCardValue(int index) {
      return biPaiCardValue_.get(index);
    }

    // optional sint32 seq = 100;
    public static final int SEQ_FIELD_NUMBER = 100;
    private int seq_;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    private void initFields() {
      position_ = 0;
      action_ = 0;
      cardValue_ = java.util.Collections.emptyList();
      chouMa_ = 0;
      biPaiPos_ = 0;
      winnerPos_ = 0;
      playerZongZhu_ = 0;
      playerDanZhu_ = 0;
      deskZongZhu_ = 0;
      lunNum_ = 0;
      cardType_ = 0;
      playerData_ = java.util.Collections.emptyList();
      biPaiCardValue_ = java.util.Collections.emptyList();
      seq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerDataCount(); i++) {
        if (!getPlayerData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, action_);
      }
      for (int i = 0; i < cardValue_.size(); i++) {
        output.writeSInt32(3, cardValue_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(4, chouMa_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(5, biPaiPos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(6, winnerPos_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(7, playerZongZhu_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, playerDanZhu_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(9, deskZongZhu_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(10, lunNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt32(11, cardType_);
      }
      for (int i = 0; i < playerData_.size(); i++) {
        output.writeMessage(12, playerData_.get(i));
      }
      for (int i = 0; i < biPaiCardValue_.size(); i++) {
        output.writeSInt32(13, biPaiCardValue_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt32(100, seq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, action_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(cardValue_.get(i));
        }
        size += dataSize;
        size += 1 * getCardValueList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, chouMa_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, biPaiPos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, winnerPos_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, playerZongZhu_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, playerDanZhu_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, deskZongZhu_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, lunNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, cardType_);
      }
      for (int i = 0; i < playerData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, playerData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < biPaiCardValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(biPaiCardValue_.get(i));
        }
        size += dataSize;
        size += 1 * getBiPaiCardValueList().size();
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(100, seq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperPlayerActionSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperPlayerActionSyn}
     *
     * <pre>
     *玩家操作同步operType=ACTIONSYN, 前端通过此包告诉后端玩家进行了什么操作，后端通过此包将操作告诉其它玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperPlayerActionSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.class, packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        chouMa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        biPaiPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        winnerPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        playerZongZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        playerDanZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        deskZongZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        lunNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (playerDataBuilder_ == null) {
          playerData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          playerDataBuilder_.clear();
        }
        biPaiCardValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerActionSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerActionSyn build() {
        packet.zjh.ZJH.ZJHGameOperPlayerActionSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerActionSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperPlayerActionSyn result = new packet.zjh.ZJH.ZJHGameOperPlayerActionSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.action_ = action_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardValue_ = java.util.Collections.unmodifiableList(cardValue_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardValue_ = cardValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chouMa_ = chouMa_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.biPaiPos_ = biPaiPos_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.winnerPos_ = winnerPos_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playerZongZhu_ = playerZongZhu_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerDanZhu_ = playerDanZhu_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.deskZongZhu_ = deskZongZhu_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lunNum_ = lunNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.cardType_ = cardType_;
        if (playerDataBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            playerData_ = java.util.Collections.unmodifiableList(playerData_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.playerData_ = playerData_;
        } else {
          result.playerData_ = playerDataBuilder_.build();
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          biPaiCardValue_ = java.util.Collections.unmodifiableList(biPaiCardValue_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.biPaiCardValue_ = biPaiCardValue_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.seq_ = seq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperPlayerActionSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperPlayerActionSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperPlayerActionSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperPlayerActionSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (!other.cardValue_.isEmpty()) {
          if (cardValue_.isEmpty()) {
            cardValue_ = other.cardValue_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardValueIsMutable();
            cardValue_.addAll(other.cardValue_);
          }
          onChanged();
        }
        if (other.hasChouMa()) {
          setChouMa(other.getChouMa());
        }
        if (other.hasBiPaiPos()) {
          setBiPaiPos(other.getBiPaiPos());
        }
        if (other.hasWinnerPos()) {
          setWinnerPos(other.getWinnerPos());
        }
        if (other.hasPlayerZongZhu()) {
          setPlayerZongZhu(other.getPlayerZongZhu());
        }
        if (other.hasPlayerDanZhu()) {
          setPlayerDanZhu(other.getPlayerDanZhu());
        }
        if (other.hasDeskZongZhu()) {
          setDeskZongZhu(other.getDeskZongZhu());
        }
        if (other.hasLunNum()) {
          setLunNum(other.getLunNum());
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (playerDataBuilder_ == null) {
          if (!other.playerData_.isEmpty()) {
            if (playerData_.isEmpty()) {
              playerData_ = other.playerData_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensurePlayerDataIsMutable();
              playerData_.addAll(other.playerData_);
            }
            onChanged();
          }
        } else {
          if (!other.playerData_.isEmpty()) {
            if (playerDataBuilder_.isEmpty()) {
              playerDataBuilder_.dispose();
              playerDataBuilder_ = null;
              playerData_ = other.playerData_;
              bitField0_ = (bitField0_ & ~0x00000800);
              playerDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerDataFieldBuilder() : null;
            } else {
              playerDataBuilder_.addAllMessages(other.playerData_);
            }
          }
        }
        if (!other.biPaiCardValue_.isEmpty()) {
          if (biPaiCardValue_.isEmpty()) {
            biPaiCardValue_ = other.biPaiCardValue_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBiPaiCardValueIsMutable();
            biPaiCardValue_.addAll(other.biPaiCardValue_);
          }
          onChanged();
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasAction()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerDataCount(); i++) {
          if (!getPlayerData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperPlayerActionSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperPlayerActionSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 action = 2;
      private int action_ ;
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000002;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 action = 2;</code>
       *
       * <pre>
       *操作编码 (0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        action_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 cardValue = 3;
      private java.util.List<java.lang.Integer> cardValue_ = java.util.Collections.emptyList();
      private void ensureCardValueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardValue_ = new java.util.ArrayList<java.lang.Integer>(cardValue_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardValueList() {
        return java.util.Collections.unmodifiableList(cardValue_);
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public int getCardValueCount() {
        return cardValue_.size();
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public int getCardValue(int index) {
        return cardValue_.get(index);
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder setCardValue(
          int index, int value) {
        ensureCardValueIsMutable();
        cardValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder addCardValue(int value) {
        ensureCardValueIsMutable();
        cardValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder addAllCardValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardValueIsMutable();
        super.addAll(values, cardValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 cardValue = 3;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder clearCardValue() {
        cardValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional sint32 chouMa = 4;
      private int chouMa_ ;
      /**
       * <code>optional sint32 chouMa = 4;</code>
       *
       * <pre>
       *加注或者跟注的筹码大小
       * </pre>
       */
      public boolean hasChouMa() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 chouMa = 4;</code>
       *
       * <pre>
       *加注或者跟注的筹码大小
       * </pre>
       */
      public int getChouMa() {
        return chouMa_;
      }
      /**
       * <code>optional sint32 chouMa = 4;</code>
       *
       * <pre>
       *加注或者跟注的筹码大小
       * </pre>
       */
      public Builder setChouMa(int value) {
        bitField0_ |= 0x00000008;
        chouMa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 chouMa = 4;</code>
       *
       * <pre>
       *加注或者跟注的筹码大小
       * </pre>
       */
      public Builder clearChouMa() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chouMa_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 biPaiPos = 5;
      private int biPaiPos_ ;
      /**
       * <code>optional sint32 biPaiPos = 5;</code>
       *
       * <pre>
       *被比牌人的座位号
       * </pre>
       */
      public boolean hasBiPaiPos() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 biPaiPos = 5;</code>
       *
       * <pre>
       *被比牌人的座位号
       * </pre>
       */
      public int getBiPaiPos() {
        return biPaiPos_;
      }
      /**
       * <code>optional sint32 biPaiPos = 5;</code>
       *
       * <pre>
       *被比牌人的座位号
       * </pre>
       */
      public Builder setBiPaiPos(int value) {
        bitField0_ |= 0x00000010;
        biPaiPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 biPaiPos = 5;</code>
       *
       * <pre>
       *被比牌人的座位号
       * </pre>
       */
      public Builder clearBiPaiPos() {
        bitField0_ = (bitField0_ & ~0x00000010);
        biPaiPos_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 winnerPos = 6;
      private int winnerPos_ ;
      /**
       * <code>optional sint32 winnerPos = 6;</code>
       *
       * <pre>
       *比牌时赢得人座位号
       * </pre>
       */
      public boolean hasWinnerPos() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 winnerPos = 6;</code>
       *
       * <pre>
       *比牌时赢得人座位号
       * </pre>
       */
      public int getWinnerPos() {
        return winnerPos_;
      }
      /**
       * <code>optional sint32 winnerPos = 6;</code>
       *
       * <pre>
       *比牌时赢得人座位号
       * </pre>
       */
      public Builder setWinnerPos(int value) {
        bitField0_ |= 0x00000020;
        winnerPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 winnerPos = 6;</code>
       *
       * <pre>
       *比牌时赢得人座位号
       * </pre>
       */
      public Builder clearWinnerPos() {
        bitField0_ = (bitField0_ & ~0x00000020);
        winnerPos_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 playerZongZhu = 7;
      private int playerZongZhu_ ;
      /**
       * <code>optional sint32 playerZongZhu = 7;</code>
       *
       * <pre>
       *玩家总共下了多少筹码
       * </pre>
       */
      public boolean hasPlayerZongZhu() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 playerZongZhu = 7;</code>
       *
       * <pre>
       *玩家总共下了多少筹码
       * </pre>
       */
      public int getPlayerZongZhu() {
        return playerZongZhu_;
      }
      /**
       * <code>optional sint32 playerZongZhu = 7;</code>
       *
       * <pre>
       *玩家总共下了多少筹码
       * </pre>
       */
      public Builder setPlayerZongZhu(int value) {
        bitField0_ |= 0x00000040;
        playerZongZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerZongZhu = 7;</code>
       *
       * <pre>
       *玩家总共下了多少筹码
       * </pre>
       */
      public Builder clearPlayerZongZhu() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerZongZhu_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 playerDanZhu = 8;
      private int playerDanZhu_ ;
      /**
       * <code>optional sint32 playerDanZhu = 8;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public boolean hasPlayerDanZhu() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 playerDanZhu = 8;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public int getPlayerDanZhu() {
        return playerDanZhu_;
      }
      /**
       * <code>optional sint32 playerDanZhu = 8;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public Builder setPlayerDanZhu(int value) {
        bitField0_ |= 0x00000080;
        playerDanZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerDanZhu = 8;</code>
       *
       * <pre>
       *玩家单注
       * </pre>
       */
      public Builder clearPlayerDanZhu() {
        bitField0_ = (bitField0_ & ~0x00000080);
        playerDanZhu_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 deskZongZhu = 9;
      private int deskZongZhu_ ;
      /**
       * <code>optional sint32 deskZongZhu = 9;</code>
       *
       * <pre>
       *桌子总注
       * </pre>
       */
      public boolean hasDeskZongZhu() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 deskZongZhu = 9;</code>
       *
       * <pre>
       *桌子总注
       * </pre>
       */
      public int getDeskZongZhu() {
        return deskZongZhu_;
      }
      /**
       * <code>optional sint32 deskZongZhu = 9;</code>
       *
       * <pre>
       *桌子总注
       * </pre>
       */
      public Builder setDeskZongZhu(int value) {
        bitField0_ |= 0x00000100;
        deskZongZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 deskZongZhu = 9;</code>
       *
       * <pre>
       *桌子总注
       * </pre>
       */
      public Builder clearDeskZongZhu() {
        bitField0_ = (bitField0_ & ~0x00000100);
        deskZongZhu_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 lunNum = 10;
      private int lunNum_ ;
      /**
       * <code>optional sint32 lunNum = 10;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public boolean hasLunNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint32 lunNum = 10;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public int getLunNum() {
        return lunNum_;
      }
      /**
       * <code>optional sint32 lunNum = 10;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public Builder setLunNum(int value) {
        bitField0_ |= 0x00000200;
        lunNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 lunNum = 10;</code>
       *
       * <pre>
       *第几轮
       * </pre>
       */
      public Builder clearLunNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lunNum_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 cardType = 11;
      private int cardType_ ;
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000400;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;
      private java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerData> playerData_ =
        java.util.Collections.emptyList();
      private void ensurePlayerDataIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          playerData_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHGameOperPlayerData>(playerData_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHGameOperPlayerData, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder, packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder> playerDataBuilder_;

      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerData> getPlayerDataList() {
        if (playerDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerData_);
        } else {
          return playerDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public int getPlayerDataCount() {
        if (playerDataBuilder_ == null) {
          return playerData_.size();
        } else {
          return playerDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerData getPlayerData(int index) {
        if (playerDataBuilder_ == null) {
          return playerData_.get(index);
        } else {
          return playerDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder setPlayerData(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerData value) {
        if (playerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDataIsMutable();
          playerData_.set(index, value);
          onChanged();
        } else {
          playerDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder setPlayerData(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder builderForValue) {
        if (playerDataBuilder_ == null) {
          ensurePlayerDataIsMutable();
          playerData_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder addPlayerData(packet.zjh.ZJH.ZJHGameOperPlayerData value) {
        if (playerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDataIsMutable();
          playerData_.add(value);
          onChanged();
        } else {
          playerDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder addPlayerData(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerData value) {
        if (playerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerDataIsMutable();
          playerData_.add(index, value);
          onChanged();
        } else {
          playerDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder addPlayerData(
          packet.zjh.ZJH.ZJHGameOperPlayerData.Builder builderForValue) {
        if (playerDataBuilder_ == null) {
          ensurePlayerDataIsMutable();
          playerData_.add(builderForValue.build());
          onChanged();
        } else {
          playerDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder addPlayerData(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder builderForValue) {
        if (playerDataBuilder_ == null) {
          ensurePlayerDataIsMutable();
          playerData_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder addAllPlayerData(
          java.lang.Iterable<? extends packet.zjh.ZJH.ZJHGameOperPlayerData> values) {
        if (playerDataBuilder_ == null) {
          ensurePlayerDataIsMutable();
          super.addAll(values, playerData_);
          onChanged();
        } else {
          playerDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder clearPlayerData() {
        if (playerDataBuilder_ == null) {
          playerData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          playerDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public Builder removePlayerData(int index) {
        if (playerDataBuilder_ == null) {
          ensurePlayerDataIsMutable();
          playerData_.remove(index);
          onChanged();
        } else {
          playerDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerData.Builder getPlayerDataBuilder(
          int index) {
        return getPlayerDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder getPlayerDataOrBuilder(
          int index) {
        if (playerDataBuilder_ == null) {
          return playerData_.get(index);  } else {
          return playerDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public java.util.List<? extends packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder> 
           getPlayerDataOrBuilderList() {
        if (playerDataBuilder_ != null) {
          return playerDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerData_);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerData.Builder addPlayerDataBuilder() {
        return getPlayerDataFieldBuilder().addBuilder(
            packet.zjh.ZJH.ZJHGameOperPlayerData.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerData.Builder addPlayerDataBuilder(
          int index) {
        return getPlayerDataFieldBuilder().addBuilder(
            index, packet.zjh.ZJH.ZJHGameOperPlayerData.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerData playerData = 12;</code>
       *
       * <pre>
       *玩家数据
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerData.Builder> 
           getPlayerDataBuilderList() {
        return getPlayerDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHGameOperPlayerData, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder, packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder> 
          getPlayerDataFieldBuilder() {
        if (playerDataBuilder_ == null) {
          playerDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.zjh.ZJH.ZJHGameOperPlayerData, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder, packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder>(
                  playerData_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          playerData_ = null;
        }
        return playerDataBuilder_;
      }

      // repeated sint32 biPaiCardValue = 13;
      private java.util.List<java.lang.Integer> biPaiCardValue_ = java.util.Collections.emptyList();
      private void ensureBiPaiCardValueIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          biPaiCardValue_ = new java.util.ArrayList<java.lang.Integer>(biPaiCardValue_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBiPaiCardValueList() {
        return java.util.Collections.unmodifiableList(biPaiCardValue_);
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public int getBiPaiCardValueCount() {
        return biPaiCardValue_.size();
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public int getBiPaiCardValue(int index) {
        return biPaiCardValue_.get(index);
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public Builder setBiPaiCardValue(
          int index, int value) {
        ensureBiPaiCardValueIsMutable();
        biPaiCardValue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public Builder addBiPaiCardValue(int value) {
        ensureBiPaiCardValueIsMutable();
        biPaiCardValue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public Builder addAllBiPaiCardValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBiPaiCardValueIsMutable();
        super.addAll(values, biPaiCardValue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 biPaiCardValue = 13;</code>
       *
       * <pre>
       *被比牌人的手牌
       * </pre>
       */
      public Builder clearBiPaiCardValue() {
        biPaiCardValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // optional sint32 seq = 100;
      private int seq_ ;
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00002000;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00002000);
        seq_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperPlayerActionSyn)
    }

    static {
      defaultInstance = new ZJHGameOperPlayerActionSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperPlayerActionSyn)
  }

  public interface ZJHGameOperPlayerDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     */
    int getPosition();

    // required sint32 playerDanZhu = 2;
    /**
     * <code>required sint32 playerDanZhu = 2;</code>
     */
    boolean hasPlayerDanZhu();
    /**
     * <code>required sint32 playerDanZhu = 2;</code>
     */
    int getPlayerDanZhu();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperPlayerData}
   *
   * <pre>
   *玩家操作时各个玩家数据
   * </pre>
   */
  public static final class ZJHGameOperPlayerData extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperPlayerDataOrBuilder {
    // Use ZJHGameOperPlayerData.newBuilder() to construct.
    private ZJHGameOperPlayerData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperPlayerData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperPlayerData defaultInstance;
    public static ZJHGameOperPlayerData getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperPlayerData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperPlayerData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerDanZhu_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperPlayerData.class, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperPlayerData> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperPlayerData>() {
      public ZJHGameOperPlayerData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperPlayerData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperPlayerData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 playerDanZhu = 2;
    public static final int PLAYERDANZHU_FIELD_NUMBER = 2;
    private int playerDanZhu_;
    /**
     * <code>required sint32 playerDanZhu = 2;</code>
     */
    public boolean hasPlayerDanZhu() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 playerDanZhu = 2;</code>
     */
    public int getPlayerDanZhu() {
      return playerDanZhu_;
    }

    private void initFields() {
      position_ = 0;
      playerDanZhu_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayerDanZhu()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, playerDanZhu_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, playerDanZhu_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperPlayerData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperPlayerData}
     *
     * <pre>
     *玩家操作时各个玩家数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperPlayerDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperPlayerData.class, packet.zjh.ZJH.ZJHGameOperPlayerData.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperPlayerData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerDanZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerData_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerData getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperPlayerData.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerData build() {
        packet.zjh.ZJH.ZJHGameOperPlayerData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerData buildPartial() {
        packet.zjh.ZJH.ZJHGameOperPlayerData result = new packet.zjh.ZJH.ZJHGameOperPlayerData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerDanZhu_ = playerDanZhu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperPlayerData) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperPlayerData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperPlayerData other) {
        if (other == packet.zjh.ZJH.ZJHGameOperPlayerData.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasPlayerDanZhu()) {
          setPlayerDanZhu(other.getPlayerDanZhu());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasPlayerDanZhu()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperPlayerData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperPlayerData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 playerDanZhu = 2;
      private int playerDanZhu_ ;
      /**
       * <code>required sint32 playerDanZhu = 2;</code>
       */
      public boolean hasPlayerDanZhu() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 playerDanZhu = 2;</code>
       */
      public int getPlayerDanZhu() {
        return playerDanZhu_;
      }
      /**
       * <code>required sint32 playerDanZhu = 2;</code>
       */
      public Builder setPlayerDanZhu(int value) {
        bitField0_ |= 0x00000002;
        playerDanZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 playerDanZhu = 2;</code>
       */
      public Builder clearPlayerDanZhu() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerDanZhu_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperPlayerData)
    }

    static {
      defaultInstance = new ZJHGameOperPlayerData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperPlayerData)
  }

  public interface ZJHGameOperPlayerActionNotifyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // required sint32 actions = 2;
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    boolean hasActions();
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    int getActions();

    // repeated sint32 jiaZhuNum = 12;
    /**
     * <code>repeated sint32 jiaZhuNum = 12;</code>
     *
     * <pre>
     *可加注的筹码集合
     * </pre>
     */
    java.util.List<java.lang.Integer> getJiaZhuNumList();
    /**
     * <code>repeated sint32 jiaZhuNum = 12;</code>
     *
     * <pre>
     *可加注的筹码集合
     * </pre>
     */
    int getJiaZhuNumCount();
    /**
     * <code>repeated sint32 jiaZhuNum = 12;</code>
     *
     * <pre>
     *可加注的筹码集合
     * </pre>
     */
    int getJiaZhuNum(int index);

    // repeated sint32 biPaiPos = 13;
    /**
     * <code>repeated sint32 biPaiPos = 13;</code>
     *
     * <pre>
     *可被比牌人的座位集合
     * </pre>
     */
    java.util.List<java.lang.Integer> getBiPaiPosList();
    /**
     * <code>repeated sint32 biPaiPos = 13;</code>
     *
     * <pre>
     *可被比牌人的座位集合
     * </pre>
     */
    int getBiPaiPosCount();
    /**
     * <code>repeated sint32 biPaiPos = 13;</code>
     *
     * <pre>
     *可被比牌人的座位集合
     * </pre>
     */
    int getBiPaiPos(int index);

    // optional sint32 genZhu = 14;
    /**
     * <code>optional sint32 genZhu = 14;</code>
     *
     * <pre>
     *跟注的筹码大小
     * </pre>
     */
    boolean hasGenZhu();
    /**
     * <code>optional sint32 genZhu = 14;</code>
     *
     * <pre>
     *跟注的筹码大小
     * </pre>
     */
    int getGenZhu();

    // optional sint32 seq = 100;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    boolean hasSeq();
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    int getSeq();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperPlayerActionNotify}
   *
   * <pre>
   *服务器提示玩家操作 operType=ACTNOTIFY
   * </pre>
   */
  public static final class ZJHGameOperPlayerActionNotify extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperPlayerActionNotifyOrBuilder {
    // Use ZJHGameOperPlayerActionNotify.newBuilder() to construct.
    private ZJHGameOperPlayerActionNotify(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperPlayerActionNotify(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperPlayerActionNotify defaultInstance;
    public static ZJHGameOperPlayerActionNotify getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperPlayerActionNotify getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperPlayerActionNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              actions_ = input.readSInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                jiaZhuNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              jiaZhuNum_.add(input.readSInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                jiaZhuNum_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                jiaZhuNum_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                biPaiPos_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              biPaiPos_.add(input.readSInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                biPaiPos_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                biPaiPos_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000004;
              genZhu_ = input.readSInt32();
              break;
            }
            case 800: {
              bitField0_ |= 0x00000008;
              seq_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          jiaZhuNum_ = java.util.Collections.unmodifiableList(jiaZhuNum_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          biPaiPos_ = java.util.Collections.unmodifiableList(biPaiPos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.class, packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperPlayerActionNotify> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperPlayerActionNotify>() {
      public ZJHGameOperPlayerActionNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperPlayerActionNotify(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperPlayerActionNotify> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // required sint32 actions = 2;
    public static final int ACTIONS_FIELD_NUMBER = 2;
    private int actions_;
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    public boolean hasActions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required sint32 actions = 2;</code>
     *
     * <pre>
     * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
     * </pre>
     */
    public int getActions() {
      return actions_;
    }

    // repeated sint32 jiaZhuNum = 12;
    public static final int JIAZHUNUM_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> jiaZhuNum_;
    /**
     * <code>repeated sint32 jiaZhuNum = 12;</code>
     *
     * <pre>
     *可加注的筹码集合
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJiaZhuNumList() {
      return jiaZhuNum_;
    }
    /**
     * <code>repeated sint32 jiaZhuNum = 12;</code>
     *
     * <pre>
     *可加注的筹码集合
     * </pre>
     */
    public int getJiaZhuNumCount() {
      return jiaZhuNum_.size();
    }
    /**
     * <code>repeated sint32 jiaZhuNum = 12;</code>
     *
     * <pre>
     *可加注的筹码集合
     * </pre>
     */
    public int getJiaZhuNum(int index) {
      return jiaZhuNum_.get(index);
    }

    // repeated sint32 biPaiPos = 13;
    public static final int BIPAIPOS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> biPaiPos_;
    /**
     * <code>repeated sint32 biPaiPos = 13;</code>
     *
     * <pre>
     *可被比牌人的座位集合
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBiPaiPosList() {
      return biPaiPos_;
    }
    /**
     * <code>repeated sint32 biPaiPos = 13;</code>
     *
     * <pre>
     *可被比牌人的座位集合
     * </pre>
     */
    public int getBiPaiPosCount() {
      return biPaiPos_.size();
    }
    /**
     * <code>repeated sint32 biPaiPos = 13;</code>
     *
     * <pre>
     *可被比牌人的座位集合
     * </pre>
     */
    public int getBiPaiPos(int index) {
      return biPaiPos_.get(index);
    }

    // optional sint32 genZhu = 14;
    public static final int GENZHU_FIELD_NUMBER = 14;
    private int genZhu_;
    /**
     * <code>optional sint32 genZhu = 14;</code>
     *
     * <pre>
     *跟注的筹码大小
     * </pre>
     */
    public boolean hasGenZhu() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 genZhu = 14;</code>
     *
     * <pre>
     *跟注的筹码大小
     * </pre>
     */
    public int getGenZhu() {
      return genZhu_;
    }

    // optional sint32 seq = 100;
    public static final int SEQ_FIELD_NUMBER = 100;
    private int seq_;
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public boolean hasSeq() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 seq = 100;</code>
     *
     * <pre>
     *序列号,调试用
     * </pre>
     */
    public int getSeq() {
      return seq_;
    }

    private void initFields() {
      position_ = 0;
      actions_ = 0;
      jiaZhuNum_ = java.util.Collections.emptyList();
      biPaiPos_ = java.util.Collections.emptyList();
      genZhu_ = 0;
      seq_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActions()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, actions_);
      }
      for (int i = 0; i < jiaZhuNum_.size(); i++) {
        output.writeSInt32(12, jiaZhuNum_.get(i));
      }
      for (int i = 0; i < biPaiPos_.size(); i++) {
        output.writeSInt32(13, biPaiPos_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(14, genZhu_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(100, seq_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, actions_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jiaZhuNum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(jiaZhuNum_.get(i));
        }
        size += dataSize;
        size += 1 * getJiaZhuNumList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < biPaiPos_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(biPaiPos_.get(i));
        }
        size += dataSize;
        size += 1 * getBiPaiPosList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(14, genZhu_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(100, seq_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperPlayerActionNotify prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperPlayerActionNotify}
     *
     * <pre>
     *服务器提示玩家操作 operType=ACTNOTIFY
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperPlayerActionNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.class, packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        actions_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        jiaZhuNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        biPaiPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        genZhu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        seq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerActionNotify getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerActionNotify build() {
        packet.zjh.ZJH.ZJHGameOperPlayerActionNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerActionNotify buildPartial() {
        packet.zjh.ZJH.ZJHGameOperPlayerActionNotify result = new packet.zjh.ZJH.ZJHGameOperPlayerActionNotify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actions_ = actions_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          jiaZhuNum_ = java.util.Collections.unmodifiableList(jiaZhuNum_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.jiaZhuNum_ = jiaZhuNum_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          biPaiPos_ = java.util.Collections.unmodifiableList(biPaiPos_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.biPaiPos_ = biPaiPos_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.genZhu_ = genZhu_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seq_ = seq_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperPlayerActionNotify) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperPlayerActionNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperPlayerActionNotify other) {
        if (other == packet.zjh.ZJH.ZJHGameOperPlayerActionNotify.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasActions()) {
          setActions(other.getActions());
        }
        if (!other.jiaZhuNum_.isEmpty()) {
          if (jiaZhuNum_.isEmpty()) {
            jiaZhuNum_ = other.jiaZhuNum_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureJiaZhuNumIsMutable();
            jiaZhuNum_.addAll(other.jiaZhuNum_);
          }
          onChanged();
        }
        if (!other.biPaiPos_.isEmpty()) {
          if (biPaiPos_.isEmpty()) {
            biPaiPos_ = other.biPaiPos_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBiPaiPosIsMutable();
            biPaiPos_.addAll(other.biPaiPos_);
          }
          onChanged();
        }
        if (other.hasGenZhu()) {
          setGenZhu(other.getGenZhu());
        }
        if (other.hasSeq()) {
          setSeq(other.getSeq());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasActions()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperPlayerActionNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperPlayerActionNotify) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // required sint32 actions = 2;
      private int actions_ ;
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public boolean hasActions() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public int getActions() {
        return actions_;
      }
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public Builder setActions(int value) {
        bitField0_ |= 0x00000002;
        actions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 actions = 2;</code>
       *
       * <pre>
       * 可选操作列表(位与):(0x1:出) (0x2:过) (0x4:抢地主) (0x8:加倍)
       * </pre>
       */
      public Builder clearActions() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actions_ = 0;
        onChanged();
        return this;
      }

      // repeated sint32 jiaZhuNum = 12;
      private java.util.List<java.lang.Integer> jiaZhuNum_ = java.util.Collections.emptyList();
      private void ensureJiaZhuNumIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          jiaZhuNum_ = new java.util.ArrayList<java.lang.Integer>(jiaZhuNum_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJiaZhuNumList() {
        return java.util.Collections.unmodifiableList(jiaZhuNum_);
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public int getJiaZhuNumCount() {
        return jiaZhuNum_.size();
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public int getJiaZhuNum(int index) {
        return jiaZhuNum_.get(index);
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public Builder setJiaZhuNum(
          int index, int value) {
        ensureJiaZhuNumIsMutable();
        jiaZhuNum_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public Builder addJiaZhuNum(int value) {
        ensureJiaZhuNumIsMutable();
        jiaZhuNum_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public Builder addAllJiaZhuNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJiaZhuNumIsMutable();
        super.addAll(values, jiaZhuNum_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 jiaZhuNum = 12;</code>
       *
       * <pre>
       *可加注的筹码集合
       * </pre>
       */
      public Builder clearJiaZhuNum() {
        jiaZhuNum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated sint32 biPaiPos = 13;
      private java.util.List<java.lang.Integer> biPaiPos_ = java.util.Collections.emptyList();
      private void ensureBiPaiPosIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          biPaiPos_ = new java.util.ArrayList<java.lang.Integer>(biPaiPos_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBiPaiPosList() {
        return java.util.Collections.unmodifiableList(biPaiPos_);
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public int getBiPaiPosCount() {
        return biPaiPos_.size();
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public int getBiPaiPos(int index) {
        return biPaiPos_.get(index);
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public Builder setBiPaiPos(
          int index, int value) {
        ensureBiPaiPosIsMutable();
        biPaiPos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public Builder addBiPaiPos(int value) {
        ensureBiPaiPosIsMutable();
        biPaiPos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public Builder addAllBiPaiPos(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBiPaiPosIsMutable();
        super.addAll(values, biPaiPos_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 biPaiPos = 13;</code>
       *
       * <pre>
       *可被比牌人的座位集合
       * </pre>
       */
      public Builder clearBiPaiPos() {
        biPaiPos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional sint32 genZhu = 14;
      private int genZhu_ ;
      /**
       * <code>optional sint32 genZhu = 14;</code>
       *
       * <pre>
       *跟注的筹码大小
       * </pre>
       */
      public boolean hasGenZhu() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 genZhu = 14;</code>
       *
       * <pre>
       *跟注的筹码大小
       * </pre>
       */
      public int getGenZhu() {
        return genZhu_;
      }
      /**
       * <code>optional sint32 genZhu = 14;</code>
       *
       * <pre>
       *跟注的筹码大小
       * </pre>
       */
      public Builder setGenZhu(int value) {
        bitField0_ |= 0x00000010;
        genZhu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 genZhu = 14;</code>
       *
       * <pre>
       *跟注的筹码大小
       * </pre>
       */
      public Builder clearGenZhu() {
        bitField0_ = (bitField0_ & ~0x00000010);
        genZhu_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 seq = 100;
      private int seq_ ;
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public boolean hasSeq() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder setSeq(int value) {
        bitField0_ |= 0x00000020;
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 seq = 100;</code>
       *
       * <pre>
       *序列号,调试用
       * </pre>
       */
      public Builder clearSeq() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seq_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperPlayerActionNotify)
    }

    static {
      defaultInstance = new ZJHGameOperPlayerActionNotify(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperPlayerActionNotify)
  }

  public interface ZJHGameOperPlayerHuSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    int getPosition();

    // repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerSettle> 
        getDetailList();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    packet.zjh.ZJH.ZJHGameOperPlayerSettle getDetail(int index);
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    int getDetailCount();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    java.util.List<? extends packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder> 
        getDetailOrBuilderList();
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder getDetailOrBuilder(
        int index);

    // optional sint32 juNum = 3;
    /**
     * <code>optional sint32 juNum = 3;</code>
     *
     * <pre>
     *当前局数
     * </pre>
     */
    boolean hasJuNum();
    /**
     * <code>optional sint32 juNum = 3;</code>
     *
     * <pre>
     *当前局数
     * </pre>
     */
    int getJuNum();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperPlayerHuSyn}
   */
  public static final class ZJHGameOperPlayerHuSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperPlayerHuSynOrBuilder {
    // Use ZJHGameOperPlayerHuSyn.newBuilder() to construct.
    private ZJHGameOperPlayerHuSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperPlayerHuSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperPlayerHuSyn defaultInstance;
    public static ZJHGameOperPlayerHuSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperPlayerHuSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperPlayerHuSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                detail_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHGameOperPlayerSettle>();
                mutable_bitField0_ |= 0x00000002;
              }
              detail_.add(input.readMessage(packet.zjh.ZJH.ZJHGameOperPlayerSettle.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              juNum_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          detail_ = java.util.Collections.unmodifiableList(detail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.class, packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperPlayerHuSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperPlayerHuSyn>() {
      public ZJHGameOperPlayerHuSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperPlayerHuSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperPlayerHuSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *胡牌玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;
    public static final int DETAIL_FIELD_NUMBER = 2;
    private java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerSettle> detail_;
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerSettle> getDetailList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public java.util.List<? extends packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder> 
        getDetailOrBuilderList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public int getDetailCount() {
      return detail_.size();
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public packet.zjh.ZJH.ZJHGameOperPlayerSettle getDetail(int index) {
      return detail_.get(index);
    }
    /**
     * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
     *
     * <pre>
     *每个玩家的情况
     * </pre>
     */
    public packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder getDetailOrBuilder(
        int index) {
      return detail_.get(index);
    }

    // optional sint32 juNum = 3;
    public static final int JUNUM_FIELD_NUMBER = 3;
    private int juNum_;
    /**
     * <code>optional sint32 juNum = 3;</code>
     *
     * <pre>
     *当前局数
     * </pre>
     */
    public boolean hasJuNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 juNum = 3;</code>
     *
     * <pre>
     *当前局数
     * </pre>
     */
    public int getJuNum() {
      return juNum_;
    }

    private void initFields() {
      position_ = 0;
      detail_ = java.util.Collections.emptyList();
      juNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDetailCount(); i++) {
        if (!getDetail(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        output.writeMessage(2, detail_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(3, juNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, detail_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, juNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperPlayerHuSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperPlayerHuSyn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperPlayerHuSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.class, packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          detailBuilder_.clear();
        }
        juNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerHuSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerHuSyn build() {
        packet.zjh.ZJH.ZJHGameOperPlayerHuSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerHuSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperPlayerHuSyn result = new packet.zjh.ZJH.ZJHGameOperPlayerHuSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (detailBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            detail_ = java.util.Collections.unmodifiableList(detail_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.detail_ = detail_;
        } else {
          result.detail_ = detailBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.juNum_ = juNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperPlayerHuSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperPlayerHuSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperPlayerHuSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperPlayerHuSyn.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (detailBuilder_ == null) {
          if (!other.detail_.isEmpty()) {
            if (detail_.isEmpty()) {
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDetailIsMutable();
              detail_.addAll(other.detail_);
            }
            onChanged();
          }
        } else {
          if (!other.detail_.isEmpty()) {
            if (detailBuilder_.isEmpty()) {
              detailBuilder_.dispose();
              detailBuilder_ = null;
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000002);
              detailBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailFieldBuilder() : null;
            } else {
              detailBuilder_.addAllMessages(other.detail_);
            }
          }
        }
        if (other.hasJuNum()) {
          setJuNum(other.getJuNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        for (int i = 0; i < getDetailCount(); i++) {
          if (!getDetail(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperPlayerHuSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperPlayerHuSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *胡牌玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;
      private java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerSettle> detail_ =
        java.util.Collections.emptyList();
      private void ensureDetailIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          detail_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHGameOperPlayerSettle>(detail_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHGameOperPlayerSettle, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder, packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder> detailBuilder_;

      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerSettle> getDetailList() {
        if (detailBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detail_);
        } else {
          return detailBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public int getDetailCount() {
        if (detailBuilder_ == null) {
          return detail_.size();
        } else {
          return detailBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerSettle getDetail(int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);
        } else {
          return detailBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder setDetail(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerSettle value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.set(index, value);
          onChanged();
        } else {
          detailBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder setDetail(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(packet.zjh.ZJH.ZJHGameOperPlayerSettle value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(value);
          onChanged();
        } else {
          detailBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerSettle value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(index, value);
          onChanged();
        } else {
          detailBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(
          packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addDetail(
          int index, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder addAllDetail(
          java.lang.Iterable<? extends packet.zjh.ZJH.ZJHGameOperPlayerSettle> values) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          super.addAll(values, detail_);
          onChanged();
        } else {
          detailBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder clearDetail() {
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          detailBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public Builder removeDetail(int index) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.remove(index);
          onChanged();
        } else {
          detailBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder getDetailBuilder(
          int index) {
        return getDetailFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder getDetailOrBuilder(
          int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);  } else {
          return detailBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public java.util.List<? extends packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder> 
           getDetailOrBuilderList() {
        if (detailBuilder_ != null) {
          return detailBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detail_);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder addDetailBuilder() {
        return getDetailFieldBuilder().addBuilder(
            packet.zjh.ZJH.ZJHGameOperPlayerSettle.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder addDetailBuilder(
          int index) {
        return getDetailFieldBuilder().addBuilder(
            index, packet.zjh.ZJH.ZJHGameOperPlayerSettle.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHGameOperPlayerSettle detail = 2;</code>
       *
       * <pre>
       *每个玩家的情况
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder> 
           getDetailBuilderList() {
        return getDetailFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHGameOperPlayerSettle, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder, packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder> 
          getDetailFieldBuilder() {
        if (detailBuilder_ == null) {
          detailBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.zjh.ZJH.ZJHGameOperPlayerSettle, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder, packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder>(
                  detail_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        return detailBuilder_;
      }

      // optional sint32 juNum = 3;
      private int juNum_ ;
      /**
       * <code>optional sint32 juNum = 3;</code>
       *
       * <pre>
       *当前局数
       * </pre>
       */
      public boolean hasJuNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 juNum = 3;</code>
       *
       * <pre>
       *当前局数
       * </pre>
       */
      public int getJuNum() {
        return juNum_;
      }
      /**
       * <code>optional sint32 juNum = 3;</code>
       *
       * <pre>
       *当前局数
       * </pre>
       */
      public Builder setJuNum(int value) {
        bitField0_ |= 0x00000004;
        juNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 juNum = 3;</code>
       *
       * <pre>
       *当前局数
       * </pre>
       */
      public Builder clearJuNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        juNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperPlayerHuSyn)
    }

    static {
      defaultInstance = new ZJHGameOperPlayerHuSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperPlayerHuSyn)
  }

  public interface ZJHGameOperPlayerSettleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sint32 position = 1;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPosition();

    // optional sint32 playerId = 2;
    /**
     * <code>optional sint32 playerId = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional sint32 playerId = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    int getPlayerId();

    // optional string playerName = 3;
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     *昵称
     * </pre>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     *昵称
     * </pre>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     *昵称
     * </pre>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    // repeated sint32 handcard = 4;
    /**
     * <code>repeated sint32 handcard = 4;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandcardList();
    /**
     * <code>repeated sint32 handcard = 4;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandcardCount();
    /**
     * <code>repeated sint32 handcard = 4;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandcard(int index);

    // optional sint32 lastScore = 5;
    /**
     * <code>optional sint32 lastScore = 5;</code>
     *
     * <pre>
     *上局得分
     * </pre>
     */
    boolean hasLastScore();
    /**
     * <code>optional sint32 lastScore = 5;</code>
     *
     * <pre>
     *上局得分
     * </pre>
     */
    int getLastScore();

    // optional sint32 score = 6;
    /**
     * <code>optional sint32 score = 6;</code>
     *
     * <pre>
     *本局得分
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional sint32 score = 6;</code>
     *
     * <pre>
     *本局得分
     * </pre>
     */
    int getScore();

    // optional sint32 allSocre = 7;
    /**
     * <code>optional sint32 allSocre = 7;</code>
     *
     * <pre>
     *总分数
     * </pre>
     */
    boolean hasAllSocre();
    /**
     * <code>optional sint32 allSocre = 7;</code>
     *
     * <pre>
     *总分数
     * </pre>
     */
    int getAllSocre();

    // optional sint32 xiQian = 8;
    /**
     * <code>optional sint32 xiQian = 8;</code>
     *
     * <pre>
     *喜钱
     * </pre>
     */
    boolean hasXiQian();
    /**
     * <code>optional sint32 xiQian = 8;</code>
     *
     * <pre>
     *喜钱
     * </pre>
     */
    int getXiQian();

    // optional bool isQiPai = 9;
    /**
     * <code>optional bool isQiPai = 9;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    boolean hasIsQiPai();
    /**
     * <code>optional bool isQiPai = 9;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    boolean getIsQiPai();

    // optional bool isKanPai = 10;
    /**
     * <code>optional bool isKanPai = 10;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    boolean hasIsKanPai();
    /**
     * <code>optional bool isKanPai = 10;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    boolean getIsKanPai();

    // optional sint32 cardType = 11;
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardType();

    // optional sint32 isBanker = 12;
    /**
     * <code>optional sint32 isBanker = 12;</code>
     *
     * <pre>
     *是否是庄家
     * </pre>
     */
    boolean hasIsBanker();
    /**
     * <code>optional sint32 isBanker = 12;</code>
     *
     * <pre>
     *是否是庄家
     * </pre>
     */
    int getIsBanker();

    // optional sint32 result = 13;
    /**
     * <code>optional sint32 result = 13;</code>
     *
     * <pre>
     * 1 win 2 lose 3 even
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>optional sint32 result = 13;</code>
     *
     * <pre>
     * 1 win 2 lose 3 even
     * </pre>
     */
    int getResult();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperPlayerSettle}
   */
  public static final class ZJHGameOperPlayerSettle extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperPlayerSettleOrBuilder {
    // Use ZJHGameOperPlayerSettle.newBuilder() to construct.
    private ZJHGameOperPlayerSettle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperPlayerSettle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperPlayerSettle defaultInstance;
    public static ZJHGameOperPlayerSettle getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperPlayerSettle getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperPlayerSettle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              position_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readSInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              playerName_ = input.readBytes();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                handcard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              handcard_.add(input.readSInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                handcard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                handcard_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              lastScore_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              score_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              allSocre_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              xiQian_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              isQiPai_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              isKanPai_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              cardType_ = input.readSInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              isBanker_ = input.readSInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              result_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          handcard_ = java.util.Collections.unmodifiableList(handcard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerSettle_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerSettle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperPlayerSettle.class, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperPlayerSettle> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperPlayerSettle>() {
      public ZJHGameOperPlayerSettle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperPlayerSettle(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperPlayerSettle> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required sint32 position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private int position_;
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 position = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // optional sint32 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional sint32 playerId = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 playerId = 2;</code>
     *
     * <pre>
     *ID
     * </pre>
     */
    public int getPlayerId() {
      return playerId_;
    }

    // optional string playerName = 3;
    public static final int PLAYERNAME_FIELD_NUMBER = 3;
    private java.lang.Object playerName_;
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     *昵称
     * </pre>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     *昵称
     * </pre>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     *昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated sint32 handcard = 4;
    public static final int HANDCARD_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> handcard_;
    /**
     * <code>repeated sint32 handcard = 4;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandcardList() {
      return handcard_;
    }
    /**
     * <code>repeated sint32 handcard = 4;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandcardCount() {
      return handcard_.size();
    }
    /**
     * <code>repeated sint32 handcard = 4;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandcard(int index) {
      return handcard_.get(index);
    }

    // optional sint32 lastScore = 5;
    public static final int LASTSCORE_FIELD_NUMBER = 5;
    private int lastScore_;
    /**
     * <code>optional sint32 lastScore = 5;</code>
     *
     * <pre>
     *上局得分
     * </pre>
     */
    public boolean hasLastScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 lastScore = 5;</code>
     *
     * <pre>
     *上局得分
     * </pre>
     */
    public int getLastScore() {
      return lastScore_;
    }

    // optional sint32 score = 6;
    public static final int SCORE_FIELD_NUMBER = 6;
    private int score_;
    /**
     * <code>optional sint32 score = 6;</code>
     *
     * <pre>
     *本局得分
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 score = 6;</code>
     *
     * <pre>
     *本局得分
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    // optional sint32 allSocre = 7;
    public static final int ALLSOCRE_FIELD_NUMBER = 7;
    private int allSocre_;
    /**
     * <code>optional sint32 allSocre = 7;</code>
     *
     * <pre>
     *总分数
     * </pre>
     */
    public boolean hasAllSocre() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 allSocre = 7;</code>
     *
     * <pre>
     *总分数
     * </pre>
     */
    public int getAllSocre() {
      return allSocre_;
    }

    // optional sint32 xiQian = 8;
    public static final int XIQIAN_FIELD_NUMBER = 8;
    private int xiQian_;
    /**
     * <code>optional sint32 xiQian = 8;</code>
     *
     * <pre>
     *喜钱
     * </pre>
     */
    public boolean hasXiQian() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 xiQian = 8;</code>
     *
     * <pre>
     *喜钱
     * </pre>
     */
    public int getXiQian() {
      return xiQian_;
    }

    // optional bool isQiPai = 9;
    public static final int ISQIPAI_FIELD_NUMBER = 9;
    private boolean isQiPai_;
    /**
     * <code>optional bool isQiPai = 9;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    public boolean hasIsQiPai() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isQiPai = 9;</code>
     *
     * <pre>
     *是否弃牌
     * </pre>
     */
    public boolean getIsQiPai() {
      return isQiPai_;
    }

    // optional bool isKanPai = 10;
    public static final int ISKANPAI_FIELD_NUMBER = 10;
    private boolean isKanPai_;
    /**
     * <code>optional bool isKanPai = 10;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    public boolean hasIsKanPai() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool isKanPai = 10;</code>
     *
     * <pre>
     *是否看牌
     * </pre>
     */
    public boolean getIsKanPai() {
      return isKanPai_;
    }

    // optional sint32 cardType = 11;
    public static final int CARDTYPE_FIELD_NUMBER = 11;
    private int cardType_;
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint32 cardType = 11;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional sint32 isBanker = 12;
    public static final int ISBANKER_FIELD_NUMBER = 12;
    private int isBanker_;
    /**
     * <code>optional sint32 isBanker = 12;</code>
     *
     * <pre>
     *是否是庄家
     * </pre>
     */
    public boolean hasIsBanker() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sint32 isBanker = 12;</code>
     *
     * <pre>
     *是否是庄家
     * </pre>
     */
    public int getIsBanker() {
      return isBanker_;
    }

    // optional sint32 result = 13;
    public static final int RESULT_FIELD_NUMBER = 13;
    private int result_;
    /**
     * <code>optional sint32 result = 13;</code>
     *
     * <pre>
     * 1 win 2 lose 3 even
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional sint32 result = 13;</code>
     *
     * <pre>
     * 1 win 2 lose 3 even
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    private void initFields() {
      position_ = 0;
      playerId_ = 0;
      playerName_ = "";
      handcard_ = java.util.Collections.emptyList();
      lastScore_ = 0;
      score_ = 0;
      allSocre_ = 0;
      xiQian_ = 0;
      isQiPai_ = false;
      isKanPai_ = false;
      cardType_ = 0;
      isBanker_ = 0;
      result_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPlayerNameBytes());
      }
      for (int i = 0; i < handcard_.size(); i++) {
        output.writeSInt32(4, handcard_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(5, lastScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(6, score_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(7, allSocre_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, xiQian_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(9, isQiPai_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(10, isKanPai_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt32(11, cardType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt32(12, isBanker_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSInt32(13, result_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPlayerNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handcard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(handcard_.get(i));
        }
        size += dataSize;
        size += 1 * getHandcardList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, lastScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, score_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, allSocre_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, xiQian_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isQiPai_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isKanPai_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, cardType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(12, isBanker_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(13, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperPlayerSettle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperPlayerSettle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperPlayerSettle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperPlayerSettleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerSettle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerSettle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperPlayerSettle.class, packet.zjh.ZJH.ZJHGameOperPlayerSettle.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperPlayerSettle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        handcard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        lastScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        allSocre_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        xiQian_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        isQiPai_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        isKanPai_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        isBanker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperPlayerSettle_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerSettle getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperPlayerSettle.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerSettle build() {
        packet.zjh.ZJH.ZJHGameOperPlayerSettle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperPlayerSettle buildPartial() {
        packet.zjh.ZJH.ZJHGameOperPlayerSettle result = new packet.zjh.ZJH.ZJHGameOperPlayerSettle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerName_ = playerName_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          handcard_ = java.util.Collections.unmodifiableList(handcard_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.handcard_ = handcard_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastScore_ = lastScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.allSocre_ = allSocre_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.xiQian_ = xiQian_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isQiPai_ = isQiPai_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isKanPai_ = isKanPai_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isBanker_ = isBanker_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperPlayerSettle) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperPlayerSettle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperPlayerSettle other) {
        if (other == packet.zjh.ZJH.ZJHGameOperPlayerSettle.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000004;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (!other.handcard_.isEmpty()) {
          if (handcard_.isEmpty()) {
            handcard_ = other.handcard_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHandcardIsMutable();
            handcard_.addAll(other.handcard_);
          }
          onChanged();
        }
        if (other.hasLastScore()) {
          setLastScore(other.getLastScore());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasAllSocre()) {
          setAllSocre(other.getAllSocre());
        }
        if (other.hasXiQian()) {
          setXiQian(other.getXiQian());
        }
        if (other.hasIsQiPai()) {
          setIsQiPai(other.getIsQiPai());
        }
        if (other.hasIsKanPai()) {
          setIsKanPai(other.getIsKanPai());
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasIsBanker()) {
          setIsBanker(other.getIsBanker());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperPlayerSettle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperPlayerSettle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sint32 position = 1;
      private int position_ ;
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000001;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 position = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 playerId = 2;
      private int playerId_ ;
      /**
       * <code>optional sint32 playerId = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 playerId = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional sint32 playerId = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 playerId = 2;</code>
       *
       * <pre>
       *ID
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // optional string playerName = 3;
      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       *昵称
       * </pre>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       *昵称
       * </pre>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       *昵称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       *昵称
       * </pre>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       *昵称
       * </pre>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       *昵称
       * </pre>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        playerName_ = value;
        onChanged();
        return this;
      }

      // repeated sint32 handcard = 4;
      private java.util.List<java.lang.Integer> handcard_ = java.util.Collections.emptyList();
      private void ensureHandcardIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          handcard_ = new java.util.ArrayList<java.lang.Integer>(handcard_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandcardList() {
        return java.util.Collections.unmodifiableList(handcard_);
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandcardCount() {
        return handcard_.size();
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandcard(int index) {
        return handcard_.get(index);
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder setHandcard(
          int index, int value) {
        ensureHandcardIsMutable();
        handcard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addHandcard(int value) {
        ensureHandcardIsMutable();
        handcard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addAllHandcard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandcardIsMutable();
        super.addAll(values, handcard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sint32 handcard = 4;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder clearHandcard() {
        handcard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional sint32 lastScore = 5;
      private int lastScore_ ;
      /**
       * <code>optional sint32 lastScore = 5;</code>
       *
       * <pre>
       *上局得分
       * </pre>
       */
      public boolean hasLastScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 lastScore = 5;</code>
       *
       * <pre>
       *上局得分
       * </pre>
       */
      public int getLastScore() {
        return lastScore_;
      }
      /**
       * <code>optional sint32 lastScore = 5;</code>
       *
       * <pre>
       *上局得分
       * </pre>
       */
      public Builder setLastScore(int value) {
        bitField0_ |= 0x00000010;
        lastScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 lastScore = 5;</code>
       *
       * <pre>
       *上局得分
       * </pre>
       */
      public Builder clearLastScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastScore_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 score = 6;
      private int score_ ;
      /**
       * <code>optional sint32 score = 6;</code>
       *
       * <pre>
       *本局得分
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 score = 6;</code>
       *
       * <pre>
       *本局得分
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional sint32 score = 6;</code>
       *
       * <pre>
       *本局得分
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000020;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 score = 6;</code>
       *
       * <pre>
       *本局得分
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000020);
        score_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 allSocre = 7;
      private int allSocre_ ;
      /**
       * <code>optional sint32 allSocre = 7;</code>
       *
       * <pre>
       *总分数
       * </pre>
       */
      public boolean hasAllSocre() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 allSocre = 7;</code>
       *
       * <pre>
       *总分数
       * </pre>
       */
      public int getAllSocre() {
        return allSocre_;
      }
      /**
       * <code>optional sint32 allSocre = 7;</code>
       *
       * <pre>
       *总分数
       * </pre>
       */
      public Builder setAllSocre(int value) {
        bitField0_ |= 0x00000040;
        allSocre_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 allSocre = 7;</code>
       *
       * <pre>
       *总分数
       * </pre>
       */
      public Builder clearAllSocre() {
        bitField0_ = (bitField0_ & ~0x00000040);
        allSocre_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 xiQian = 8;
      private int xiQian_ ;
      /**
       * <code>optional sint32 xiQian = 8;</code>
       *
       * <pre>
       *喜钱
       * </pre>
       */
      public boolean hasXiQian() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 xiQian = 8;</code>
       *
       * <pre>
       *喜钱
       * </pre>
       */
      public int getXiQian() {
        return xiQian_;
      }
      /**
       * <code>optional sint32 xiQian = 8;</code>
       *
       * <pre>
       *喜钱
       * </pre>
       */
      public Builder setXiQian(int value) {
        bitField0_ |= 0x00000080;
        xiQian_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 xiQian = 8;</code>
       *
       * <pre>
       *喜钱
       * </pre>
       */
      public Builder clearXiQian() {
        bitField0_ = (bitField0_ & ~0x00000080);
        xiQian_ = 0;
        onChanged();
        return this;
      }

      // optional bool isQiPai = 9;
      private boolean isQiPai_ ;
      /**
       * <code>optional bool isQiPai = 9;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public boolean hasIsQiPai() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool isQiPai = 9;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public boolean getIsQiPai() {
        return isQiPai_;
      }
      /**
       * <code>optional bool isQiPai = 9;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public Builder setIsQiPai(boolean value) {
        bitField0_ |= 0x00000100;
        isQiPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isQiPai = 9;</code>
       *
       * <pre>
       *是否弃牌
       * </pre>
       */
      public Builder clearIsQiPai() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isQiPai_ = false;
        onChanged();
        return this;
      }

      // optional bool isKanPai = 10;
      private boolean isKanPai_ ;
      /**
       * <code>optional bool isKanPai = 10;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public boolean hasIsKanPai() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool isKanPai = 10;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public boolean getIsKanPai() {
        return isKanPai_;
      }
      /**
       * <code>optional bool isKanPai = 10;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public Builder setIsKanPai(boolean value) {
        bitField0_ |= 0x00000200;
        isKanPai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isKanPai = 10;</code>
       *
       * <pre>
       *是否看牌
       * </pre>
       */
      public Builder clearIsKanPai() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isKanPai_ = false;
        onChanged();
        return this;
      }

      // optional sint32 cardType = 11;
      private int cardType_ ;
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000400;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 cardType = 11;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 isBanker = 12;
      private int isBanker_ ;
      /**
       * <code>optional sint32 isBanker = 12;</code>
       *
       * <pre>
       *是否是庄家
       * </pre>
       */
      public boolean hasIsBanker() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional sint32 isBanker = 12;</code>
       *
       * <pre>
       *是否是庄家
       * </pre>
       */
      public int getIsBanker() {
        return isBanker_;
      }
      /**
       * <code>optional sint32 isBanker = 12;</code>
       *
       * <pre>
       *是否是庄家
       * </pre>
       */
      public Builder setIsBanker(int value) {
        bitField0_ |= 0x00000800;
        isBanker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 isBanker = 12;</code>
       *
       * <pre>
       *是否是庄家
       * </pre>
       */
      public Builder clearIsBanker() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isBanker_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 result = 13;
      private int result_ ;
      /**
       * <code>optional sint32 result = 13;</code>
       *
       * <pre>
       * 1 win 2 lose 3 even
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional sint32 result = 13;</code>
       *
       * <pre>
       * 1 win 2 lose 3 even
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional sint32 result = 13;</code>
       *
       * <pre>
       * 1 win 2 lose 3 even
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00001000;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 result = 13;</code>
       *
       * <pre>
       * 1 win 2 lose 3 even
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00001000);
        result_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperPlayerSettle)
    }

    static {
      defaultInstance = new ZJHGameOperPlayerSettle(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperPlayerSettle)
  }

  public interface ZJHGameOperFinalSettleSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint32 roomId = 1;
    /**
     * <code>optional sint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional sint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    int getRoomId();

    // optional sint32 innings = 2;
    /**
     * <code>optional sint32 innings = 2;</code>
     *
     * <pre>
     *总局数
     * </pre>
     */
    boolean hasInnings();
    /**
     * <code>optional sint32 innings = 2;</code>
     *
     * <pre>
     *总局数
     * </pre>
     */
    int getInnings();

    // repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    java.util.List<packet.zjh.ZJH.ZJHPlayerFinalResult> 
        getDetailList();
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    packet.zjh.ZJH.ZJHPlayerFinalResult getDetail(int index);
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    int getDetailCount();
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    java.util.List<? extends packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder> 
        getDetailOrBuilderList();
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder getDetailOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHGameOperFinalSettleSyn}
   */
  public static final class ZJHGameOperFinalSettleSyn extends
      com.google.protobuf.GeneratedMessage
      implements ZJHGameOperFinalSettleSynOrBuilder {
    // Use ZJHGameOperFinalSettleSyn.newBuilder() to construct.
    private ZJHGameOperFinalSettleSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHGameOperFinalSettleSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHGameOperFinalSettleSyn defaultInstance;
    public static ZJHGameOperFinalSettleSyn getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHGameOperFinalSettleSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHGameOperFinalSettleSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              innings_ = input.readSInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                detail_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHPlayerFinalResult>();
                mutable_bitField0_ |= 0x00000004;
              }
              detail_.add(input.readMessage(packet.zjh.ZJH.ZJHPlayerFinalResult.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          detail_ = java.util.Collections.unmodifiableList(detail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.class, packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHGameOperFinalSettleSyn> PARSER =
        new com.google.protobuf.AbstractParser<ZJHGameOperFinalSettleSyn>() {
      public ZJHGameOperFinalSettleSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHGameOperFinalSettleSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHGameOperFinalSettleSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional sint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional sint32 innings = 2;
    public static final int INNINGS_FIELD_NUMBER = 2;
    private int innings_;
    /**
     * <code>optional sint32 innings = 2;</code>
     *
     * <pre>
     *总局数
     * </pre>
     */
    public boolean hasInnings() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 innings = 2;</code>
     *
     * <pre>
     *总局数
     * </pre>
     */
    public int getInnings() {
      return innings_;
    }

    // repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;
    public static final int DETAIL_FIELD_NUMBER = 3;
    private java.util.List<packet.zjh.ZJH.ZJHPlayerFinalResult> detail_;
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public java.util.List<packet.zjh.ZJH.ZJHPlayerFinalResult> getDetailList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public java.util.List<? extends packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder> 
        getDetailOrBuilderList() {
      return detail_;
    }
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public int getDetailCount() {
      return detail_.size();
    }
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public packet.zjh.ZJH.ZJHPlayerFinalResult getDetail(int index) {
      return detail_.get(index);
    }
    /**
     * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder getDetailOrBuilder(
        int index) {
      return detail_.get(index);
    }

    private void initFields() {
      roomId_ = 0;
      innings_ = 0;
      detail_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, innings_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        output.writeMessage(3, detail_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, innings_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, detail_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHGameOperFinalSettleSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHGameOperFinalSettleSyn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHGameOperFinalSettleSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.class, packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        innings_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          detailBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_descriptor;
      }

      public packet.zjh.ZJH.ZJHGameOperFinalSettleSyn getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHGameOperFinalSettleSyn build() {
        packet.zjh.ZJH.ZJHGameOperFinalSettleSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHGameOperFinalSettleSyn buildPartial() {
        packet.zjh.ZJH.ZJHGameOperFinalSettleSyn result = new packet.zjh.ZJH.ZJHGameOperFinalSettleSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.innings_ = innings_;
        if (detailBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            detail_ = java.util.Collections.unmodifiableList(detail_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.detail_ = detail_;
        } else {
          result.detail_ = detailBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHGameOperFinalSettleSyn) {
          return mergeFrom((packet.zjh.ZJH.ZJHGameOperFinalSettleSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHGameOperFinalSettleSyn other) {
        if (other == packet.zjh.ZJH.ZJHGameOperFinalSettleSyn.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasInnings()) {
          setInnings(other.getInnings());
        }
        if (detailBuilder_ == null) {
          if (!other.detail_.isEmpty()) {
            if (detail_.isEmpty()) {
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDetailIsMutable();
              detail_.addAll(other.detail_);
            }
            onChanged();
          }
        } else {
          if (!other.detail_.isEmpty()) {
            if (detailBuilder_.isEmpty()) {
              detailBuilder_.dispose();
              detailBuilder_ = null;
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000004);
              detailBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailFieldBuilder() : null;
            } else {
              detailBuilder_.addAllMessages(other.detail_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHGameOperFinalSettleSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHGameOperFinalSettleSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>optional sint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional sint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 innings = 2;
      private int innings_ ;
      /**
       * <code>optional sint32 innings = 2;</code>
       *
       * <pre>
       *总局数
       * </pre>
       */
      public boolean hasInnings() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 innings = 2;</code>
       *
       * <pre>
       *总局数
       * </pre>
       */
      public int getInnings() {
        return innings_;
      }
      /**
       * <code>optional sint32 innings = 2;</code>
       *
       * <pre>
       *总局数
       * </pre>
       */
      public Builder setInnings(int value) {
        bitField0_ |= 0x00000002;
        innings_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 innings = 2;</code>
       *
       * <pre>
       *总局数
       * </pre>
       */
      public Builder clearInnings() {
        bitField0_ = (bitField0_ & ~0x00000002);
        innings_ = 0;
        onChanged();
        return this;
      }

      // repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;
      private java.util.List<packet.zjh.ZJH.ZJHPlayerFinalResult> detail_ =
        java.util.Collections.emptyList();
      private void ensureDetailIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          detail_ = new java.util.ArrayList<packet.zjh.ZJH.ZJHPlayerFinalResult>(detail_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHPlayerFinalResult, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder, packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder> detailBuilder_;

      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHPlayerFinalResult> getDetailList() {
        if (detailBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detail_);
        } else {
          return detailBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public int getDetailCount() {
        if (detailBuilder_ == null) {
          return detail_.size();
        } else {
          return detailBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public packet.zjh.ZJH.ZJHPlayerFinalResult getDetail(int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);
        } else {
          return detailBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder setDetail(
          int index, packet.zjh.ZJH.ZJHPlayerFinalResult value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.set(index, value);
          onChanged();
        } else {
          detailBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder setDetail(
          int index, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addDetail(packet.zjh.ZJH.ZJHPlayerFinalResult value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(value);
          onChanged();
        } else {
          detailBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addDetail(
          int index, packet.zjh.ZJH.ZJHPlayerFinalResult value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(index, value);
          onChanged();
        } else {
          detailBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addDetail(
          packet.zjh.ZJH.ZJHPlayerFinalResult.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addDetail(
          int index, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addAllDetail(
          java.lang.Iterable<? extends packet.zjh.ZJH.ZJHPlayerFinalResult> values) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          super.addAll(values, detail_);
          onChanged();
        } else {
          detailBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder clearDetail() {
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          detailBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder removeDetail(int index) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.remove(index);
          onChanged();
        } else {
          detailBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public packet.zjh.ZJH.ZJHPlayerFinalResult.Builder getDetailBuilder(
          int index) {
        return getDetailFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder getDetailOrBuilder(
          int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);  } else {
          return detailBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public java.util.List<? extends packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder> 
           getDetailOrBuilderList() {
        if (detailBuilder_ != null) {
          return detailBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detail_);
        }
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public packet.zjh.ZJH.ZJHPlayerFinalResult.Builder addDetailBuilder() {
        return getDetailFieldBuilder().addBuilder(
            packet.zjh.ZJH.ZJHPlayerFinalResult.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public packet.zjh.ZJH.ZJHPlayerFinalResult.Builder addDetailBuilder(
          int index) {
        return getDetailFieldBuilder().addBuilder(
            index, packet.zjh.ZJH.ZJHPlayerFinalResult.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.zjh.ZJHPlayerFinalResult detail = 3;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public java.util.List<packet.zjh.ZJH.ZJHPlayerFinalResult.Builder> 
           getDetailBuilderList() {
        return getDetailFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          packet.zjh.ZJH.ZJHPlayerFinalResult, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder, packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder> 
          getDetailFieldBuilder() {
        if (detailBuilder_ == null) {
          detailBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              packet.zjh.ZJH.ZJHPlayerFinalResult, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder, packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder>(
                  detail_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        return detailBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHGameOperFinalSettleSyn)
    }

    static {
      defaultInstance = new ZJHGameOperFinalSettleSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHGameOperFinalSettleSyn)
  }

  public interface ZJHPlayerFinalResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint64 playerId = 1;
    /**
     * <code>optional sint64 playerId = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional sint64 playerId = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    long getPlayerId();

    // optional string playerName = 2;
    /**
     * <code>optional string playerName = 2;</code>
     *
     * <pre>
     *玩家昵称
     * </pre>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string playerName = 2;</code>
     *
     * <pre>
     *玩家昵称
     * </pre>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string playerName = 2;</code>
     *
     * <pre>
     *玩家昵称
     * </pre>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    // optional sint32 position = 3;
    /**
     * <code>optional sint32 position = 3;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional sint32 position = 3;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    int getPosition();

    // optional string headImage = 4;
    /**
     * <code>optional string headImage = 4;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    boolean hasHeadImage();
    /**
     * <code>optional string headImage = 4;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    java.lang.String getHeadImage();
    /**
     * <code>optional string headImage = 4;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImageBytes();

    // optional sint32 allScore = 5;
    /**
     * <code>optional sint32 allScore = 5;</code>
     *
     * <pre>
     *玩家总分
     * </pre>
     */
    boolean hasAllScore();
    /**
     * <code>optional sint32 allScore = 5;</code>
     *
     * <pre>
     *玩家总分
     * </pre>
     */
    int getAllScore();

    // optional sint32 maxScore = 6;
    /**
     * <code>optional sint32 maxScore = 6;</code>
     *
     * <pre>
     *单局最高得分
     * </pre>
     */
    boolean hasMaxScore();
    /**
     * <code>optional sint32 maxScore = 6;</code>
     *
     * <pre>
     *单局最高得分
     * </pre>
     */
    int getMaxScore();

    // optional sint32 maxCardType = 7;
    /**
     * <code>optional sint32 maxCardType = 7;</code>
     *
     * <pre>
     *最大牌型
     * </pre>
     */
    boolean hasMaxCardType();
    /**
     * <code>optional sint32 maxCardType = 7;</code>
     *
     * <pre>
     *最大牌型
     * </pre>
     */
    int getMaxCardType();

    // optional sint32 winNum = 8;
    /**
     * <code>optional sint32 winNum = 8;</code>
     *
     * <pre>
     *玩家赢的局数
     * </pre>
     */
    boolean hasWinNum();
    /**
     * <code>optional sint32 winNum = 8;</code>
     *
     * <pre>
     *玩家赢的局数
     * </pre>
     */
    int getWinNum();

    // optional sint32 loseNum = 9;
    /**
     * <code>optional sint32 loseNum = 9;</code>
     *
     * <pre>
     *玩家输的局数
     * </pre>
     */
    boolean hasLoseNum();
    /**
     * <code>optional sint32 loseNum = 9;</code>
     *
     * <pre>
     *玩家输的局数
     * </pre>
     */
    int getLoseNum();

    // optional bool roomOwner = 10;
    /**
     * <code>optional bool roomOwner = 10;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    boolean hasRoomOwner();
    /**
     * <code>optional bool roomOwner = 10;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    boolean getRoomOwner();
  }
  /**
   * Protobuf type {@code packet.zjh.ZJHPlayerFinalResult}
   */
  public static final class ZJHPlayerFinalResult extends
      com.google.protobuf.GeneratedMessage
      implements ZJHPlayerFinalResultOrBuilder {
    // Use ZJHPlayerFinalResult.newBuilder() to construct.
    private ZJHPlayerFinalResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZJHPlayerFinalResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZJHPlayerFinalResult defaultInstance;
    public static ZJHPlayerFinalResult getDefaultInstance() {
      return defaultInstance;
    }

    public ZJHPlayerFinalResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZJHPlayerFinalResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readSInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              playerName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              position_ = input.readSInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              headImage_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              allScore_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              maxScore_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              maxCardType_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              winNum_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              loseNum_ = input.readSInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              roomOwner_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHPlayerFinalResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.zjh.ZJH.internal_static_packet_zjh_ZJHPlayerFinalResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.zjh.ZJH.ZJHPlayerFinalResult.class, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder.class);
    }

    public static com.google.protobuf.Parser<ZJHPlayerFinalResult> PARSER =
        new com.google.protobuf.AbstractParser<ZJHPlayerFinalResult>() {
      public ZJHPlayerFinalResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZJHPlayerFinalResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZJHPlayerFinalResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional sint64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional sint64 playerId = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 playerId = 1;</code>
     *
     * <pre>
     *玩家ID
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    // optional string playerName = 2;
    public static final int PLAYERNAME_FIELD_NUMBER = 2;
    private java.lang.Object playerName_;
    /**
     * <code>optional string playerName = 2;</code>
     *
     * <pre>
     *玩家昵称
     * </pre>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string playerName = 2;</code>
     *
     * <pre>
     *玩家昵称
     * </pre>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string playerName = 2;</code>
     *
     * <pre>
     *玩家昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional sint32 position = 3;
    public static final int POSITION_FIELD_NUMBER = 3;
    private int position_;
    /**
     * <code>optional sint32 position = 3;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 position = 3;</code>
     *
     * <pre>
     *玩家位置
     * </pre>
     */
    public int getPosition() {
      return position_;
    }

    // optional string headImage = 4;
    public static final int HEADIMAGE_FIELD_NUMBER = 4;
    private java.lang.Object headImage_;
    /**
     * <code>optional string headImage = 4;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public boolean hasHeadImage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string headImage = 4;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public java.lang.String getHeadImage() {
      java.lang.Object ref = headImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headImage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headImage = 4;</code>
     *
     * <pre>
     *玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImageBytes() {
      java.lang.Object ref = headImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional sint32 allScore = 5;
    public static final int ALLSCORE_FIELD_NUMBER = 5;
    private int allScore_;
    /**
     * <code>optional sint32 allScore = 5;</code>
     *
     * <pre>
     *玩家总分
     * </pre>
     */
    public boolean hasAllScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 allScore = 5;</code>
     *
     * <pre>
     *玩家总分
     * </pre>
     */
    public int getAllScore() {
      return allScore_;
    }

    // optional sint32 maxScore = 6;
    public static final int MAXSCORE_FIELD_NUMBER = 6;
    private int maxScore_;
    /**
     * <code>optional sint32 maxScore = 6;</code>
     *
     * <pre>
     *单局最高得分
     * </pre>
     */
    public boolean hasMaxScore() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 maxScore = 6;</code>
     *
     * <pre>
     *单局最高得分
     * </pre>
     */
    public int getMaxScore() {
      return maxScore_;
    }

    // optional sint32 maxCardType = 7;
    public static final int MAXCARDTYPE_FIELD_NUMBER = 7;
    private int maxCardType_;
    /**
     * <code>optional sint32 maxCardType = 7;</code>
     *
     * <pre>
     *最大牌型
     * </pre>
     */
    public boolean hasMaxCardType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 maxCardType = 7;</code>
     *
     * <pre>
     *最大牌型
     * </pre>
     */
    public int getMaxCardType() {
      return maxCardType_;
    }

    // optional sint32 winNum = 8;
    public static final int WINNUM_FIELD_NUMBER = 8;
    private int winNum_;
    /**
     * <code>optional sint32 winNum = 8;</code>
     *
     * <pre>
     *玩家赢的局数
     * </pre>
     */
    public boolean hasWinNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 winNum = 8;</code>
     *
     * <pre>
     *玩家赢的局数
     * </pre>
     */
    public int getWinNum() {
      return winNum_;
    }

    // optional sint32 loseNum = 9;
    public static final int LOSENUM_FIELD_NUMBER = 9;
    private int loseNum_;
    /**
     * <code>optional sint32 loseNum = 9;</code>
     *
     * <pre>
     *玩家输的局数
     * </pre>
     */
    public boolean hasLoseNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 loseNum = 9;</code>
     *
     * <pre>
     *玩家输的局数
     * </pre>
     */
    public int getLoseNum() {
      return loseNum_;
    }

    // optional bool roomOwner = 10;
    public static final int ROOMOWNER_FIELD_NUMBER = 10;
    private boolean roomOwner_;
    /**
     * <code>optional bool roomOwner = 10;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    public boolean hasRoomOwner() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool roomOwner = 10;</code>
     *
     * <pre>
     *是否是否房主
     * </pre>
     */
    public boolean getRoomOwner() {
      return roomOwner_;
    }

    private void initFields() {
      playerId_ = 0L;
      playerName_ = "";
      position_ = 0;
      headImage_ = "";
      allScore_ = 0;
      maxScore_ = 0;
      maxCardType_ = 0;
      winNum_ = 0;
      loseNum_ = 0;
      roomOwner_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, position_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHeadImageBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, allScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, maxScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, maxCardType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, winNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(9, loseNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, roomOwner_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, position_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHeadImageBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, allScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, maxScore_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, maxCardType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, winNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, loseNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, roomOwner_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static packet.zjh.ZJH.ZJHPlayerFinalResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(packet.zjh.ZJH.ZJHPlayerFinalResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.zjh.ZJHPlayerFinalResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements packet.zjh.ZJH.ZJHPlayerFinalResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHPlayerFinalResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHPlayerFinalResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.zjh.ZJH.ZJHPlayerFinalResult.class, packet.zjh.ZJH.ZJHPlayerFinalResult.Builder.class);
      }

      // Construct using packet.zjh.ZJH.ZJHPlayerFinalResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        headImage_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        allScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        maxScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        winNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        loseNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        roomOwner_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.zjh.ZJH.internal_static_packet_zjh_ZJHPlayerFinalResult_descriptor;
      }

      public packet.zjh.ZJH.ZJHPlayerFinalResult getDefaultInstanceForType() {
        return packet.zjh.ZJH.ZJHPlayerFinalResult.getDefaultInstance();
      }

      public packet.zjh.ZJH.ZJHPlayerFinalResult build() {
        packet.zjh.ZJH.ZJHPlayerFinalResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public packet.zjh.ZJH.ZJHPlayerFinalResult buildPartial() {
        packet.zjh.ZJH.ZJHPlayerFinalResult result = new packet.zjh.ZJH.ZJHPlayerFinalResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.headImage_ = headImage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.allScore_ = allScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.maxScore_ = maxScore_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxCardType_ = maxCardType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.winNum_ = winNum_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.loseNum_ = loseNum_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.roomOwner_ = roomOwner_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.zjh.ZJH.ZJHPlayerFinalResult) {
          return mergeFrom((packet.zjh.ZJH.ZJHPlayerFinalResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.zjh.ZJH.ZJHPlayerFinalResult other) {
        if (other == packet.zjh.ZJH.ZJHPlayerFinalResult.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000002;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasHeadImage()) {
          bitField0_ |= 0x00000008;
          headImage_ = other.headImage_;
          onChanged();
        }
        if (other.hasAllScore()) {
          setAllScore(other.getAllScore());
        }
        if (other.hasMaxScore()) {
          setMaxScore(other.getMaxScore());
        }
        if (other.hasMaxCardType()) {
          setMaxCardType(other.getMaxCardType());
        }
        if (other.hasWinNum()) {
          setWinNum(other.getWinNum());
        }
        if (other.hasLoseNum()) {
          setLoseNum(other.getLoseNum());
        }
        if (other.hasRoomOwner()) {
          setRoomOwner(other.getRoomOwner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.zjh.ZJH.ZJHPlayerFinalResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.zjh.ZJH.ZJHPlayerFinalResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint64 playerId = 1;
      private long playerId_ ;
      /**
       * <code>optional sint64 playerId = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 playerId = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional sint64 playerId = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 playerId = 1;</code>
       *
       * <pre>
       *玩家ID
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // optional string playerName = 2;
      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string playerName = 2;</code>
       *
       * <pre>
       *玩家昵称
       * </pre>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string playerName = 2;</code>
       *
       * <pre>
       *玩家昵称
       * </pre>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string playerName = 2;</code>
       *
       * <pre>
       *玩家昵称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string playerName = 2;</code>
       *
       * <pre>
       *玩家昵称
       * </pre>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 2;</code>
       *
       * <pre>
       *玩家昵称
       * </pre>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 2;</code>
       *
       * <pre>
       *玩家昵称
       * </pre>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerName_ = value;
        onChanged();
        return this;
      }

      // optional sint32 position = 3;
      private int position_ ;
      /**
       * <code>optional sint32 position = 3;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 position = 3;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional sint32 position = 3;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000004;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 position = 3;</code>
       *
       * <pre>
       *玩家位置
       * </pre>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional string headImage = 4;
      private java.lang.Object headImage_ = "";
      /**
       * <code>optional string headImage = 4;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public boolean hasHeadImage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string headImage = 4;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public java.lang.String getHeadImage() {
        java.lang.Object ref = headImage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headImage = 4;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImageBytes() {
        java.lang.Object ref = headImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headImage = 4;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        headImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImage = 4;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder clearHeadImage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        headImage_ = getDefaultInstance().getHeadImage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headImage = 4;</code>
       *
       * <pre>
       *玩家头像
       * </pre>
       */
      public Builder setHeadImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        headImage_ = value;
        onChanged();
        return this;
      }

      // optional sint32 allScore = 5;
      private int allScore_ ;
      /**
       * <code>optional sint32 allScore = 5;</code>
       *
       * <pre>
       *玩家总分
       * </pre>
       */
      public boolean hasAllScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 allScore = 5;</code>
       *
       * <pre>
       *玩家总分
       * </pre>
       */
      public int getAllScore() {
        return allScore_;
      }
      /**
       * <code>optional sint32 allScore = 5;</code>
       *
       * <pre>
       *玩家总分
       * </pre>
       */
      public Builder setAllScore(int value) {
        bitField0_ |= 0x00000010;
        allScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 allScore = 5;</code>
       *
       * <pre>
       *玩家总分
       * </pre>
       */
      public Builder clearAllScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        allScore_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 maxScore = 6;
      private int maxScore_ ;
      /**
       * <code>optional sint32 maxScore = 6;</code>
       *
       * <pre>
       *单局最高得分
       * </pre>
       */
      public boolean hasMaxScore() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 maxScore = 6;</code>
       *
       * <pre>
       *单局最高得分
       * </pre>
       */
      public int getMaxScore() {
        return maxScore_;
      }
      /**
       * <code>optional sint32 maxScore = 6;</code>
       *
       * <pre>
       *单局最高得分
       * </pre>
       */
      public Builder setMaxScore(int value) {
        bitField0_ |= 0x00000020;
        maxScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 maxScore = 6;</code>
       *
       * <pre>
       *单局最高得分
       * </pre>
       */
      public Builder clearMaxScore() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxScore_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 maxCardType = 7;
      private int maxCardType_ ;
      /**
       * <code>optional sint32 maxCardType = 7;</code>
       *
       * <pre>
       *最大牌型
       * </pre>
       */
      public boolean hasMaxCardType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint32 maxCardType = 7;</code>
       *
       * <pre>
       *最大牌型
       * </pre>
       */
      public int getMaxCardType() {
        return maxCardType_;
      }
      /**
       * <code>optional sint32 maxCardType = 7;</code>
       *
       * <pre>
       *最大牌型
       * </pre>
       */
      public Builder setMaxCardType(int value) {
        bitField0_ |= 0x00000040;
        maxCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 maxCardType = 7;</code>
       *
       * <pre>
       *最大牌型
       * </pre>
       */
      public Builder clearMaxCardType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxCardType_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 winNum = 8;
      private int winNum_ ;
      /**
       * <code>optional sint32 winNum = 8;</code>
       *
       * <pre>
       *玩家赢的局数
       * </pre>
       */
      public boolean hasWinNum() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 winNum = 8;</code>
       *
       * <pre>
       *玩家赢的局数
       * </pre>
       */
      public int getWinNum() {
        return winNum_;
      }
      /**
       * <code>optional sint32 winNum = 8;</code>
       *
       * <pre>
       *玩家赢的局数
       * </pre>
       */
      public Builder setWinNum(int value) {
        bitField0_ |= 0x00000080;
        winNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 winNum = 8;</code>
       *
       * <pre>
       *玩家赢的局数
       * </pre>
       */
      public Builder clearWinNum() {
        bitField0_ = (bitField0_ & ~0x00000080);
        winNum_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 loseNum = 9;
      private int loseNum_ ;
      /**
       * <code>optional sint32 loseNum = 9;</code>
       *
       * <pre>
       *玩家输的局数
       * </pre>
       */
      public boolean hasLoseNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint32 loseNum = 9;</code>
       *
       * <pre>
       *玩家输的局数
       * </pre>
       */
      public int getLoseNum() {
        return loseNum_;
      }
      /**
       * <code>optional sint32 loseNum = 9;</code>
       *
       * <pre>
       *玩家输的局数
       * </pre>
       */
      public Builder setLoseNum(int value) {
        bitField0_ |= 0x00000100;
        loseNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 loseNum = 9;</code>
       *
       * <pre>
       *玩家输的局数
       * </pre>
       */
      public Builder clearLoseNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        loseNum_ = 0;
        onChanged();
        return this;
      }

      // optional bool roomOwner = 10;
      private boolean roomOwner_ ;
      /**
       * <code>optional bool roomOwner = 10;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public boolean hasRoomOwner() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool roomOwner = 10;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public boolean getRoomOwner() {
        return roomOwner_;
      }
      /**
       * <code>optional bool roomOwner = 10;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public Builder setRoomOwner(boolean value) {
        bitField0_ |= 0x00000200;
        roomOwner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool roomOwner = 10;</code>
       *
       * <pre>
       *是否是否房主
       * </pre>
       */
      public Builder clearRoomOwner() {
        bitField0_ = (bitField0_ & ~0x00000200);
        roomOwner_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:packet.zjh.ZJHPlayerFinalResult)
    }

    static {
      defaultInstance = new ZJHPlayerFinalResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:packet.zjh.ZJHPlayerFinalResult)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperStartSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperStartSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperHandCardSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperHandCardSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperActorSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperActorSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperPlayerData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperPlayerData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperPlayerSettle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperPlayerSettle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_zjh_ZJHPlayerFinalResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_packet_zjh_ZJHPlayerFinalResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tZJH.proto\022\npacket.zjh\"\265\001\n\023ZJHGameOperS" +
      "tartSyn\022\021\n\tbankerPos\030\001 \001(\021\022;\n\017playerHand" +
      "Cards\030\002 \003(\0132\".packet.zjh.ZJHGameOperHand" +
      "CardSyn\022\021\n\treconnect\030\003 \001(\010\022\016\n\006lunNum\030\004 \001" +
      "(\021\022\r\n\005juNum\030\005 \001(\021\022\017\n\007zongZhu\030\006 \001(\021\022\013\n\003se" +
      "q\030d \001(\021\"\270\001\n\026ZJHGameOperHandCardSyn\022\020\n\010po" +
      "sition\030\001 \002(\021\022\021\n\thandCards\030\002 \003(\021\022\r\n\005socre" +
      "\030\005 \001(\021\022\016\n\006chouMa\030\006 \001(\021\022\017\n\007isQiPai\030\007 \001(\010\022" +
      "\016\n\006isWait\030\010 \001(\010\022\020\n\010isKanPai\030\t \001(\010\022\021\n\tcan" +
      "KanPai\030\n \001(\010\022\024\n\014playerDanZhu\030\013 \001(\021\",\n\030ZJ",
      "HGameOperPublicInfoSyn\022\020\n\010cardLeft\030\001 \003(\021" +
      "\"9\n\023ZJHGameOperActorSyn\022\020\n\010position\030\001 \002(" +
      "\021\022\020\n\010timeLeft\030\002 \002(\021\"\306\002\n\032ZJHGameOperPlaye" +
      "rActionSyn\022\020\n\010position\030\001 \002(\021\022\016\n\006action\030\002" +
      " \002(\021\022\021\n\tcardValue\030\003 \003(\021\022\016\n\006chouMa\030\004 \001(\021\022" +
      "\020\n\010biPaiPos\030\005 \001(\021\022\021\n\twinnerPos\030\006 \001(\021\022\025\n\r" +
      "playerZongZhu\030\007 \001(\021\022\024\n\014playerDanZhu\030\010 \001(" +
      "\021\022\023\n\013deskZongZhu\030\t \001(\021\022\016\n\006lunNum\030\n \001(\021\022\020" +
      "\n\010cardType\030\013 \001(\021\0225\n\nplayerData\030\014 \003(\0132!.p" +
      "acket.zjh.ZJHGameOperPlayerData\022\026\n\016biPai",
      "CardValue\030\r \003(\021\022\013\n\003seq\030d \001(\021\"?\n\025ZJHGameO" +
      "perPlayerData\022\020\n\010position\030\001 \002(\021\022\024\n\014playe" +
      "rDanZhu\030\002 \002(\021\"\204\001\n\035ZJHGameOperPlayerActio" +
      "nNotify\022\020\n\010position\030\001 \002(\021\022\017\n\007actions\030\002 \002" +
      "(\021\022\021\n\tjiaZhuNum\030\014 \003(\021\022\020\n\010biPaiPos\030\r \003(\021\022" +
      "\016\n\006genZhu\030\016 \001(\021\022\013\n\003seq\030d \001(\021\"n\n\026ZJHGameO" +
      "perPlayerHuSyn\022\020\n\010position\030\001 \002(\021\0223\n\006deta" +
      "il\030\002 \003(\0132#.packet.zjh.ZJHGameOperPlayerS" +
      "ettle\022\r\n\005juNum\030\003 \001(\021\"\376\001\n\027ZJHGameOperPlay" +
      "erSettle\022\020\n\010position\030\001 \002(\021\022\020\n\010playerId\030\002",
      " \001(\021\022\022\n\nplayerName\030\003 \001(\t\022\020\n\010handcard\030\004 \003" +
      "(\021\022\021\n\tlastScore\030\005 \001(\021\022\r\n\005score\030\006 \001(\021\022\020\n\010" +
      "allSocre\030\007 \001(\021\022\016\n\006xiQian\030\010 \001(\021\022\017\n\007isQiPa" +
      "i\030\t \001(\010\022\020\n\010isKanPai\030\n \001(\010\022\020\n\010cardType\030\013 " +
      "\001(\021\022\020\n\010isBanker\030\014 \001(\021\022\016\n\006result\030\r \001(\021\"n\n" +
      "\031ZJHGameOperFinalSettleSyn\022\016\n\006roomId\030\001 \001" +
      "(\021\022\017\n\007innings\030\002 \001(\021\0220\n\006detail\030\003 \003(\0132 .pa" +
      "cket.zjh.ZJHPlayerFinalResult\"\316\001\n\024ZJHPla" +
      "yerFinalResult\022\020\n\010playerId\030\001 \001(\022\022\022\n\nplay" +
      "erName\030\002 \001(\t\022\020\n\010position\030\003 \001(\021\022\021\n\theadIm",
      "age\030\004 \001(\t\022\020\n\010allScore\030\005 \001(\021\022\020\n\010maxScore\030" +
      "\006 \001(\021\022\023\n\013maxCardType\030\007 \001(\021\022\016\n\006winNum\030\010 \001" +
      "(\021\022\017\n\007loseNum\030\t \001(\021\022\021\n\troomOwner\030\n \001(\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_packet_zjh_ZJHGameOperStartSyn_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_packet_zjh_ZJHGameOperStartSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperStartSyn_descriptor,
              new java.lang.String[] { "BankerPos", "PlayerHandCards", "Reconnect", "LunNum", "JuNum", "ZongZhu", "Seq", });
          internal_static_packet_zjh_ZJHGameOperHandCardSyn_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_packet_zjh_ZJHGameOperHandCardSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperHandCardSyn_descriptor,
              new java.lang.String[] { "Position", "HandCards", "Socre", "ChouMa", "IsQiPai", "IsWait", "IsKanPai", "CanKanPai", "PlayerDanZhu", });
          internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperPublicInfoSyn_descriptor,
              new java.lang.String[] { "CardLeft", });
          internal_static_packet_zjh_ZJHGameOperActorSyn_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_packet_zjh_ZJHGameOperActorSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperActorSyn_descriptor,
              new java.lang.String[] { "Position", "TimeLeft", });
          internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperPlayerActionSyn_descriptor,
              new java.lang.String[] { "Position", "Action", "CardValue", "ChouMa", "BiPaiPos", "WinnerPos", "PlayerZongZhu", "PlayerDanZhu", "DeskZongZhu", "LunNum", "CardType", "PlayerData", "BiPaiCardValue", "Seq", });
          internal_static_packet_zjh_ZJHGameOperPlayerData_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_packet_zjh_ZJHGameOperPlayerData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperPlayerData_descriptor,
              new java.lang.String[] { "Position", "PlayerDanZhu", });
          internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperPlayerActionNotify_descriptor,
              new java.lang.String[] { "Position", "Actions", "JiaZhuNum", "BiPaiPos", "GenZhu", "Seq", });
          internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperPlayerHuSyn_descriptor,
              new java.lang.String[] { "Position", "Detail", "JuNum", });
          internal_static_packet_zjh_ZJHGameOperPlayerSettle_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_packet_zjh_ZJHGameOperPlayerSettle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperPlayerSettle_descriptor,
              new java.lang.String[] { "Position", "PlayerId", "PlayerName", "Handcard", "LastScore", "Score", "AllSocre", "XiQian", "IsQiPai", "IsKanPai", "CardType", "IsBanker", "Result", });
          internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHGameOperFinalSettleSyn_descriptor,
              new java.lang.String[] { "RoomId", "Innings", "Detail", });
          internal_static_packet_zjh_ZJHPlayerFinalResult_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_packet_zjh_ZJHPlayerFinalResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_packet_zjh_ZJHPlayerFinalResult_descriptor,
              new java.lang.String[] { "PlayerId", "PlayerName", "Position", "HeadImage", "AllScore", "MaxScore", "MaxCardType", "WinNum", "LoseNum", "RoomOwner", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
